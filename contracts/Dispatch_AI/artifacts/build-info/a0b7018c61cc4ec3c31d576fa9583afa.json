{
	"id": "a0b7018c61cc4ec3c31d576fa9583afa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dispatch_AI/Marketplace.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IIERC721 {\n    function safeMint(address _to,uint256 tokenID) external ;\n}\n/**\n * @title MarketPlace\n */\ncontract Marketplace is ReentrancyGuard , Ownable{\n    using SafeERC20 for IERC20;\n    using Counters for Counters.Counter;\n    Counters.Counter public tokenID;\n    Counters.Counter public listedID;\n    //Storage Variables\n    address NFTContractAddress;\n\n\n    //Struct\n    struct stoneDetail{\n        address owner;\n        address currentOwner;\n        uint tokenID;\n        uint capAmount;\n        string uri;\n        uint points; \n        bool isActive;\n    }\n\n    //Mapping\n    // mapping (address user=> uint) public totalMintPerUser;\n    // mapping (address user=> mapping (uint count => uint tokenID)) public getTokenIds;\n    mapping (address user=> mapping(Stones stone=>stoneDetail)) public getUserStoneDetail;\n    mapping (uint count => stoneDetail) public listStone;\n    mapping (address user=> uint) public totalListed;\n    mapping (Stones stones=> uint) public stoneCapAmount;\n\n\n\n    //ENUM\n\n    enum Stones{ Perl, Nelam, Yaqut, Firoza }\n\n    //Functions\n\n\n    constructor(address initialOwner,address nftContractAddress)\n        Ownable(initialOwner)\n    {\n        NFTContractAddress = nftContractAddress;\n        stoneCapAmount[Stones.Perl] = 100;\n        stoneCapAmount[Stones.Nelam] = 200;\n        stoneCapAmount[Stones.Yaqut] = 300;\n        stoneCapAmount[Stones.Firoza] = 400;\n    }\n\n    function setStonePrices(Stones _name,uint _price) public {\n        stoneCapAmount[_name] = _price;\n    }\n\n    function mintStone(address _to,string memory _uri, Stones _typ) public {\n        require(!getUserStoneDetail[_to][_typ].isActive,\"This Stone Is Already Active!\");\n        IIERC721(NFTContractAddress).safeMint(_to,tokenID.current());\n        getUserStoneDetail[_to][_typ] = stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true);\n        tokenID.increment();\n        // getTokenIds[_to][totalMintPerUser[_to]] = tokenID.current();\n        // totalMintPerUser[_to]++;\n    }\n    function list_Stone(address _to,Stones _typ) public {\n        require(getUserStoneDetail[_to][_typ].capAmount == getUserStoneDetail[_to][_typ].points,\"First Fill Stone Cap!\");\n        ERC721(NFTContractAddress).transferFrom(_to, address(this), getUserStoneDetail[_to][_typ].tokenID);\n        listStone[listedID.current()] = stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true);\n        listedID.increment();\n    }\n        function buy_Stone(address _to,Stones _typ) public {\n        require(listStone[listedID.current()].isActive,\"First Fill Stone Cap!\");\n        ERC721(NFTContractAddress).transferFrom(_to, address(this), getUserStoneDetail[_to][_typ].tokenID);\n        listStone[listedID.current()] = stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true);\n        listedID.increment();\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 786,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 788,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 796,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 800,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 806,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dispatch_AI/Marketplace.sol": {
				"IIERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeMint(address,uint256)": "a1448194"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dispatch_AI/Marketplace.sol\":\"IIERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Dispatch_AI/Marketplace.sol\":{\"keccak256\":\"0x4d841e1a9f07f04fd08adcbc7ad7759f5a8f33b08cc17b5c9ea31083cee4599a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17450bb7e47cd52a445eeea8d382b62106d42e94cf44c8012c7224a62968b4ed\",\"dweb:/ipfs/QmP3YgCbacWy2wTq4o45MgYHdLF3atWWhKMX6KTBEJLPWm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "enum Marketplace.Stones",
									"name": "_typ",
									"type": "uint8"
								}
							],
							"name": "buy_Stone",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "enum Marketplace.Stones",
									"name": "stone",
									"type": "uint8"
								}
							],
							"name": "getUserStoneDetail",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currentOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "capAmount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"name": "listStone",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "currentOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "capAmount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "enum Marketplace.Stones",
									"name": "_typ",
									"type": "uint8"
								}
							],
							"name": "list_Stone",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listedID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								},
								{
									"internalType": "enum Marketplace.Stones",
									"name": "_typ",
									"type": "uint8"
								}
							],
							"name": "mintStone",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Marketplace.Stones",
									"name": "_name",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setStonePrices",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Marketplace.Stones",
									"name": "stones",
									"type": "uint8"
								}
							],
							"name": "stoneCapAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenID",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "totalListed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "MarketPlace",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dispatch_AI/Marketplace.sol\":591:3561  contract Marketplace is ReentrancyGuard , Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1566:1893  constructor(address initialOwner,address nftContractAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1643:1655  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1692:1710  nftContractAddress */\n  dup1\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1671:1689  NFTContractAddress */\n  0x04\n  0x00\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1671:1710  NFTContractAddress = nftContractAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1750:1753  100 */\n  0x64\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1720:1734  stoneCapAmount */\n  0x08\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1720:1747  stoneCapAmount[Stones.Perl] */\n  0x00\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1735:1746  Stones.Perl */\n  dup1\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1720:1747  stoneCapAmount[Stones.Perl] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\ntag_15:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  tag_19\n  tag_17\n  jump\t// in\ntag_19:\ntag_18:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1720:1753  stoneCapAmount[Stones.Perl] = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1794:1797  200 */\n  0xc8\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1763:1777  stoneCapAmount */\n  0x08\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1763:1791  stoneCapAmount[Stones.Nelam] */\n  0x00\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1778:1790  Stones.Nelam */\n  0x01\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1763:1791  stoneCapAmount[Stones.Nelam] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  tag_21\n  tag_17\n  jump\t// in\ntag_21:\ntag_20:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  tag_23\n  tag_17\n  jump\t// in\ntag_23:\ntag_22:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1763:1797  stoneCapAmount[Stones.Nelam] = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1838:1841  300 */\n  0x012c\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1807:1821  stoneCapAmount */\n  0x08\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1807:1835  stoneCapAmount[Stones.Yaqut] */\n  0x00\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1822:1834  Stones.Yaqut */\n  0x02\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1807:1835  stoneCapAmount[Stones.Yaqut] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  tag_25\n  tag_17\n  jump\t// in\ntag_25:\ntag_24:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  tag_27\n  tag_17\n  jump\t// in\ntag_27:\ntag_26:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1807:1841  stoneCapAmount[Stones.Yaqut] = 300 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1883:1886  400 */\n  0x0190\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1851:1865  stoneCapAmount */\n  0x08\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1851:1880  stoneCapAmount[Stones.Firoza] */\n  0x00\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1866:1879  Stones.Firoza */\n  0x03\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1851:1880  stoneCapAmount[Stones.Firoza] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  tag_29\n  tag_17\n  jump\t// in\ntag_29:\ntag_28:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_30\n  jumpi\n  tag_31\n  tag_17\n  jump\t// in\ntag_31:\ntag_30:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1851:1886  stoneCapAmount[Stones.Firoza] = 400 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":1566:1893  constructor(address initialOwner,address nftContractAddress)... */\n  pop\n  pop\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":591:3561  contract Marketplace is ReentrancyGuard , Ownable{... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_35:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_37:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_38:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_48\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_37\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_39:\n    /* \"#utility.yul\":641:665   */\n  tag_50\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_38\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_51:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_40:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_53\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_39\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_56\n  tag_35\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":949:1068   */\ntag_55:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_57\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_40\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_58\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_40\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_41:\n    /* \"#utility.yul\":1445:1469   */\n  tag_60\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_38\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_11:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_62\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_41\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1890   */\ntag_17:\n    /* \"#utility.yul\":1758:1835   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1836   */\n  mstore\n    /* \"#utility.yul\":1855:1859   */\n  0x21\n    /* \"#utility.yul\":1852:1853   */\n  0x04\n    /* \"#utility.yul\":1845:1860   */\n  mstore\n    /* \"#utility.yul\":1879:1883   */\n  0x24\n    /* \"#utility.yul\":1876:1877   */\n  0x00\n    /* \"#utility.yul\":1869:1884   */\n  revert\n    /* \"contracts/Dispatch_AI/Marketplace.sol\":591:3561  contract Marketplace is ReentrancyGuard , Ownable{... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":591:3561  contract Marketplace is ReentrancyGuard , Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc17560d4\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc17560d4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcc2c9838\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd420e5cb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa5c42ef1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaa53d139\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0cc797e1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x166d98cf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4bc91efc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x55bd683c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6811e177\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":756:788  Counters.Counter public listedID */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1374:1422  mapping (address user=> uint) public totalListed */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1316:1368  mapping (uint count => stoneDetail) public listStone */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1899:2003  function setStonePrices(Stones _name,uint _price) public {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2502:3047  function list_Stone(address _to,Stones _typ) public {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":719:750  Counters.Counter public tokenID */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3056:3559  function buy_Stone(address _to,Stones _typ) public {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1428:1480  mapping (Stones stones=> uint) public stoneCapAmount */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1225:1310  mapping (address user=> mapping(Stones stone=>stoneDetail)) public getUserStoneDetail */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2009:2497  function mintStone(address _to,string memory _uri, Stones _typ) public {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":756:788  Counters.Counter public listedID */\n    tag_19:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1374:1422  mapping (address user=> uint) public totalListed */\n    tag_25:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1316:1368  mapping (uint count => stoneDetail) public listStone */\n    tag_30:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1899:2003  function setStonePrices(Stones _name,uint _price) public {... */\n    tag_36:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1990:1996  _price */\n      dup1\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1966:1980  stoneCapAmount */\n      0x08\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1966:1987  stoneCapAmount[_name] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1981:1986  _name */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1966:1987  stoneCapAmount[_name] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n    tag_76:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_79\n      jumpi\n      tag_80\n      tag_78\n      jump\t// in\n    tag_80:\n    tag_79:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1966:1996  stoneCapAmount[_name] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1899:2003  function setStonePrices(Stones _name,uint _price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2502:3047  function list_Stone(address _to,Stones _typ) public {... */\n    tag_40:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2615:2633  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2615:2638  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2634:2637  _to */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2615:2638  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2615:2644  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2639:2643  _typ */\n      dup3\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2615:2644  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      tag_83\n      tag_78\n      jump\t// in\n    tag_83:\n    tag_82:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_78\n      jump\t// in\n    tag_85:\n    tag_84:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2615:2651  getUserStoneDetail[_to][_typ].points */\n      0x05\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2590  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2595  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2591:2594  _to */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2595  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2601  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2596:2600  _typ */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2601  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_86\n      jumpi\n      tag_87\n      tag_78\n      jump\t// in\n    tag_87:\n    tag_86:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      tag_89\n      tag_78\n      jump\t// in\n    tag_89:\n    tag_88:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2611  getUserStoneDetail[_to][_typ].capAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2572:2651  getUserStoneDetail[_to][_typ].capAmount == getUserStoneDetail[_to][_typ].points */\n      eq\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2564:2676  require(getUserStoneDetail[_to][_typ].capAmount == getUserStoneDetail[_to][_typ].points,\"First Fill Stone Cap!\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2693:2711  NFTContractAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2686:2725  ERC721(NFTContractAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2726:2729  _to */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2739:2743  this */\n      address\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2746:2764  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2746:2769  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2765:2768  _to */\n      dup8\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2746:2769  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2746:2775  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2770:2774  _typ */\n      dup7\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2746:2775  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_93\n      jumpi\n      tag_94\n      tag_78\n      jump\t// in\n    tag_94:\n    tag_93:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_95\n      jumpi\n      tag_96\n      tag_78\n      jump\t// in\n    tag_96:\n    tag_95:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2746:2783  getUserStoneDetail[_to][_typ].tokenID */\n      0x02\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2686:2784  ERC721(NFTContractAddress).transferFrom(_to, address(this), getUserStoneDetail[_to][_typ].tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2838:2841  _to */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2850:2854  this */\n      address\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2856:2874  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2856:2879  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2875:2878  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2856:2879  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2856:2885  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2880:2884  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2856:2885  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_78\n      jump\t// in\n    tag_103:\n    tag_102:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_104\n      jumpi\n      tag_105\n      tag_78\n      jump\t// in\n    tag_105:\n    tag_104:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2856:2893  getUserStoneDetail[_to][_typ].tokenID */\n      0x02\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2894:2912  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2894:2917  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2913:2916  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2894:2917  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2894:2923  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2918:2922  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2894:2923  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_78\n      jump\t// in\n    tag_107:\n    tag_106:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_108\n      jumpi\n      tag_109\n      tag_78\n      jump\t// in\n    tag_109:\n    tag_108:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2894:2933  getUserStoneDetail[_to][_typ].capAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2934:2952  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2934:2957  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2953:2956  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2934:2957  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2934:2963  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2958:2962  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2934:2963  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_111\n      tag_78\n      jump\t// in\n    tag_111:\n    tag_110:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      tag_113\n      tag_78\n      jump\t// in\n    tag_113:\n    tag_112:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2934:2967  getUserStoneDetail[_to][_typ].uri */\n      0x04\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_70\n      jump\t// in\n    tag_114:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_70\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2968:2986  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2968:2991  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2987:2990  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2968:2991  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2968:2997  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2992:2996  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2968:2997  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      tag_120\n      tag_78\n      jump\t// in\n    tag_120:\n    tag_119:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_78\n      jump\t// in\n    tag_122:\n    tag_121:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2968:3004  getUserStoneDetail[_to][_typ].points */\n      0x05\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3005:3009  true */\n      0x01\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2826:3010  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2794:2803  listStone */\n      0x06\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2794:2823  listStone[listedID.current()] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2804:2822  listedID.current() */\n      tag_123\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2804:2812  listedID */\n      0x03\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2804:2820  listedID.current */\n      tag_124\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2804:2822  listedID.current() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2794:2823  listStone[listedID.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2794:3010  listStone[listedID.current()] = stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      swap1\n      dup2\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3020:3040  listedID.increment() */\n      tag_127\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3020:3028  listedID */\n      0x03\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3020:3038  listedID.increment */\n      tag_128\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3020:3040  listedID.increment() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2502:3047  function list_Stone(address _to,Stones _typ) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":719:750  Counters.Counter public tokenID */\n    tag_48:\n      0x02\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3056:3559  function buy_Stone(address _to,Stones _typ) public {... */\n    tag_52:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3125:3134  listStone */\n      0x06\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3125:3154  listStone[listedID.current()] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3135:3153  listedID.current() */\n      tag_137\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3135:3143  listedID */\n      0x03\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3135:3151  listedID.current */\n      tag_124\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3135:3153  listedID.current() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3125:3154  listStone[listedID.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3125:3163  listStone[listedID.current()].isActive */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3117:3188  require(listStone[listedID.current()].isActive,\"First Fill Stone Cap!\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_92\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3205:3223  NFTContractAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3198:3237  ERC721(NFTContractAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3238:3241  _to */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3251:3255  this */\n      address\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3258:3276  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3258:3281  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3277:3280  _to */\n      dup8\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3258:3281  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3258:3287  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3282:3286  _typ */\n      dup7\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3258:3287  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      tag_141\n      tag_78\n      jump\t// in\n    tag_141:\n    tag_140:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_143\n      tag_78\n      jump\t// in\n    tag_143:\n    tag_142:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3258:3295  getUserStoneDetail[_to][_typ].tokenID */\n      0x02\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3198:3296  ERC721(NFTContractAddress).transferFrom(_to, address(this), getUserStoneDetail[_to][_typ].tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_144:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3350:3353  _to */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3362:3366  this */\n      address\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3368:3386  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3368:3391  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3387:3390  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3368:3391  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3368:3397  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3392:3396  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3368:3397  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_78\n      jump\t// in\n    tag_149:\n    tag_148:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      tag_151\n      tag_78\n      jump\t// in\n    tag_151:\n    tag_150:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3368:3405  getUserStoneDetail[_to][_typ].tokenID */\n      0x02\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3406:3424  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3406:3429  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3425:3428  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3406:3429  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3406:3435  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3430:3434  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3406:3435  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_152\n      jumpi\n      tag_153\n      tag_78\n      jump\t// in\n    tag_153:\n    tag_152:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_154\n      jumpi\n      tag_155\n      tag_78\n      jump\t// in\n    tag_155:\n    tag_154:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3406:3445  getUserStoneDetail[_to][_typ].capAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3446:3464  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3446:3469  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3465:3468  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3446:3469  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3446:3475  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3470:3474  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3446:3475  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_156\n      jumpi\n      tag_157\n      tag_78\n      jump\t// in\n    tag_157:\n    tag_156:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_158\n      jumpi\n      tag_159\n      tag_78\n      jump\t// in\n    tag_159:\n    tag_158:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3446:3479  getUserStoneDetail[_to][_typ].uri */\n      0x04\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_70\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_70\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3480:3498  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3480:3503  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3499:3502  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3480:3503  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3480:3509  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3504:3508  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3480:3509  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_165\n      jumpi\n      tag_166\n      tag_78\n      jump\t// in\n    tag_166:\n    tag_165:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_167\n      jumpi\n      tag_168\n      tag_78\n      jump\t// in\n    tag_168:\n    tag_167:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3480:3516  getUserStoneDetail[_to][_typ].points */\n      0x05\n      add\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3517:3521  true */\n      0x01\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3338:3522  stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3306:3315  listStone */\n      0x06\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3306:3335  listStone[listedID.current()] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3316:3334  listedID.current() */\n      tag_169\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3316:3324  listedID */\n      0x03\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3316:3332  listedID.current */\n      tag_124\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3316:3334  listedID.current() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3306:3335  listStone[listedID.current()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3306:3522  listStone[listedID.current()] = stoneDetail(_to,address(this),getUserStoneDetail[_to][_typ].tokenID,getUserStoneDetail[_to][_typ].capAmount,getUserStoneDetail[_to][_typ].uri,getUserStoneDetail[_to][_typ].points,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      swap1\n      dup2\n      tag_170\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_170:\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3532:3552  listedID.increment() */\n      tag_171\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3532:3540  listedID */\n      0x03\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3532:3550  listedID.increment */\n      tag_128\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3532:3552  listedID.increment() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":3056:3559  function buy_Stone(address _to,Stones _typ) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1428:1480  mapping (Stones stones=> uint) public stoneCapAmount */\n    tag_56:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":1225:1310  mapping (address user=> mapping(Stones stone=>stoneDetail)) public getUserStoneDetail */\n    tag_60:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_70\n      jump\t// in\n    tag_172:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_173\n      swap1\n      tag_70\n      jump\t// in\n    tag_173:\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_175\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_174)\n    tag_175:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_176:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_176\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2009:2497  function mintStone(address _to,string memory _uri, Stones _typ) public {... */\n    tag_65:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2099:2117  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2099:2122  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2118:2121  _to */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2099:2122  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2099:2128  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2123:2127  _typ */\n      dup3\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2099:2128  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_178\n      jumpi\n      tag_179\n      tag_78\n      jump\t// in\n    tag_179:\n    tag_178:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_78\n      jump\t// in\n    tag_181:\n    tag_180:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2099:2137  getUserStoneDetail[_to][_typ].isActive */\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2098:2137  !getUserStoneDetail[_to][_typ].isActive */\n      iszero\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2090:2170  require(!getUserStoneDetail[_to][_typ].isActive,\"This Stone Is Already Active!\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2189:2207  NFTContractAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2180:2217  IIERC721(NFTContractAddress).safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1448194\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2218:2221  _to */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2222:2239  tokenID.current() */\n      tag_185\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2222:2229  tokenID */\n      0x02\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2222:2237  tokenID.current */\n      tag_124\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2222:2239  tokenID.current() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2180:2240  IIERC721(NFTContractAddress).safeMint(_to,tokenID.current()) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2294:2297  _to */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2298:2301  _to */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2302:2319  tokenID.current() */\n      tag_191\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2302:2309  tokenID */\n      0x02\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2302:2317  tokenID.current */\n      tag_124\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2302:2319  tokenID.current() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2320:2334  stoneCapAmount */\n      0x08\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2320:2340  stoneCapAmount[_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2335:2339  _typ */\n      dup5\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2320:2340  stoneCapAmount[_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      tag_193\n      tag_78\n      jump\t// in\n    tag_193:\n    tag_192:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_78\n      jump\t// in\n    tag_195:\n    tag_194:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2341:2345  _uri */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2346:2347  0 */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2348:2352  true */\n      0x01\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2282:2353  stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2250:2268  getUserStoneDetail */\n      0x05\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2250:2273  getUserStoneDetail[_to] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2269:2272  _to */\n      dup6\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2250:2273  getUserStoneDetail[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2250:2279  getUserStoneDetail[_to][_typ] */\n      0x00\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2274:2278  _typ */\n      dup4\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2250:2279  getUserStoneDetail[_to][_typ] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_78\n      jump\t// in\n    tag_197:\n    tag_196:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_199\n      tag_78\n      jump\t// in\n    tag_199:\n    tag_198:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2250:2353  getUserStoneDetail[_to][_typ] = stoneDetail(_to,_to,tokenID.current(),stoneCapAmount[_typ],_uri,0,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      swap1\n      dup2\n      tag_200\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_200:\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2363:2382  tokenID.increment() */\n      tag_201\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2363:2370  tokenID */\n      0x02\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2363:2380  tokenID.increment */\n      tag_128\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2363:2382  tokenID.increment() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/Dispatch_AI/Marketplace.sol\":2009:2497  function mintStone(address _to,string memory _uri, Stones _typ) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_219:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_220:\n        /* \"#utility.yul\":177:201   */\n      tag_272\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_219\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_21:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_274\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_220\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:517   */\n    tag_221:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x40\n        /* \"#utility.yul\":502:511   */\n      mload\n        /* \"#utility.yul\":492:511   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:517   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_222:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_223:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_224:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_225:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_280\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_224\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_226:\n        /* \"#utility.yul\":1076:1100   */\n      tag_282\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_225\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_283:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_227:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_285\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_226\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_24:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_288\n      tag_222\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1352:1471   */\n    tag_287:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_289\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_227\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_228:\n        /* \"#utility.yul\":1684:1708   */\n      tag_291\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_219\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_292:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_229:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_294\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_228\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_29:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_297\n      tag_222\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1960:2079   */\n    tag_296:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_298\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_229\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_230:\n        /* \"#utility.yul\":2306:2330   */\n      tag_300\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_225\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2442   */\n    tag_231:\n        /* \"#utility.yul\":2395:2401   */\n      0x00\n        /* \"#utility.yul\":2429:2434   */\n      dup2\n        /* \"#utility.yul\":2423:2435   */\n      mload\n        /* \"#utility.yul\":2413:2435   */\n      swap1\n      pop\n        /* \"#utility.yul\":2343:2442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2448:2617   */\n    tag_232:\n        /* \"#utility.yul\":2532:2543   */\n      0x00\n        /* \"#utility.yul\":2566:2572   */\n      dup3\n        /* \"#utility.yul\":2561:2564   */\n      dup3\n        /* \"#utility.yul\":2554:2573   */\n      mstore\n        /* \"#utility.yul\":2606:2610   */\n      0x20\n        /* \"#utility.yul\":2601:2604   */\n      dup3\n        /* \"#utility.yul\":2597:2611   */\n      add\n        /* \"#utility.yul\":2582:2611   */\n      swap1\n      pop\n        /* \"#utility.yul\":2448:2617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2869   */\n    tag_233:\n        /* \"#utility.yul\":2704:2705   */\n      0x00\n        /* \"#utility.yul\":2714:2827   */\n    tag_304:\n        /* \"#utility.yul\":2728:2734   */\n      dup4\n        /* \"#utility.yul\":2725:2726   */\n      dup2\n        /* \"#utility.yul\":2722:2735   */\n      lt\n        /* \"#utility.yul\":2714:2827   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2813:2814   */\n      dup1\n        /* \"#utility.yul\":2808:2811   */\n      dup3\n        /* \"#utility.yul\":2804:2815   */\n      add\n        /* \"#utility.yul\":2798:2816   */\n      mload\n        /* \"#utility.yul\":2794:2795   */\n      dup2\n        /* \"#utility.yul\":2789:2792   */\n      dup5\n        /* \"#utility.yul\":2785:2796   */\n      add\n        /* \"#utility.yul\":2778:2817   */\n      mstore\n        /* \"#utility.yul\":2750:2752   */\n      0x20\n        /* \"#utility.yul\":2747:2748   */\n      dup2\n        /* \"#utility.yul\":2743:2753   */\n      add\n        /* \"#utility.yul\":2738:2753   */\n      swap1\n      pop\n        /* \"#utility.yul\":2714:2827   */\n      jump(tag_304)\n    tag_306:\n        /* \"#utility.yul\":2861:2862   */\n      0x00\n        /* \"#utility.yul\":2852:2858   */\n      dup5\n        /* \"#utility.yul\":2847:2850   */\n      dup5\n        /* \"#utility.yul\":2843:2859   */\n      add\n        /* \"#utility.yul\":2836:2863   */\n      mstore\n        /* \"#utility.yul\":2685:2869   */\n      pop\n        /* \"#utility.yul\":2623:2869   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2875:2977   */\n    tag_234:\n        /* \"#utility.yul\":2916:2922   */\n      0x00\n        /* \"#utility.yul\":2967:2969   */\n      0x1f\n        /* \"#utility.yul\":2963:2970   */\n      not\n        /* \"#utility.yul\":2958:2960   */\n      0x1f\n        /* \"#utility.yul\":2951:2956   */\n      dup4\n        /* \"#utility.yul\":2947:2961   */\n      add\n        /* \"#utility.yul\":2943:2971   */\n      and\n        /* \"#utility.yul\":2933:2971   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3360   */\n    tag_235:\n        /* \"#utility.yul\":3071:3074   */\n      0x00\n        /* \"#utility.yul\":3099:3138   */\n      tag_309\n        /* \"#utility.yul\":3132:3137   */\n      dup3\n        /* \"#utility.yul\":3099:3138   */\n      tag_231\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3154:3225   */\n      tag_310\n        /* \"#utility.yul\":3218:3224   */\n      dup2\n        /* \"#utility.yul\":3213:3216   */\n      dup6\n        /* \"#utility.yul\":3154:3225   */\n      tag_232\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3147:3225   */\n      swap4\n      pop\n        /* \"#utility.yul\":3234:3299   */\n      tag_311\n        /* \"#utility.yul\":3292:3298   */\n      dup2\n        /* \"#utility.yul\":3287:3290   */\n      dup6\n        /* \"#utility.yul\":3280:3284   */\n      0x20\n        /* \"#utility.yul\":3273:3278   */\n      dup7\n        /* \"#utility.yul\":3269:3285   */\n      add\n        /* \"#utility.yul\":3234:3299   */\n      tag_233\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":3324:3353   */\n      tag_312\n        /* \"#utility.yul\":3346:3352   */\n      dup2\n        /* \"#utility.yul\":3324:3353   */\n      tag_234\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3319:3322   */\n      dup5\n        /* \"#utility.yul\":3315:3354   */\n      add\n        /* \"#utility.yul\":3308:3354   */\n      swap2\n      pop\n        /* \"#utility.yul\":3075:3360   */\n      pop\n        /* \"#utility.yul\":2983:3360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3366:3456   */\n    tag_236:\n        /* \"#utility.yul\":3400:3407   */\n      0x00\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3436:3449   */\n      iszero\n        /* \"#utility.yul\":3429:3450   */\n      iszero\n        /* \"#utility.yul\":3418:3450   */\n      swap1\n      pop\n        /* \"#utility.yul\":3366:3456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3571   */\n    tag_237:\n        /* \"#utility.yul\":3543:3564   */\n      tag_315\n        /* \"#utility.yul\":3558:3563   */\n      dup2\n        /* \"#utility.yul\":3543:3564   */\n      tag_236\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3538:3541   */\n      dup3\n        /* \"#utility.yul\":3531:3565   */\n      mstore\n        /* \"#utility.yul\":3462:3571   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3577:4542   */\n    tag_32:\n        /* \"#utility.yul\":3852:3856   */\n      0x00\n        /* \"#utility.yul\":3890:3893   */\n      0xe0\n        /* \"#utility.yul\":3879:3888   */\n      dup3\n        /* \"#utility.yul\":3875:3894   */\n      add\n        /* \"#utility.yul\":3867:3894   */\n      swap1\n      pop\n        /* \"#utility.yul\":3904:3975   */\n      tag_317\n        /* \"#utility.yul\":3972:3973   */\n      0x00\n        /* \"#utility.yul\":3961:3970   */\n      dup4\n        /* \"#utility.yul\":3957:3974   */\n      add\n        /* \"#utility.yul\":3948:3954   */\n      dup11\n        /* \"#utility.yul\":3904:3975   */\n      tag_230\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3985:4057   */\n      tag_318\n        /* \"#utility.yul\":4053:4055   */\n      0x20\n        /* \"#utility.yul\":4042:4051   */\n      dup4\n        /* \"#utility.yul\":4038:4056   */\n      add\n        /* \"#utility.yul\":4029:4035   */\n      dup10\n        /* \"#utility.yul\":3985:4057   */\n      tag_230\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4067:4139   */\n      tag_319\n        /* \"#utility.yul\":4135:4137   */\n      0x40\n        /* \"#utility.yul\":4124:4133   */\n      dup4\n        /* \"#utility.yul\":4120:4138   */\n      add\n        /* \"#utility.yul\":4111:4117   */\n      dup9\n        /* \"#utility.yul\":4067:4139   */\n      tag_220\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4149:4221   */\n      tag_320\n        /* \"#utility.yul\":4217:4219   */\n      0x60\n        /* \"#utility.yul\":4206:4215   */\n      dup4\n        /* \"#utility.yul\":4202:4220   */\n      add\n        /* \"#utility.yul\":4193:4199   */\n      dup8\n        /* \"#utility.yul\":4149:4221   */\n      tag_220\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4269:4278   */\n      dup2\n        /* \"#utility.yul\":4263:4267   */\n      dup2\n        /* \"#utility.yul\":4259:4279   */\n      sub\n        /* \"#utility.yul\":4253:4256   */\n      0x80\n        /* \"#utility.yul\":4242:4251   */\n      dup4\n        /* \"#utility.yul\":4238:4257   */\n      add\n        /* \"#utility.yul\":4231:4280   */\n      mstore\n        /* \"#utility.yul\":4297:4375   */\n      tag_321\n        /* \"#utility.yul\":4370:4374   */\n      dup2\n        /* \"#utility.yul\":4361:4367   */\n      dup7\n        /* \"#utility.yul\":4297:4375   */\n      tag_235\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4289:4375   */\n      swap1\n      pop\n        /* \"#utility.yul\":4385:4458   */\n      tag_322\n        /* \"#utility.yul\":4453:4456   */\n      0xa0\n        /* \"#utility.yul\":4442:4451   */\n      dup4\n        /* \"#utility.yul\":4438:4457   */\n      add\n        /* \"#utility.yul\":4429:4435   */\n      dup6\n        /* \"#utility.yul\":4385:4458   */\n      tag_220\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4468:4535   */\n      tag_323\n        /* \"#utility.yul\":4530:4533   */\n      0xc0\n        /* \"#utility.yul\":4519:4528   */\n      dup4\n        /* \"#utility.yul\":4515:4534   */\n      add\n        /* \"#utility.yul\":4506:4512   */\n      dup5\n        /* \"#utility.yul\":4468:4535   */\n      tag_237\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3577:4542   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4548:4658   */\n    tag_238:\n        /* \"#utility.yul\":4632:4633   */\n      0x04\n        /* \"#utility.yul\":4625:4630   */\n      dup2\n        /* \"#utility.yul\":4622:4634   */\n      lt\n        /* \"#utility.yul\":4612:4652   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":4648:4649   */\n      0x00\n        /* \"#utility.yul\":4645:4646   */\n      dup1\n        /* \"#utility.yul\":4638:4650   */\n      revert\n        /* \"#utility.yul\":4612:4652   */\n    tag_325:\n        /* \"#utility.yul\":4548:4658   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4664:4825   */\n    tag_239:\n        /* \"#utility.yul\":4721:4726   */\n      0x00\n        /* \"#utility.yul\":4759:4765   */\n      dup2\n        /* \"#utility.yul\":4746:4766   */\n      calldataload\n        /* \"#utility.yul\":4737:4766   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4819   */\n      tag_327\n        /* \"#utility.yul\":4813:4818   */\n      dup2\n        /* \"#utility.yul\":4775:4819   */\n      tag_238\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4664:4825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4831:5327   */\n    tag_35:\n        /* \"#utility.yul\":4910:4916   */\n      0x00\n        /* \"#utility.yul\":4918:4924   */\n      dup1\n        /* \"#utility.yul\":4967:4969   */\n      0x40\n        /* \"#utility.yul\":4955:4964   */\n      dup4\n        /* \"#utility.yul\":4946:4953   */\n      dup6\n        /* \"#utility.yul\":4942:4965   */\n      sub\n        /* \"#utility.yul\":4938:4970   */\n      slt\n        /* \"#utility.yul\":4935:5054   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4973:5052   */\n      tag_330\n      tag_222\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4935:5054   */\n    tag_329:\n        /* \"#utility.yul\":5093:5094   */\n      0x00\n        /* \"#utility.yul\":5118:5182   */\n      tag_331\n        /* \"#utility.yul\":5174:5181   */\n      dup6\n        /* \"#utility.yul\":5165:5171   */\n      dup3\n        /* \"#utility.yul\":5154:5163   */\n      dup7\n        /* \"#utility.yul\":5150:5172   */\n      add\n        /* \"#utility.yul\":5118:5182   */\n      tag_239\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5108:5182   */\n      swap3\n      pop\n        /* \"#utility.yul\":5064:5192   */\n      pop\n        /* \"#utility.yul\":5231:5233   */\n      0x20\n        /* \"#utility.yul\":5257:5310   */\n      tag_332\n        /* \"#utility.yul\":5302:5309   */\n      dup6\n        /* \"#utility.yul\":5293:5299   */\n      dup3\n        /* \"#utility.yul\":5282:5291   */\n      dup7\n        /* \"#utility.yul\":5278:5300   */\n      add\n        /* \"#utility.yul\":5257:5310   */\n      tag_229\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5247:5310   */\n      swap2\n      pop\n        /* \"#utility.yul\":5202:5320   */\n      pop\n        /* \"#utility.yul\":4831:5327   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5333:5829   */\n    tag_39:\n        /* \"#utility.yul\":5412:5418   */\n      0x00\n        /* \"#utility.yul\":5420:5426   */\n      dup1\n        /* \"#utility.yul\":5469:5471   */\n      0x40\n        /* \"#utility.yul\":5457:5466   */\n      dup4\n        /* \"#utility.yul\":5448:5455   */\n      dup6\n        /* \"#utility.yul\":5444:5467   */\n      sub\n        /* \"#utility.yul\":5440:5472   */\n      slt\n        /* \"#utility.yul\":5437:5556   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":5475:5554   */\n      tag_335\n      tag_222\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5437:5556   */\n    tag_334:\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5620:5673   */\n      tag_336\n        /* \"#utility.yul\":5665:5672   */\n      dup6\n        /* \"#utility.yul\":5656:5662   */\n      dup3\n        /* \"#utility.yul\":5645:5654   */\n      dup7\n        /* \"#utility.yul\":5641:5663   */\n      add\n        /* \"#utility.yul\":5620:5673   */\n      tag_227\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5610:5673   */\n      swap3\n      pop\n        /* \"#utility.yul\":5566:5683   */\n      pop\n        /* \"#utility.yul\":5722:5724   */\n      0x20\n        /* \"#utility.yul\":5748:5812   */\n      tag_337\n        /* \"#utility.yul\":5804:5811   */\n      dup6\n        /* \"#utility.yul\":5795:5801   */\n      dup3\n        /* \"#utility.yul\":5784:5793   */\n      dup7\n        /* \"#utility.yul\":5780:5802   */\n      add\n        /* \"#utility.yul\":5748:5812   */\n      tag_239\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5738:5812   */\n      swap2\n      pop\n        /* \"#utility.yul\":5693:5822   */\n      pop\n        /* \"#utility.yul\":5333:5829   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5835:6057   */\n    tag_46:\n        /* \"#utility.yul\":5928:5932   */\n      0x00\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5955:5964   */\n      dup3\n        /* \"#utility.yul\":5951:5969   */\n      add\n        /* \"#utility.yul\":5943:5969   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6050   */\n      tag_339\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6036:6045   */\n      dup4\n        /* \"#utility.yul\":6032:6049   */\n      add\n        /* \"#utility.yul\":6023:6029   */\n      dup5\n        /* \"#utility.yul\":5979:6050   */\n      tag_230\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5835:6057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6063:6414   */\n    tag_55:\n        /* \"#utility.yul\":6133:6139   */\n      0x00\n        /* \"#utility.yul\":6182:6184   */\n      0x20\n        /* \"#utility.yul\":6170:6179   */\n      dup3\n        /* \"#utility.yul\":6161:6168   */\n      dup5\n        /* \"#utility.yul\":6157:6180   */\n      sub\n        /* \"#utility.yul\":6153:6185   */\n      slt\n        /* \"#utility.yul\":6150:6269   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6188:6267   */\n      tag_342\n      tag_222\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":6150:6269   */\n    tag_341:\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6333:6397   */\n      tag_343\n        /* \"#utility.yul\":6389:6396   */\n      dup5\n        /* \"#utility.yul\":6380:6386   */\n      dup3\n        /* \"#utility.yul\":6369:6378   */\n      dup6\n        /* \"#utility.yul\":6365:6387   */\n      add\n        /* \"#utility.yul\":6333:6397   */\n      tag_239\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6323:6397   */\n      swap2\n      pop\n        /* \"#utility.yul\":6279:6407   */\n      pop\n        /* \"#utility.yul\":6063:6414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6420:6537   */\n    tag_240:\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6526:6527   */\n      dup1\n        /* \"#utility.yul\":6519:6531   */\n      revert\n        /* \"#utility.yul\":6543:6660   */\n    tag_241:\n        /* \"#utility.yul\":6652:6653   */\n      0x00\n        /* \"#utility.yul\":6649:6650   */\n      dup1\n        /* \"#utility.yul\":6642:6654   */\n      revert\n        /* \"#utility.yul\":6666:6846   */\n    tag_242:\n        /* \"#utility.yul\":6714:6791   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6704:6792   */\n      mstore\n        /* \"#utility.yul\":6811:6815   */\n      0x41\n        /* \"#utility.yul\":6808:6809   */\n      0x04\n        /* \"#utility.yul\":6801:6816   */\n      mstore\n        /* \"#utility.yul\":6835:6839   */\n      0x24\n        /* \"#utility.yul\":6832:6833   */\n      0x00\n        /* \"#utility.yul\":6825:6840   */\n      revert\n        /* \"#utility.yul\":6852:7133   */\n    tag_243:\n        /* \"#utility.yul\":6935:6962   */\n      tag_348\n        /* \"#utility.yul\":6957:6961   */\n      dup3\n        /* \"#utility.yul\":6935:6962   */\n      tag_234\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6927:6933   */\n      dup2\n        /* \"#utility.yul\":6923:6963   */\n      add\n        /* \"#utility.yul\":7065:7071   */\n      dup2\n        /* \"#utility.yul\":7053:7063   */\n      dup2\n        /* \"#utility.yul\":7050:7072   */\n      lt\n        /* \"#utility.yul\":7029:7047   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7017:7027   */\n      dup3\n        /* \"#utility.yul\":7014:7048   */\n      gt\n        /* \"#utility.yul\":7011:7073   */\n      or\n        /* \"#utility.yul\":7008:7096   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":7076:7094   */\n      tag_350\n      tag_242\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7008:7096   */\n    tag_349:\n        /* \"#utility.yul\":7116:7126   */\n      dup1\n        /* \"#utility.yul\":7112:7114   */\n      0x40\n        /* \"#utility.yul\":7105:7127   */\n      mstore\n        /* \"#utility.yul\":6895:7133   */\n      pop\n        /* \"#utility.yul\":6852:7133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7139:7268   */\n    tag_244:\n        /* \"#utility.yul\":7173:7179   */\n      0x00\n        /* \"#utility.yul\":7200:7220   */\n      tag_352\n      tag_221\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7190:7220   */\n      swap1\n      pop\n        /* \"#utility.yul\":7229:7262   */\n      tag_353\n        /* \"#utility.yul\":7257:7261   */\n      dup3\n        /* \"#utility.yul\":7249:7255   */\n      dup3\n        /* \"#utility.yul\":7229:7262   */\n      tag_243\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7139:7268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7274:7582   */\n    tag_245:\n        /* \"#utility.yul\":7336:7340   */\n      0x00\n        /* \"#utility.yul\":7426:7444   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7418:7424   */\n      dup3\n        /* \"#utility.yul\":7415:7445   */\n      gt\n        /* \"#utility.yul\":7412:7468   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":7448:7466   */\n      tag_356\n      tag_242\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7412:7468   */\n    tag_355:\n        /* \"#utility.yul\":7486:7515   */\n      tag_357\n        /* \"#utility.yul\":7508:7514   */\n      dup3\n        /* \"#utility.yul\":7486:7515   */\n      tag_234\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7478:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7574   */\n      0x20\n        /* \"#utility.yul\":7564:7568   */\n      dup2\n        /* \"#utility.yul\":7560:7575   */\n      add\n        /* \"#utility.yul\":7552:7575   */\n      swap1\n      pop\n        /* \"#utility.yul\":7274:7582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7588:7734   */\n    tag_246:\n        /* \"#utility.yul\":7685:7691   */\n      dup3\n        /* \"#utility.yul\":7680:7683   */\n      dup2\n        /* \"#utility.yul\":7675:7678   */\n      dup4\n        /* \"#utility.yul\":7662:7692   */\n      calldatacopy\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7717:7723   */\n      dup4\n        /* \"#utility.yul\":7712:7715   */\n      dup4\n        /* \"#utility.yul\":7708:7724   */\n      add\n        /* \"#utility.yul\":7701:7728   */\n      mstore\n        /* \"#utility.yul\":7588:7734   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7740:8165   */\n    tag_247:\n        /* \"#utility.yul\":7818:7823   */\n      0x00\n        /* \"#utility.yul\":7843:7909   */\n      tag_360\n        /* \"#utility.yul\":7859:7908   */\n      tag_361\n        /* \"#utility.yul\":7901:7907   */\n      dup5\n        /* \"#utility.yul\":7859:7908   */\n      tag_245\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7843:7909   */\n      tag_244\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7834:7909   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:7938   */\n      dup3\n        /* \"#utility.yul\":7925:7930   */\n      dup2\n        /* \"#utility.yul\":7918:7939   */\n      mstore\n        /* \"#utility.yul\":7970:7974   */\n      0x20\n        /* \"#utility.yul\":7963:7968   */\n      dup2\n        /* \"#utility.yul\":7959:7975   */\n      add\n        /* \"#utility.yul\":8008:8011   */\n      dup5\n        /* \"#utility.yul\":7999:8005   */\n      dup5\n        /* \"#utility.yul\":7994:7997   */\n      dup5\n        /* \"#utility.yul\":7990:8006   */\n      add\n        /* \"#utility.yul\":7987:8012   */\n      gt\n        /* \"#utility.yul\":7984:8096   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":8015:8094   */\n      tag_363\n      tag_241\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7984:8096   */\n    tag_362:\n        /* \"#utility.yul\":8105:8159   */\n      tag_364\n        /* \"#utility.yul\":8152:8158   */\n      dup5\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8142:8145   */\n      dup6\n        /* \"#utility.yul\":8105:8159   */\n      tag_246\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":7824:8165   */\n      pop\n        /* \"#utility.yul\":7740:8165   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8185:8525   */\n    tag_248:\n        /* \"#utility.yul\":8241:8246   */\n      0x00\n        /* \"#utility.yul\":8290:8293   */\n      dup3\n        /* \"#utility.yul\":8283:8287   */\n      0x1f\n        /* \"#utility.yul\":8275:8281   */\n      dup4\n        /* \"#utility.yul\":8271:8288   */\n      add\n        /* \"#utility.yul\":8267:8294   */\n      slt\n        /* \"#utility.yul\":8257:8379   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":8298:8377   */\n      tag_367\n      tag_240\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8257:8379   */\n    tag_366:\n        /* \"#utility.yul\":8415:8421   */\n      dup2\n        /* \"#utility.yul\":8402:8422   */\n      calldataload\n        /* \"#utility.yul\":8440:8519   */\n      tag_368\n        /* \"#utility.yul\":8515:8518   */\n      dup5\n        /* \"#utility.yul\":8507:8513   */\n      dup3\n        /* \"#utility.yul\":8500:8504   */\n      0x20\n        /* \"#utility.yul\":8492:8498   */\n      dup7\n        /* \"#utility.yul\":8488:8505   */\n      add\n        /* \"#utility.yul\":8440:8519   */\n      tag_247\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8431:8519   */\n      swap2\n      pop\n        /* \"#utility.yul\":8247:8525   */\n      pop\n        /* \"#utility.yul\":8185:8525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8531:9352   */\n    tag_64:\n        /* \"#utility.yul\":8629:8635   */\n      0x00\n        /* \"#utility.yul\":8637:8643   */\n      dup1\n        /* \"#utility.yul\":8645:8651   */\n      0x00\n        /* \"#utility.yul\":8694:8696   */\n      0x60\n        /* \"#utility.yul\":8682:8691   */\n      dup5\n        /* \"#utility.yul\":8673:8680   */\n      dup7\n        /* \"#utility.yul\":8669:8692   */\n      sub\n        /* \"#utility.yul\":8665:8697   */\n      slt\n        /* \"#utility.yul\":8662:8781   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":8700:8779   */\n      tag_371\n      tag_222\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":8662:8781   */\n    tag_370:\n        /* \"#utility.yul\":8820:8821   */\n      0x00\n        /* \"#utility.yul\":8845:8898   */\n      tag_372\n        /* \"#utility.yul\":8890:8897   */\n      dup7\n        /* \"#utility.yul\":8881:8887   */\n      dup3\n        /* \"#utility.yul\":8870:8879   */\n      dup8\n        /* \"#utility.yul\":8866:8888   */\n      add\n        /* \"#utility.yul\":8845:8898   */\n      tag_227\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8835:8898   */\n      swap4\n      pop\n        /* \"#utility.yul\":8791:8908   */\n      pop\n        /* \"#utility.yul\":8975:8977   */\n      0x20\n        /* \"#utility.yul\":8964:8973   */\n      dup5\n        /* \"#utility.yul\":8960:8978   */\n      add\n        /* \"#utility.yul\":8947:8979   */\n      calldataload\n        /* \"#utility.yul\":9006:9024   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8998:9004   */\n      dup2\n        /* \"#utility.yul\":8995:9025   */\n      gt\n        /* \"#utility.yul\":8992:9109   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9028:9107   */\n      tag_374\n      tag_223\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8992:9109   */\n    tag_373:\n        /* \"#utility.yul\":9133:9196   */\n      tag_375\n        /* \"#utility.yul\":9188:9195   */\n      dup7\n        /* \"#utility.yul\":9179:9185   */\n      dup3\n        /* \"#utility.yul\":9168:9177   */\n      dup8\n        /* \"#utility.yul\":9164:9186   */\n      add\n        /* \"#utility.yul\":9133:9196   */\n      tag_248\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9123:9196   */\n      swap3\n      pop\n        /* \"#utility.yul\":8918:9206   */\n      pop\n        /* \"#utility.yul\":9245:9247   */\n      0x40\n        /* \"#utility.yul\":9271:9335   */\n      tag_376\n        /* \"#utility.yul\":9327:9334   */\n      dup7\n        /* \"#utility.yul\":9318:9324   */\n      dup3\n        /* \"#utility.yul\":9307:9316   */\n      dup8\n        /* \"#utility.yul\":9303:9325   */\n      add\n        /* \"#utility.yul\":9271:9335   */\n      tag_239\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":9261:9335   */\n      swap2\n      pop\n        /* \"#utility.yul\":9216:9345   */\n      pop\n        /* \"#utility.yul\":8531:9352   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9358:9538   */\n    tag_249:\n        /* \"#utility.yul\":9406:9483   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9403:9404   */\n      0x00\n        /* \"#utility.yul\":9396:9484   */\n      mstore\n        /* \"#utility.yul\":9503:9507   */\n      0x22\n        /* \"#utility.yul\":9500:9501   */\n      0x04\n        /* \"#utility.yul\":9493:9508   */\n      mstore\n        /* \"#utility.yul\":9527:9531   */\n      0x24\n        /* \"#utility.yul\":9524:9525   */\n      0x00\n        /* \"#utility.yul\":9517:9532   */\n      revert\n        /* \"#utility.yul\":9544:9864   */\n    tag_70:\n        /* \"#utility.yul\":9588:9594   */\n      0x00\n        /* \"#utility.yul\":9625:9626   */\n      0x02\n        /* \"#utility.yul\":9619:9623   */\n      dup3\n        /* \"#utility.yul\":9615:9627   */\n      div\n        /* \"#utility.yul\":9605:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9672:9673   */\n      0x01\n        /* \"#utility.yul\":9666:9670   */\n      dup3\n        /* \"#utility.yul\":9662:9674   */\n      and\n        /* \"#utility.yul\":9693:9711   */\n      dup1\n        /* \"#utility.yul\":9683:9764   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":9749:9753   */\n      0x7f\n        /* \"#utility.yul\":9741:9747   */\n      dup3\n        /* \"#utility.yul\":9737:9754   */\n      and\n        /* \"#utility.yul\":9727:9754   */\n      swap2\n      pop\n        /* \"#utility.yul\":9683:9764   */\n    tag_379:\n        /* \"#utility.yul\":9811:9813   */\n      0x20\n        /* \"#utility.yul\":9803:9809   */\n      dup3\n        /* \"#utility.yul\":9800:9814   */\n      lt\n        /* \"#utility.yul\":9780:9798   */\n      dup2\n        /* \"#utility.yul\":9777:9815   */\n      sub\n        /* \"#utility.yul\":9774:9858   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":9830:9848   */\n      tag_381\n      tag_249\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9774:9858   */\n    tag_380:\n        /* \"#utility.yul\":9595:9864   */\n      pop\n        /* \"#utility.yul\":9544:9864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9870:10050   */\n    tag_78:\n        /* \"#utility.yul\":9918:9995   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9915:9916   */\n      0x00\n        /* \"#utility.yul\":9908:9996   */\n      mstore\n        /* \"#utility.yul\":10015:10019   */\n      0x21\n        /* \"#utility.yul\":10012:10013   */\n      0x04\n        /* \"#utility.yul\":10005:10020   */\n      mstore\n        /* \"#utility.yul\":10039:10043   */\n      0x24\n        /* \"#utility.yul\":10036:10037   */\n      0x00\n        /* \"#utility.yul\":10029:10044   */\n      revert\n        /* \"#utility.yul\":10056:10227   */\n    tag_250:\n        /* \"#utility.yul\":10196:10219   */\n      0x46697273742046696c6c2053746f6e6520436170210000000000000000000000\n        /* \"#utility.yul\":10192:10193   */\n      0x00\n        /* \"#utility.yul\":10184:10190   */\n      dup3\n        /* \"#utility.yul\":10180:10194   */\n      add\n        /* \"#utility.yul\":10173:10220   */\n      mstore\n        /* \"#utility.yul\":10056:10227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10233:10599   */\n    tag_251:\n        /* \"#utility.yul\":10375:10378   */\n      0x00\n        /* \"#utility.yul\":10396:10463   */\n      tag_385\n        /* \"#utility.yul\":10460:10462   */\n      0x15\n        /* \"#utility.yul\":10455:10458   */\n      dup4\n        /* \"#utility.yul\":10396:10463   */\n      tag_232\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10389:10463   */\n      swap2\n      pop\n        /* \"#utility.yul\":10472:10565   */\n      tag_386\n        /* \"#utility.yul\":10561:10564   */\n      dup3\n        /* \"#utility.yul\":10472:10565   */\n      tag_250\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":10590:10592   */\n      0x20\n        /* \"#utility.yul\":10585:10588   */\n      dup3\n        /* \"#utility.yul\":10581:10593   */\n      add\n        /* \"#utility.yul\":10574:10593   */\n      swap1\n      pop\n        /* \"#utility.yul\":10233:10599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10605:11024   */\n    tag_92:\n        /* \"#utility.yul\":10771:10775   */\n      0x00\n        /* \"#utility.yul\":10809:10811   */\n      0x20\n        /* \"#utility.yul\":10798:10807   */\n      dup3\n        /* \"#utility.yul\":10794:10812   */\n      add\n        /* \"#utility.yul\":10786:10812   */\n      swap1\n      pop\n        /* \"#utility.yul\":10858:10867   */\n      dup2\n        /* \"#utility.yul\":10852:10856   */\n      dup2\n        /* \"#utility.yul\":10848:10868   */\n      sub\n        /* \"#utility.yul\":10844:10845   */\n      0x00\n        /* \"#utility.yul\":10833:10842   */\n      dup4\n        /* \"#utility.yul\":10829:10846   */\n      add\n        /* \"#utility.yul\":10822:10869   */\n      mstore\n        /* \"#utility.yul\":10886:11017   */\n      tag_388\n        /* \"#utility.yul\":11012:11016   */\n      dup2\n        /* \"#utility.yul\":10886:11017   */\n      tag_251\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":10878:11017   */\n      swap1\n      pop\n        /* \"#utility.yul\":10605:11024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11030:11472   */\n    tag_98:\n        /* \"#utility.yul\":11179:11183   */\n      0x00\n        /* \"#utility.yul\":11217:11219   */\n      0x60\n        /* \"#utility.yul\":11206:11215   */\n      dup3\n        /* \"#utility.yul\":11202:11220   */\n      add\n        /* \"#utility.yul\":11194:11220   */\n      swap1\n      pop\n        /* \"#utility.yul\":11230:11301   */\n      tag_390\n        /* \"#utility.yul\":11298:11299   */\n      0x00\n        /* \"#utility.yul\":11287:11296   */\n      dup4\n        /* \"#utility.yul\":11283:11300   */\n      add\n        /* \"#utility.yul\":11274:11280   */\n      dup7\n        /* \"#utility.yul\":11230:11301   */\n      tag_230\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11311:11383   */\n      tag_391\n        /* \"#utility.yul\":11379:11381   */\n      0x20\n        /* \"#utility.yul\":11368:11377   */\n      dup4\n        /* \"#utility.yul\":11364:11382   */\n      add\n        /* \"#utility.yul\":11355:11361   */\n      dup6\n        /* \"#utility.yul\":11311:11383   */\n      tag_230\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11393:11465   */\n      tag_392\n        /* \"#utility.yul\":11461:11463   */\n      0x40\n        /* \"#utility.yul\":11450:11459   */\n      dup4\n        /* \"#utility.yul\":11446:11464   */\n      add\n        /* \"#utility.yul\":11437:11443   */\n      dup5\n        /* \"#utility.yul\":11393:11465   */\n      tag_220\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11030:11472   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11478:11619   */\n    tag_252:\n        /* \"#utility.yul\":11527:11531   */\n      0x00\n        /* \"#utility.yul\":11550:11553   */\n      dup2\n        /* \"#utility.yul\":11542:11553   */\n      swap1\n      pop\n        /* \"#utility.yul\":11573:11576   */\n      dup2\n        /* \"#utility.yul\":11570:11571   */\n      0x00\n        /* \"#utility.yul\":11563:11577   */\n      mstore\n        /* \"#utility.yul\":11607:11611   */\n      0x20\n        /* \"#utility.yul\":11604:11605   */\n      0x00\n        /* \"#utility.yul\":11594:11612   */\n      keccak256\n        /* \"#utility.yul\":11586:11612   */\n      swap1\n      pop\n        /* \"#utility.yul\":11478:11619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11625:11718   */\n    tag_253:\n        /* \"#utility.yul\":11662:11668   */\n      0x00\n        /* \"#utility.yul\":11709:11711   */\n      0x20\n        /* \"#utility.yul\":11704:11706   */\n      0x1f\n        /* \"#utility.yul\":11697:11702   */\n      dup4\n        /* \"#utility.yul\":11693:11707   */\n      add\n        /* \"#utility.yul\":11689:11712   */\n      div\n        /* \"#utility.yul\":11679:11712   */\n      swap1\n      pop\n        /* \"#utility.yul\":11625:11718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11724:11831   */\n    tag_254:\n        /* \"#utility.yul\":11768:11776   */\n      0x00\n        /* \"#utility.yul\":11818:11823   */\n      dup3\n        /* \"#utility.yul\":11812:11816   */\n      dup3\n        /* \"#utility.yul\":11808:11824   */\n      shl\n        /* \"#utility.yul\":11787:11824   */\n      swap1\n      pop\n        /* \"#utility.yul\":11724:11831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11837:12230   */\n    tag_255:\n        /* \"#utility.yul\":11906:11912   */\n      0x00\n        /* \"#utility.yul\":11956:11957   */\n      0x08\n        /* \"#utility.yul\":11944:11954   */\n      dup4\n        /* \"#utility.yul\":11940:11958   */\n      mul\n        /* \"#utility.yul\":11979:12076   */\n      tag_397\n        /* \"#utility.yul\":12009:12075   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11998:12007   */\n      dup3\n        /* \"#utility.yul\":11979:12076   */\n      tag_254\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12097:12136   */\n      tag_398\n        /* \"#utility.yul\":12127:12135   */\n      dup7\n        /* \"#utility.yul\":12116:12125   */\n      dup4\n        /* \"#utility.yul\":12097:12136   */\n      tag_254\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12085:12136   */\n      swap6\n      pop\n        /* \"#utility.yul\":12169:12173   */\n      dup1\n        /* \"#utility.yul\":12165:12174   */\n      not\n        /* \"#utility.yul\":12158:12163   */\n      dup5\n        /* \"#utility.yul\":12154:12175   */\n      and\n        /* \"#utility.yul\":12145:12175   */\n      swap4\n      pop\n        /* \"#utility.yul\":12218:12222   */\n      dup1\n        /* \"#utility.yul\":12208:12216   */\n      dup7\n        /* \"#utility.yul\":12204:12223   */\n      and\n        /* \"#utility.yul\":12197:12202   */\n      dup5\n        /* \"#utility.yul\":12194:12224   */\n      or\n        /* \"#utility.yul\":12184:12224   */\n      swap3\n      pop\n        /* \"#utility.yul\":11913:12230   */\n      pop\n      pop\n        /* \"#utility.yul\":11837:12230   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12296   */\n    tag_256:\n        /* \"#utility.yul\":12264:12267   */\n      0x00\n        /* \"#utility.yul\":12285:12290   */\n      dup2\n        /* \"#utility.yul\":12278:12290   */\n      swap1\n      pop\n        /* \"#utility.yul\":12236:12296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12302:12444   */\n    tag_257:\n        /* \"#utility.yul\":12352:12361   */\n      0x00\n        /* \"#utility.yul\":12385:12438   */\n      tag_401\n        /* \"#utility.yul\":12403:12437   */\n      tag_402\n        /* \"#utility.yul\":12412:12436   */\n      tag_403\n        /* \"#utility.yul\":12430:12435   */\n      dup5\n        /* \"#utility.yul\":12412:12436   */\n      tag_219\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12403:12437   */\n      tag_256\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12385:12438   */\n      tag_219\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12372:12438   */\n      swap1\n      pop\n        /* \"#utility.yul\":12302:12444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12450:12525   */\n    tag_258:\n        /* \"#utility.yul\":12493:12496   */\n      0x00\n        /* \"#utility.yul\":12514:12519   */\n      dup2\n        /* \"#utility.yul\":12507:12519   */\n      swap1\n      pop\n        /* \"#utility.yul\":12450:12525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12531:12800   */\n    tag_259:\n        /* \"#utility.yul\":12641:12680   */\n      tag_406\n        /* \"#utility.yul\":12672:12679   */\n      dup4\n        /* \"#utility.yul\":12641:12680   */\n      tag_257\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12702:12793   */\n      tag_407\n        /* \"#utility.yul\":12751:12792   */\n      tag_408\n        /* \"#utility.yul\":12775:12791   */\n      dup3\n        /* \"#utility.yul\":12751:12792   */\n      tag_258\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12743:12749   */\n      dup5\n        /* \"#utility.yul\":12736:12740   */\n      dup5\n        /* \"#utility.yul\":12730:12741   */\n      sload\n        /* \"#utility.yul\":12702:12793   */\n      tag_255\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12696:12700   */\n      dup3\n        /* \"#utility.yul\":12689:12794   */\n      sstore\n        /* \"#utility.yul\":12607:12800   */\n      pop\n        /* \"#utility.yul\":12531:12800   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12806:12879   */\n    tag_260:\n        /* \"#utility.yul\":12851:12854   */\n      0x00\n        /* \"#utility.yul\":12806:12879   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12885:13074   */\n    tag_261:\n        /* \"#utility.yul\":12962:12994   */\n      tag_411\n      tag_260\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13003:13068   */\n      tag_412\n        /* \"#utility.yul\":13061:13067   */\n      dup2\n        /* \"#utility.yul\":13053:13059   */\n      dup5\n        /* \"#utility.yul\":13047:13051   */\n      dup5\n        /* \"#utility.yul\":13003:13068   */\n      tag_259\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12938:13074   */\n      pop\n        /* \"#utility.yul\":12885:13074   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13080:13266   */\n    tag_262:\n        /* \"#utility.yul\":13140:13260   */\n    tag_414:\n        /* \"#utility.yul\":13157:13160   */\n      dup2\n        /* \"#utility.yul\":13150:13155   */\n      dup2\n        /* \"#utility.yul\":13147:13161   */\n      lt\n        /* \"#utility.yul\":13140:13260   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":13211:13250   */\n      tag_417\n        /* \"#utility.yul\":13248:13249   */\n      0x00\n        /* \"#utility.yul\":13241:13246   */\n      dup3\n        /* \"#utility.yul\":13211:13250   */\n      tag_261\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13184:13185   */\n      0x01\n        /* \"#utility.yul\":13177:13182   */\n      dup2\n        /* \"#utility.yul\":13173:13186   */\n      add\n        /* \"#utility.yul\":13164:13186   */\n      swap1\n      pop\n        /* \"#utility.yul\":13140:13260   */\n      jump(tag_414)\n    tag_416:\n        /* \"#utility.yul\":13080:13266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13272:13815   */\n    tag_263:\n        /* \"#utility.yul\":13373:13375   */\n      0x1f\n        /* \"#utility.yul\":13368:13371   */\n      dup3\n        /* \"#utility.yul\":13365:13376   */\n      gt\n        /* \"#utility.yul\":13362:13808   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":13407:13445   */\n      tag_420\n        /* \"#utility.yul\":13439:13444   */\n      dup2\n        /* \"#utility.yul\":13407:13445   */\n      tag_252\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13491:13520   */\n      tag_421\n        /* \"#utility.yul\":13509:13519   */\n      dup5\n        /* \"#utility.yul\":13491:13520   */\n      tag_253\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13481:13489   */\n      dup2\n        /* \"#utility.yul\":13477:13521   */\n      add\n        /* \"#utility.yul\":13674:13676   */\n      0x20\n        /* \"#utility.yul\":13662:13672   */\n      dup6\n        /* \"#utility.yul\":13659:13677   */\n      lt\n        /* \"#utility.yul\":13656:13705   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":13695:13703   */\n      dup2\n        /* \"#utility.yul\":13680:13703   */\n      swap1\n      pop\n        /* \"#utility.yul\":13656:13705   */\n    tag_422:\n        /* \"#utility.yul\":13718:13798   */\n      tag_423\n        /* \"#utility.yul\":13774:13796   */\n      tag_424\n        /* \"#utility.yul\":13792:13795   */\n      dup6\n        /* \"#utility.yul\":13774:13796   */\n      tag_253\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13764:13772   */\n      dup4\n        /* \"#utility.yul\":13760:13797   */\n      add\n        /* \"#utility.yul\":13747:13758   */\n      dup3\n        /* \"#utility.yul\":13718:13798   */\n      tag_262\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13377:13808   */\n      pop\n      pop\n        /* \"#utility.yul\":13362:13808   */\n    tag_419:\n        /* \"#utility.yul\":13272:13815   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13821:13938   */\n    tag_264:\n        /* \"#utility.yul\":13875:13883   */\n      0x00\n        /* \"#utility.yul\":13925:13930   */\n      dup3\n        /* \"#utility.yul\":13919:13923   */\n      dup3\n        /* \"#utility.yul\":13915:13931   */\n      shr\n        /* \"#utility.yul\":13894:13931   */\n      swap1\n      pop\n        /* \"#utility.yul\":13821:13938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13944:14113   */\n    tag_265:\n        /* \"#utility.yul\":13988:13994   */\n      0x00\n        /* \"#utility.yul\":14021:14072   */\n      tag_427\n        /* \"#utility.yul\":14069:14070   */\n      0x00\n        /* \"#utility.yul\":14065:14071   */\n      not\n        /* \"#utility.yul\":14057:14062   */\n      dup5\n        /* \"#utility.yul\":14054:14055   */\n      0x08\n        /* \"#utility.yul\":14050:14063   */\n      mul\n        /* \"#utility.yul\":14021:14072   */\n      tag_264\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":14017:14073   */\n      not\n        /* \"#utility.yul\":14102:14106   */\n      dup1\n        /* \"#utility.yul\":14096:14100   */\n      dup4\n        /* \"#utility.yul\":14092:14107   */\n      and\n        /* \"#utility.yul\":14082:14107   */\n      swap2\n      pop\n        /* \"#utility.yul\":13995:14113   */\n      pop\n        /* \"#utility.yul\":13944:14113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14118:14413   */\n    tag_266:\n        /* \"#utility.yul\":14194:14198   */\n      0x00\n        /* \"#utility.yul\":14340:14369   */\n      tag_429\n        /* \"#utility.yul\":14365:14368   */\n      dup4\n        /* \"#utility.yul\":14359:14363   */\n      dup4\n        /* \"#utility.yul\":14340:14369   */\n      tag_265\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14332:14369   */\n      swap2\n      pop\n        /* \"#utility.yul\":14402:14405   */\n      dup3\n        /* \"#utility.yul\":14399:14400   */\n      0x02\n        /* \"#utility.yul\":14395:14406   */\n      mul\n        /* \"#utility.yul\":14389:14393   */\n      dup3\n        /* \"#utility.yul\":14386:14407   */\n      or\n        /* \"#utility.yul\":14378:14407   */\n      swap1\n      pop\n        /* \"#utility.yul\":14118:14413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14418:15813   */\n    tag_126:\n        /* \"#utility.yul\":14535:14572   */\n      tag_431\n        /* \"#utility.yul\":14568:14571   */\n      dup3\n        /* \"#utility.yul\":14535:14572   */\n      tag_231\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14637:14655   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14629:14635   */\n      dup2\n        /* \"#utility.yul\":14626:14656   */\n      gt\n        /* \"#utility.yul\":14623:14679   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":14659:14677   */\n      tag_433\n      tag_242\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14623:14679   */\n    tag_432:\n        /* \"#utility.yul\":14703:14741   */\n      tag_434\n        /* \"#utility.yul\":14735:14739   */\n      dup3\n        /* \"#utility.yul\":14729:14740   */\n      sload\n        /* \"#utility.yul\":14703:14741   */\n      tag_70\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14788:14855   */\n      tag_435\n        /* \"#utility.yul\":14848:14854   */\n      dup3\n        /* \"#utility.yul\":14840:14846   */\n      dup3\n        /* \"#utility.yul\":14834:14838   */\n      dup6\n        /* \"#utility.yul\":14788:14855   */\n      tag_263\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14882:14883   */\n      0x00\n        /* \"#utility.yul\":14906:14910   */\n      0x20\n        /* \"#utility.yul\":14893:14910   */\n      swap1\n      pop\n        /* \"#utility.yul\":14938:14940   */\n      0x1f\n        /* \"#utility.yul\":14930:14936   */\n      dup4\n        /* \"#utility.yul\":14927:14941   */\n      gt\n        /* \"#utility.yul\":14955:14956   */\n      0x01\n        /* \"#utility.yul\":14950:15568   */\n      dup2\n      eq\n      tag_437\n      jumpi\n        /* \"#utility.yul\":15612:15613   */\n      0x00\n        /* \"#utility.yul\":15629:15635   */\n      dup5\n        /* \"#utility.yul\":15626:15703   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":15678:15687   */\n      dup3\n        /* \"#utility.yul\":15673:15676   */\n      dup8\n        /* \"#utility.yul\":15669:15688   */\n      add\n        /* \"#utility.yul\":15663:15689   */\n      mload\n        /* \"#utility.yul\":15654:15689   */\n      swap1\n      pop\n        /* \"#utility.yul\":15626:15703   */\n    tag_438:\n        /* \"#utility.yul\":15729:15796   */\n      tag_439\n        /* \"#utility.yul\":15789:15795   */\n      dup6\n        /* \"#utility.yul\":15782:15787   */\n      dup3\n        /* \"#utility.yul\":15729:15796   */\n      tag_266\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15723:15727   */\n      dup7\n        /* \"#utility.yul\":15716:15797   */\n      sstore\n        /* \"#utility.yul\":15585:15807   */\n      pop\n        /* \"#utility.yul\":14920:15807   */\n      jump(tag_436)\n        /* \"#utility.yul\":14950:15568   */\n    tag_437:\n        /* \"#utility.yul\":15002:15006   */\n      0x1f\n        /* \"#utility.yul\":14998:15007   */\n      not\n        /* \"#utility.yul\":14990:14996   */\n      dup5\n        /* \"#utility.yul\":14986:15008   */\n      and\n        /* \"#utility.yul\":15036:15073   */\n      tag_440\n        /* \"#utility.yul\":15068:15072   */\n      dup7\n        /* \"#utility.yul\":15036:15073   */\n      tag_252\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15095:15096   */\n      0x00\n        /* \"#utility.yul\":15109:15317   */\n    tag_441:\n        /* \"#utility.yul\":15123:15130   */\n      dup3\n        /* \"#utility.yul\":15120:15121   */\n      dup2\n        /* \"#utility.yul\":15117:15131   */\n      lt\n        /* \"#utility.yul\":15109:15317   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":15202:15211   */\n      dup5\n        /* \"#utility.yul\":15197:15200   */\n      dup10\n        /* \"#utility.yul\":15193:15212   */\n      add\n        /* \"#utility.yul\":15187:15213   */\n      mload\n        /* \"#utility.yul\":15179:15185   */\n      dup3\n        /* \"#utility.yul\":15172:15214   */\n      sstore\n        /* \"#utility.yul\":15253:15254   */\n      0x01\n        /* \"#utility.yul\":15245:15251   */\n      dup3\n        /* \"#utility.yul\":15241:15255   */\n      add\n        /* \"#utility.yul\":15231:15255   */\n      swap2\n      pop\n        /* \"#utility.yul\":15300:15302   */\n      0x20\n        /* \"#utility.yul\":15289:15298   */\n      dup6\n        /* \"#utility.yul\":15285:15303   */\n      add\n        /* \"#utility.yul\":15272:15303   */\n      swap5\n      pop\n        /* \"#utility.yul\":15146:15150   */\n      0x20\n        /* \"#utility.yul\":15143:15144   */\n      dup2\n        /* \"#utility.yul\":15139:15151   */\n      add\n        /* \"#utility.yul\":15134:15151   */\n      swap1\n      pop\n        /* \"#utility.yul\":15109:15317   */\n      jump(tag_441)\n    tag_443:\n        /* \"#utility.yul\":15345:15351   */\n      dup7\n        /* \"#utility.yul\":15336:15343   */\n      dup4\n        /* \"#utility.yul\":15333:15352   */\n      lt\n        /* \"#utility.yul\":15330:15509   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":15403:15412   */\n      dup5\n        /* \"#utility.yul\":15398:15401   */\n      dup10\n        /* \"#utility.yul\":15394:15413   */\n      add\n        /* \"#utility.yul\":15388:15414   */\n      mload\n        /* \"#utility.yul\":15446:15494   */\n      tag_445\n        /* \"#utility.yul\":15488:15492   */\n      0x1f\n        /* \"#utility.yul\":15480:15486   */\n      dup10\n        /* \"#utility.yul\":15476:15493   */\n      and\n        /* \"#utility.yul\":15465:15474   */\n      dup3\n        /* \"#utility.yul\":15446:15494   */\n      tag_265\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15438:15444   */\n      dup4\n        /* \"#utility.yul\":15431:15495   */\n      sstore\n        /* \"#utility.yul\":15353:15509   */\n      pop\n        /* \"#utility.yul\":15330:15509   */\n    tag_444:\n        /* \"#utility.yul\":15555:15556   */\n      0x01\n        /* \"#utility.yul\":15551:15552   */\n      0x02\n        /* \"#utility.yul\":15543:15549   */\n      dup9\n        /* \"#utility.yul\":15539:15553   */\n      mul\n        /* \"#utility.yul\":15535:15557   */\n      add\n        /* \"#utility.yul\":15529:15533   */\n      dup9\n        /* \"#utility.yul\":15522:15558   */\n      sstore\n        /* \"#utility.yul\":14957:15568   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14920:15807   */\n    tag_436:\n      pop\n        /* \"#utility.yul\":14510:15813   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14418:15813   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15819:15998   */\n    tag_267:\n        /* \"#utility.yul\":15959:15990   */\n      0x546869732053746f6e6520497320416c72656164792041637469766521000000\n        /* \"#utility.yul\":15955:15956   */\n      0x00\n        /* \"#utility.yul\":15947:15953   */\n      dup3\n        /* \"#utility.yul\":15943:15957   */\n      add\n        /* \"#utility.yul\":15936:15991   */\n      mstore\n        /* \"#utility.yul\":15819:15998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16004:16370   */\n    tag_268:\n        /* \"#utility.yul\":16146:16149   */\n      0x00\n        /* \"#utility.yul\":16167:16234   */\n      tag_448\n        /* \"#utility.yul\":16231:16233   */\n      0x1d\n        /* \"#utility.yul\":16226:16229   */\n      dup4\n        /* \"#utility.yul\":16167:16234   */\n      tag_232\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16160:16234   */\n      swap2\n      pop\n        /* \"#utility.yul\":16243:16336   */\n      tag_449\n        /* \"#utility.yul\":16332:16335   */\n      dup3\n        /* \"#utility.yul\":16243:16336   */\n      tag_267\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":16361:16363   */\n      0x20\n        /* \"#utility.yul\":16356:16359   */\n      dup3\n        /* \"#utility.yul\":16352:16364   */\n      add\n        /* \"#utility.yul\":16345:16364   */\n      swap1\n      pop\n        /* \"#utility.yul\":16004:16370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16376:16795   */\n    tag_184:\n        /* \"#utility.yul\":16542:16546   */\n      0x00\n        /* \"#utility.yul\":16580:16582   */\n      0x20\n        /* \"#utility.yul\":16569:16578   */\n      dup3\n        /* \"#utility.yul\":16565:16583   */\n      add\n        /* \"#utility.yul\":16557:16583   */\n      swap1\n      pop\n        /* \"#utility.yul\":16629:16638   */\n      dup2\n        /* \"#utility.yul\":16623:16627   */\n      dup2\n        /* \"#utility.yul\":16619:16639   */\n      sub\n        /* \"#utility.yul\":16615:16616   */\n      0x00\n        /* \"#utility.yul\":16604:16613   */\n      dup4\n        /* \"#utility.yul\":16600:16617   */\n      add\n        /* \"#utility.yul\":16593:16640   */\n      mstore\n        /* \"#utility.yul\":16657:16788   */\n      tag_451\n        /* \"#utility.yul\":16783:16787   */\n      dup2\n        /* \"#utility.yul\":16657:16788   */\n      tag_268\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16649:16788   */\n      swap1\n      pop\n        /* \"#utility.yul\":16376:16795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16801:17133   */\n    tag_187:\n        /* \"#utility.yul\":16922:16926   */\n      0x00\n        /* \"#utility.yul\":16960:16962   */\n      0x40\n        /* \"#utility.yul\":16949:16958   */\n      dup3\n        /* \"#utility.yul\":16945:16963   */\n      add\n        /* \"#utility.yul\":16937:16963   */\n      swap1\n      pop\n        /* \"#utility.yul\":16973:17044   */\n      tag_453\n        /* \"#utility.yul\":17041:17042   */\n      0x00\n        /* \"#utility.yul\":17030:17039   */\n      dup4\n        /* \"#utility.yul\":17026:17043   */\n      add\n        /* \"#utility.yul\":17017:17023   */\n      dup6\n        /* \"#utility.yul\":16973:17044   */\n      tag_230\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17054:17126   */\n      tag_454\n        /* \"#utility.yul\":17122:17124   */\n      0x20\n        /* \"#utility.yul\":17111:17120   */\n      dup4\n        /* \"#utility.yul\":17107:17125   */\n      add\n        /* \"#utility.yul\":17098:17104   */\n      dup5\n        /* \"#utility.yul\":17054:17126   */\n      tag_220\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":16801:17133   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201d8639f8c6fa5481b9a08c2a1c9fe061c5d6f27f41e2bfe6ef48f6966d05ed7f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3847": {
									"entryPoint": null,
									"id": 3847,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 531,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1893:19",
										"nodeType": "YulBlock",
										"src": "0:1893:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "759:80:19",
													"nodeType": "YulBlock",
													"src": "759:80:19",
													"statements": [
														{
															"nativeSrc": "769:22:19",
															"nodeType": "YulAssignment",
															"src": "769:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:19"
																},
																"nativeSrc": "778:13:19",
																"nodeType": "YulFunctionCall",
																"src": "778:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:19"
																},
																"nativeSrc": "800:33:19",
																"nodeType": "YulFunctionCall",
																"src": "800:33:19"
															},
															"nativeSrc": "800:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:19",
														"nodeType": "YulTypedName",
														"src": "737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:19",
														"nodeType": "YulTypedName",
														"src": "745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:19",
														"nodeType": "YulTypedName",
														"src": "753:5:19",
														"type": ""
													}
												],
												"src": "696:143:19"
											},
											{
												"body": {
													"nativeSrc": "939:413:19",
													"nodeType": "YulBlock",
													"src": "939:413:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:19",
																"nodeType": "YulBlock",
																"src": "985:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:19"
																			},
																			"nativeSrc": "987:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:19"
																		},
																		"nativeSrc": "987:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:19"
																		},
																		"nativeSrc": "956:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:19",
																		"nodeType": "YulLiteral",
																		"src": "981:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:19"
																},
																"nativeSrc": "952:32:19",
																"nodeType": "YulFunctionCall",
																"src": "952:32:19"
															},
															"nativeSrc": "949:119:19",
															"nodeType": "YulIf",
															"src": "949:119:19"
														},
														{
															"nativeSrc": "1078:128:19",
															"nodeType": "YulBlock",
															"src": "1078:128:19",
															"statements": [
																{
																	"nativeSrc": "1093:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:19"
																				},
																				"nativeSrc": "1164:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:19"
																		},
																		"nativeSrc": "1132:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:19",
															"nodeType": "YulBlock",
															"src": "1216:129:19",
															"statements": [
																{
																	"nativeSrc": "1231:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:19"
																				},
																				"nativeSrc": "1303:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:19"
																		},
																		"nativeSrc": "1271:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:19",
														"nodeType": "YulTypedName",
														"src": "901:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:19",
														"nodeType": "YulTypedName",
														"src": "912:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:19",
														"nodeType": "YulTypedName",
														"src": "924:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:19",
														"nodeType": "YulTypedName",
														"src": "932:6:19",
														"type": ""
													}
												],
												"src": "845:507:19"
											},
											{
												"body": {
													"nativeSrc": "1423:53:19",
													"nodeType": "YulBlock",
													"src": "1423:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:19"
																		},
																		"nativeSrc": "1445:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:19"
																},
																"nativeSrc": "1433:37:19",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:19"
															},
															"nativeSrc": "1433:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:19",
														"nodeType": "YulTypedName",
														"src": "1411:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:19",
														"nodeType": "YulTypedName",
														"src": "1418:3:19",
														"type": ""
													}
												],
												"src": "1358:118:19"
											},
											{
												"body": {
													"nativeSrc": "1580:124:19",
													"nodeType": "YulBlock",
													"src": "1580:124:19",
													"statements": [
														{
															"nativeSrc": "1590:26:19",
															"nodeType": "YulAssignment",
															"src": "1590:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:19"
																},
																"nativeSrc": "1598:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:19"
																		},
																		"nativeSrc": "1679:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:19"
																},
																"nativeSrc": "1626:71:19",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:19"
															},
															"nativeSrc": "1626:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:19",
														"nodeType": "YulTypedName",
														"src": "1552:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:19",
														"nodeType": "YulTypedName",
														"src": "1564:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:19",
														"nodeType": "YulTypedName",
														"src": "1575:4:19",
														"type": ""
													}
												],
												"src": "1482:222:19"
											},
											{
												"body": {
													"nativeSrc": "1738:152:19",
													"nodeType": "YulBlock",
													"src": "1738:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1755:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1755:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1758:77:19",
																		"nodeType": "YulLiteral",
																		"src": "1758:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1748:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:19"
																},
																"nativeSrc": "1748:88:19",
																"nodeType": "YulFunctionCall",
																"src": "1748:88:19"
															},
															"nativeSrc": "1748:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "1748:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1852:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1852:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1855:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1855:4:19",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1845:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:19"
																},
																"nativeSrc": "1845:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1845:15:19"
															},
															"nativeSrc": "1845:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1845:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1876:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1876:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1879:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1879:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1869:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:19"
																},
																"nativeSrc": "1869:15:19",
																"nodeType": "YulFunctionCall",
																"src": "1869:15:19"
															},
															"nativeSrc": "1869:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "1869:15:19"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1710:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "1710:180:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620022b5380380620022b583398181016040528101906200003691906200033b565b8160015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b1575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a8919062000391565b60405180910390fd5b620000c2816200021360201b60201c565b508060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606460085f8060038111156200011e576200011d620003ac565b5b6003811115620001335762000132620003ac565b5b81526020019081526020015f208190555060c860085f6001600381111562000160576200015f620003ac565b5b6003811115620001755762000174620003ac565b5b81526020019081526020015f208190555061012c60085f60026003811115620001a357620001a2620003ac565b5b6003811115620001b857620001b7620003ac565b5b81526020019081526020015f208190555061019060085f600380811115620001e557620001e4620003ac565b5b6003811115620001fa57620001f9620003ac565b5b81526020019081526020015f20819055505050620003d9565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200030582620002da565b9050919050565b6200031781620002f9565b811462000322575f80fd5b50565b5f8151905062000335816200030c565b92915050565b5f8060408385031215620003545762000353620002d6565b5b5f620003638582860162000325565b9250506020620003768582860162000325565b9150509250929050565b6200038b81620002f9565b82525050565b5f602082019050620003a65f83018462000380565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611ece80620003e75f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80638da5cb5b1161008a578063c17560d411610064578063c17560d4146101ef578063cc2c98381461021f578063d420e5cb14610255578063f2fde38b14610271576100cd565b80638da5cb5b14610197578063a5c42ef1146101b5578063aa53d139146101d3576100cd565b80630cc797e1146100d1578063166d98cf146100ef5780634bc91efc1461011f57806355bd683c146101555780636811e17714610171578063715018a61461018d575b5f80fd5b6100d961028d565b6040516100e691906115d0565b60405180910390f35b61010960048036038101906101049190611654565b610298565b60405161011691906115d0565b60405180910390f35b610139600480360381019061013491906116a9565b6102ad565b60405161014c9796959493929190611787565b60405180910390f35b61016f600480360381019061016a919061181e565b6103bb565b005b61018b6004803603810190610186919061185c565b6103f9565b005b6101956109db565b005b61019f6109ee565b6040516101ac919061189a565b60405180910390f35b6101bd610a16565b6040516101ca91906115d0565b60405180910390f35b6101ed60048036038101906101e8919061185c565b610a21565b005b610209600480360381019061020491906118b3565b610f44565b60405161021691906115d0565b60405180910390f35b6102396004803603810190610234919061185c565b610f59565b60405161024c9796959493929190611787565b60405180910390f35b61026f600480360381019061026a9190611a0a565b611072565b005b61028b60048036038101906102869190611654565b6113c3565b005b6003805f0154905081565b6007602052805f5260405f205f915090505481565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201549080600301549080600401805461032290611aa3565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90611aa3565b80156103995780601f1061037057610100808354040283529160200191610399565b820191905f5260205f20905b81548152906001019060200180831161037c57829003601f168201915b505050505090806005015490806006015f9054906101000a900460ff16905087565b8060085f8460038111156103d2576103d1611ad3565b5b60038111156103e4576103e3611ad3565b5b81526020019081526020015f20819055505050565b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82600381111561044a57610449611ad3565b5b600381111561045c5761045b611ad3565b5b81526020019081526020015f206005015460055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8360038111156104be576104bd611ad3565b5b60038111156104d0576104cf611ad3565b5b81526020019081526020015f206003015414610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611b4a565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd833060055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8660038111156105b1576105b0611ad3565b5b60038111156105c3576105c2611ad3565b5b81526020019081526020015f20600201546040518463ffffffff1660e01b81526004016105f293929190611b68565b5f604051808303815f87803b158015610609575f80fd5b505af115801561061b573d5f803e3d5ffd5b505050506040518060e001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460038111156106b3576106b2611ad3565b5b60038111156106c5576106c4611ad3565b5b81526020019081526020015f2060020154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f84600381111561072c5761072b611ad3565b5b600381111561073e5761073d611ad3565b5b81526020019081526020015f2060030154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460038111156107a5576107a4611ad3565b5b60038111156107b7576107b6611ad3565b5b81526020019081526020015f2060040180546107d290611aa3565b80601f01602080910402602001604051908101604052809291908181526020018280546107fe90611aa3565b80156108495780601f1061082057610100808354040283529160200191610849565b820191905f5260205f20905b81548152906001019060200180831161082c57829003601f168201915b5050505050815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460038111156108a4576108a3611ad3565b5b60038111156108b6576108b5611ad3565b5b81526020019081526020015f206005015481526020016001151581525060065f6108e06003611447565b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040190816109a09190611d3a565b5060a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050506109d76003611453565b5050565b6109e3611467565b6109ec5f6114ee565b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805f0154905081565b60065f610a2e6003611447565b81526020019081526020015f206006015f9054906101000a900460ff16610a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8190611b4a565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd833060055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f866003811115610b1a57610b19611ad3565b5b6003811115610b2c57610b2b611ad3565b5b81526020019081526020015f20600201546040518463ffffffff1660e01b8152600401610b5b93929190611b68565b5f604051808303815f87803b158015610b72575f80fd5b505af1158015610b84573d5f803e3d5ffd5b505050506040518060e001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610c1c57610c1b611ad3565b5b6003811115610c2e57610c2d611ad3565b5b81526020019081526020015f2060020154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610c9557610c94611ad3565b5b6003811115610ca757610ca6611ad3565b5b81526020019081526020015f2060030154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610d0e57610d0d611ad3565b5b6003811115610d2057610d1f611ad3565b5b81526020019081526020015f206004018054610d3b90611aa3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6790611aa3565b8015610db25780601f10610d8957610100808354040283529160200191610db2565b820191905f5260205f20905b815481529060010190602001808311610d9557829003601f168201915b5050505050815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610e0d57610e0c611ad3565b5b6003811115610e1f57610e1e611ad3565b5b81526020019081526020015f206005015481526020016001151581525060065f610e496003611447565b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004019081610f099190611d3a565b5060a0820151816005015560c0820151816006015f6101000a81548160ff021916908315150217905550905050610f406003611453565b5050565b6008602052805f5260405f205f915090505481565b6005602052815f5260405f20602052805f5260405f205f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004018054610fd990611aa3565b80601f016020809104026020016040519081016040528092919081815260200182805461100590611aa3565b80156110505780601f1061102757610100808354040283529160200191611050565b820191905f5260205f20905b81548152906001019060200180831161103357829003601f168201915b505050505090806005015490806006015f9054906101000a900460ff16905087565b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8260038111156110c3576110c2611ad3565b5b60038111156110d5576110d4611ad3565b5b81526020019081526020015f206006015f9054906101000a900460ff1615611132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112990611e53565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a14481948461117a6002611447565b6040518363ffffffff1660e01b8152600401611197929190611e71565b5f604051808303815f87803b1580156111ae575f80fd5b505af11580156111c0573d5f803e3d5ffd5b505050506040518060e001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016112116002611447565b815260200160085f84600381111561122c5761122b611ad3565b5b600381111561123e5761123d611ad3565b5b81526020019081526020015f205481526020018381526020015f81526020016001151581525060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8360038111156112b5576112b4611ad3565b5b60038111156112c7576112c6611ad3565b5b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040190816113879190611d3a565b5060a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050506113be6002611453565b505050565b6113cb611467565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361143b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611432919061189a565b60405180910390fd5b611444816114ee565b50565b5f815f01549050919050565b6001815f015f828254019250508190555050565b61146f6115b1565b73ffffffffffffffffffffffffffffffffffffffff1661148d6109ee565b73ffffffffffffffffffffffffffffffffffffffff16146114ec576114b06115b1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114e3919061189a565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6115ca816115b8565b82525050565b5f6020820190506115e35f8301846115c1565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611623826115fa565b9050919050565b61163381611619565b811461163d575f80fd5b50565b5f8135905061164e8161162a565b92915050565b5f60208284031215611669576116686115f2565b5b5f61167684828501611640565b91505092915050565b611688816115b8565b8114611692575f80fd5b50565b5f813590506116a38161167f565b92915050565b5f602082840312156116be576116bd6115f2565b5b5f6116cb84828501611695565b91505092915050565b6116dd81611619565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561171a5780820151818401526020810190506116ff565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61173f826116e3565b61174981856116ed565b93506117598185602086016116fd565b61176281611725565b840191505092915050565b5f8115159050919050565b6117818161176d565b82525050565b5f60e08201905061179a5f83018a6116d4565b6117a760208301896116d4565b6117b460408301886115c1565b6117c160608301876115c1565b81810360808301526117d38186611735565b90506117e260a08301856115c1565b6117ef60c0830184611778565b98975050505050505050565b60048110611807575f80fd5b50565b5f81359050611818816117fb565b92915050565b5f8060408385031215611834576118336115f2565b5b5f6118418582860161180a565b925050602061185285828601611695565b9150509250929050565b5f8060408385031215611872576118716115f2565b5b5f61187f85828601611640565b92505060206118908582860161180a565b9150509250929050565b5f6020820190506118ad5f8301846116d4565b92915050565b5f602082840312156118c8576118c76115f2565b5b5f6118d58482850161180a565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61191c82611725565b810181811067ffffffffffffffff8211171561193b5761193a6118e6565b5b80604052505050565b5f61194d6115e9565b90506119598282611913565b919050565b5f67ffffffffffffffff821115611978576119776118e6565b5b61198182611725565b9050602081019050919050565b828183375f83830152505050565b5f6119ae6119a98461195e565b611944565b9050828152602081018484840111156119ca576119c96118e2565b5b6119d584828561198e565b509392505050565b5f82601f8301126119f1576119f06118de565b5b8135611a0184826020860161199c565b91505092915050565b5f805f60608486031215611a2157611a206115f2565b5b5f611a2e86828701611640565b935050602084013567ffffffffffffffff811115611a4f57611a4e6115f6565b5b611a5b868287016119dd565b9250506040611a6c8682870161180a565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611aba57607f821691505b602082108103611acd57611acc611a76565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f46697273742046696c6c2053746f6e65204361702100000000000000000000005f82015250565b5f611b346015836116ed565b9150611b3f82611b00565b602082019050919050565b5f6020820190508181035f830152611b6181611b28565b9050919050565b5f606082019050611b7b5f8301866116d4565b611b8860208301856116d4565b611b9560408301846115c1565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611bf97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611bbe565b611c038683611bbe565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611c3e611c39611c34846115b8565b611c1b565b6115b8565b9050919050565b5f819050919050565b611c5783611c24565b611c6b611c6382611c45565b848454611bca565b825550505050565b5f90565b611c7f611c73565b611c8a818484611c4e565b505050565b5b81811015611cad57611ca25f82611c77565b600181019050611c90565b5050565b601f821115611cf257611cc381611b9d565b611ccc84611baf565b81016020851015611cdb578190505b611cef611ce785611baf565b830182611c8f565b50505b505050565b5f82821c905092915050565b5f611d125f1984600802611cf7565b1980831691505092915050565b5f611d2a8383611d03565b9150826002028217905092915050565b611d43826116e3565b67ffffffffffffffff811115611d5c57611d5b6118e6565b5b611d668254611aa3565b611d71828285611cb1565b5f60209050601f831160018114611da2575f8415611d90578287015190505b611d9a8582611d1f565b865550611e01565b601f198416611db086611b9d565b5f5b82811015611dd757848901518255600182019150602085019450602081019050611db2565b86831015611df45784890151611df0601f891682611d03565b8355505b6001600288020188555050505b505050505050565b7f546869732053746f6e6520497320416c726561647920416374697665210000005f82015250565b5f611e3d601d836116ed565b9150611e4882611e09565b602082019050919050565b5f6020820190508181035f830152611e6a81611e31565b9050919050565b5f604082019050611e845f8301856116d4565b611e9160208301846115c1565b939250505056fea26469706673582212201d8639f8c6fa5481b9a08c2a1c9fe061c5d6f27f41e2bfe6ef48f6966d05ed7f64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22B5 CODESIZE SUB DUP1 PUSH3 0x22B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x33B JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0x213 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x8 PUSH0 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x11E JUMPI PUSH3 0x11D PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x133 JUMPI PUSH3 0x132 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x8 PUSH0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x160 JUMPI PUSH3 0x15F PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x175 JUMPI PUSH3 0x174 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12C PUSH1 0x8 PUSH0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x1B8 JUMPI PUSH3 0x1B7 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x190 PUSH1 0x8 PUSH0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0x1E5 JUMPI PUSH3 0x1E4 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x1FA JUMPI PUSH3 0x1F9 PUSH3 0x3AC JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3D9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x305 DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x317 DUP2 PUSH3 0x2F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x335 DUP2 PUSH3 0x30C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x354 JUMPI PUSH3 0x353 PUSH3 0x2D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x363 DUP6 DUP3 DUP7 ADD PUSH3 0x325 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x376 DUP6 DUP3 DUP7 ADD PUSH3 0x325 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x38B DUP2 PUSH3 0x2F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3A6 PUSH0 DUP4 ADD DUP5 PUSH3 0x380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ECE DUP1 PUSH3 0x3E7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC17560D4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC17560D4 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xCC2C9838 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD420E5CB EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x271 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xA5C42EF1 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xAA53D139 EQ PUSH2 0x1D3 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xCC797E1 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x166D98CF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4BC91EFC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x55BD683C EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x6811E177 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x9DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x13C3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x322 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x399 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x370 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x399 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D1 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x3E3 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x449 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45C JUMPI PUSH2 0x45B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4CF PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5C3 JUMPI PUSH2 0x5C2 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6C5 JUMPI PUSH2 0x6C4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x7D2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7FE SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x820 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8A4 JUMPI PUSH2 0x8A3 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH2 0x8E0 PUSH1 0x3 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x9D7 PUSH1 0x3 PUSH2 0x1453 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x9EC PUSH0 PUSH2 0x14EE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 PUSH2 0xA2E PUSH1 0x3 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB1A JUMPI PUSH2 0xB19 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB2C JUMPI PUSH2 0xB2B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC2E JUMPI PUSH2 0xC2D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD1F PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xD3B SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD67 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD89 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH2 0xE49 PUSH1 0x3 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0xF09 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xF40 PUSH1 0x3 PUSH2 0x1453 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xFD9 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1005 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1050 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1027 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1050 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1033 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10D5 JUMPI PUSH2 0x10D4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP5 PUSH2 0x117A PUSH1 0x2 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1197 SWAP3 SWAP2 SWAP1 PUSH2 0x1E71 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1211 PUSH1 0x2 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x122C JUMPI PUSH2 0x122B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x123E JUMPI PUSH2 0x123D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x13BE PUSH1 0x2 PUSH2 0x1453 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13CB PUSH2 0x1467 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1432 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1444 DUP2 PUSH2 0x14EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x146F PUSH2 0x15B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148D PUSH2 0x9EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14EC JUMPI PUSH2 0x14B0 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CA DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x15C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1623 DUP3 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP2 EQ PUSH2 0x163D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164E DUP2 PUSH2 0x162A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1676 DUP5 DUP3 DUP6 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1688 DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1692 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A3 DUP2 PUSH2 0x167F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP5 DUP3 DUP6 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x171A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16FF JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0x1749 DUP2 DUP6 PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1759 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x1762 DUP2 PUSH2 0x1725 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1781 DUP2 PUSH2 0x176D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x179A PUSH0 DUP4 ADD DUP11 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x17A7 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x17B4 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x17C1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x15C1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x17D3 DUP2 DUP7 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP PUSH2 0x17E2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x17EF PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1778 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1818 DUP2 PUSH2 0x17FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1834 JUMPI PUSH2 0x1833 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1841 DUP6 DUP3 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1852 DUP6 DUP3 DUP7 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1872 JUMPI PUSH2 0x1871 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187F DUP6 DUP3 DUP7 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1890 DUP6 DUP3 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18AD PUSH0 DUP4 ADD DUP5 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D5 DUP5 DUP3 DUP6 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x191C DUP3 PUSH2 0x1725 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x193B JUMPI PUSH2 0x193A PUSH2 0x18E6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x194D PUSH2 0x15E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1959 DUP3 DUP3 PUSH2 0x1913 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x18E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1981 DUP3 PUSH2 0x1725 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19AE PUSH2 0x19A9 DUP5 PUSH2 0x195E JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x18E2 JUMP JUMPDEST JUMPDEST PUSH2 0x19D5 DUP5 DUP3 DUP6 PUSH2 0x198E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F1 JUMPI PUSH2 0x19F0 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A01 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A20 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2E DUP7 DUP3 DUP8 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x15F6 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5B DUP7 DUP3 DUP8 ADD PUSH2 0x19DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6C DUP7 DUP3 DUP8 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ABA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x1A76 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x46697273742046696C6C2053746F6E6520436170210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 PUSH1 0x15 DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3F DUP3 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B61 DUP2 PUSH2 0x1B28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B7B PUSH0 DUP4 ADD DUP7 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x1B88 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x1B95 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1BF9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x1C03 DUP7 DUP4 PUSH2 0x1BBE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3E PUSH2 0x1C39 PUSH2 0x1C34 DUP5 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x15B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C57 DUP4 PUSH2 0x1C24 JUMP JUMPDEST PUSH2 0x1C6B PUSH2 0x1C63 DUP3 PUSH2 0x1C45 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1BCA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1C7F PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x1C8A DUP2 DUP5 DUP5 PUSH2 0x1C4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CAD JUMPI PUSH2 0x1CA2 PUSH0 DUP3 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1CF2 JUMPI PUSH2 0x1CC3 DUP2 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x1CCC DUP5 PUSH2 0x1BAF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1CDB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1CEF PUSH2 0x1CE7 DUP6 PUSH2 0x1BAF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1C8F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D12 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1CF7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2A DUP4 DUP4 PUSH2 0x1D03 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D43 DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D5C JUMPI PUSH2 0x1D5B PUSH2 0x18E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1D66 DUP3 SLOAD PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x1D71 DUP3 DUP3 DUP6 PUSH2 0x1CB1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DA2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1D90 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D9A DUP6 DUP3 PUSH2 0x1D1F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1DB0 DUP7 PUSH2 0x1B9D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DD7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DB2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1DF4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1DF0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D03 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546869732053746F6E6520497320416C72656164792041637469766521000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3D PUSH1 0x1D DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1E48 DUP3 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E6A DUP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E84 PUSH0 DUP4 ADD DUP6 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x1E91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR DUP7 CODECOPY 0xF8 0xC6 STATICCALL SLOAD DUP2 0xB9 LOG0 DUP13 0x2A SHR SWAP16 0xE0 PUSH2 0xC5D6 CALLCODE PUSH32 0x41E2BFE6EF48F6966D05ED7F64736F6C63430008160033000000000000000000 ",
							"sourceMap": "591:2970:18:-:0;;;1566:327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1643:12;1716:1:2;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1692:18:18::1;1671;;:39;;;;;;;;;;;;;;;;;;1750:3;1720:14;:27;1735:11:::0;1720:27:::1;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;;;;1794:3;1763:14;:28;1778:12;1763:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1838:3;1807:14;:28;1822:12;1807:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;1883:3;1851:14;:29;1866:13;1851:29:::0;::::1;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;1566:327:::0;;591:2970;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:180::-;1758:77;1755:1;1748:88;1855:4;1852:1;1845:15;1879:4;1876:1;1869:15;591:2970:18;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 5223,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2190": {
									"entryPoint": 5553,
									"id": 2190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5358,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buy_Stone_4086": {
									"entryPoint": 2593,
									"id": 4086,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_2218": {
									"entryPoint": 5191,
									"id": 2218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserStoneDetail_3785": {
									"entryPoint": 3929,
									"id": 3785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increment_2232": {
									"entryPoint": 5203,
									"id": 2232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@listStone_3790": {
									"entryPoint": 685,
									"id": 3790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@list_Stone_4006": {
									"entryPoint": 1017,
									"id": 4006,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@listedID_3760": {
									"entryPoint": 653,
									"id": 3760,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintStone_3919": {
									"entryPoint": 4210,
									"id": 3919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2542,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2523,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setStonePrices_3862": {
									"entryPoint": 955,
									"id": 3862,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stoneCapAmount_3799": {
									"entryPoint": 3908,
									"id": 3799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenID_3757": {
									"entryPoint": 2582,
									"id": 3757,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalListed_3794": {
									"entryPoint": 664,
									"id": 3794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5059,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Stones_$3804": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_Stones_$3804": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_enum$_Stones_$3804": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_enum$_Stones_$3804": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_Stones_$3804t_uint256": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c": {
									"entryPoint": 6912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Stones_$3804": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17136:19",
										"nodeType": "YulBlock",
										"src": "0:17136:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:19",
													"nodeType": "YulBlock",
													"src": "52:32:19",
													"statements": [
														{
															"nativeSrc": "62:16:19",
															"nodeType": "YulAssignment",
															"src": "62:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:19",
																"nodeType": "YulIdentifier",
																"src": "73:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:19",
														"nodeType": "YulTypedName",
														"src": "34:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:19",
														"nodeType": "YulTypedName",
														"src": "44:7:19",
														"type": ""
													}
												],
												"src": "7:77:19"
											},
											{
												"body": {
													"nativeSrc": "155:53:19",
													"nodeType": "YulBlock",
													"src": "155:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:19"
																		},
																		"nativeSrc": "177:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:19"
																},
																"nativeSrc": "165:37:19",
																"nodeType": "YulFunctionCall",
																"src": "165:37:19"
															},
															"nativeSrc": "165:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:19",
														"nodeType": "YulTypedName",
														"src": "143:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:19",
														"nodeType": "YulTypedName",
														"src": "150:3:19",
														"type": ""
													}
												],
												"src": "90:118:19"
											},
											{
												"body": {
													"nativeSrc": "312:124:19",
													"nodeType": "YulBlock",
													"src": "312:124:19",
													"statements": [
														{
															"nativeSrc": "322:26:19",
															"nodeType": "YulAssignment",
															"src": "322:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:19",
																		"nodeType": "YulLiteral",
																		"src": "345:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:19"
																},
																"nativeSrc": "330:18:19",
																"nodeType": "YulFunctionCall",
																"src": "330:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:19",
																				"nodeType": "YulLiteral",
																				"src": "426:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:19"
																		},
																		"nativeSrc": "411:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:19"
																},
																"nativeSrc": "358:71:19",
																"nodeType": "YulFunctionCall",
																"src": "358:71:19"
															},
															"nativeSrc": "358:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:19",
														"nodeType": "YulTypedName",
														"src": "284:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:19",
														"nodeType": "YulTypedName",
														"src": "296:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:19",
														"nodeType": "YulTypedName",
														"src": "307:4:19",
														"type": ""
													}
												],
												"src": "214:222:19"
											},
											{
												"body": {
													"nativeSrc": "482:35:19",
													"nodeType": "YulBlock",
													"src": "482:35:19",
													"statements": [
														{
															"nativeSrc": "492:19:19",
															"nodeType": "YulAssignment",
															"src": "492:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:19",
																		"nodeType": "YulLiteral",
																		"src": "508:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:19"
																},
																"nativeSrc": "502:9:19",
																"nodeType": "YulFunctionCall",
																"src": "502:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:19",
														"nodeType": "YulTypedName",
														"src": "475:6:19",
														"type": ""
													}
												],
												"src": "442:75:19"
											},
											{
												"body": {
													"nativeSrc": "612:28:19",
													"nodeType": "YulBlock",
													"src": "612:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:19",
																		"nodeType": "YulLiteral",
																		"src": "629:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:19",
																		"nodeType": "YulLiteral",
																		"src": "632:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:19"
																},
																"nativeSrc": "622:12:19",
																"nodeType": "YulFunctionCall",
																"src": "622:12:19"
															},
															"nativeSrc": "622:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:19"
											},
											{
												"body": {
													"nativeSrc": "735:28:19",
													"nodeType": "YulBlock",
													"src": "735:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:19",
																		"nodeType": "YulLiteral",
																		"src": "752:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:19",
																		"nodeType": "YulLiteral",
																		"src": "755:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:19"
																},
																"nativeSrc": "745:12:19",
																"nodeType": "YulFunctionCall",
																"src": "745:12:19"
															},
															"nativeSrc": "745:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:19"
											},
											{
												"body": {
													"nativeSrc": "814:81:19",
													"nodeType": "YulBlock",
													"src": "814:81:19",
													"statements": [
														{
															"nativeSrc": "824:65:19",
															"nodeType": "YulAssignment",
															"src": "824:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:19",
																		"nodeType": "YulLiteral",
																		"src": "846:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:19"
																},
																"nativeSrc": "835:54:19",
																"nodeType": "YulFunctionCall",
																"src": "835:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:19",
														"nodeType": "YulTypedName",
														"src": "796:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:19",
														"nodeType": "YulTypedName",
														"src": "806:7:19",
														"type": ""
													}
												],
												"src": "769:126:19"
											},
											{
												"body": {
													"nativeSrc": "946:51:19",
													"nodeType": "YulBlock",
													"src": "946:51:19",
													"statements": [
														{
															"nativeSrc": "956:35:19",
															"nodeType": "YulAssignment",
															"src": "956:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:19"
																},
																"nativeSrc": "967:24:19",
																"nodeType": "YulFunctionCall",
																"src": "967:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:19",
														"nodeType": "YulTypedName",
														"src": "928:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:19",
														"nodeType": "YulTypedName",
														"src": "938:7:19",
														"type": ""
													}
												],
												"src": "901:96:19"
											},
											{
												"body": {
													"nativeSrc": "1046:79:19",
													"nodeType": "YulBlock",
													"src": "1046:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:19",
																"nodeType": "YulBlock",
																"src": "1103:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:19"
																			},
																			"nativeSrc": "1105:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:19"
																		},
																		"nativeSrc": "1105:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:19"
																				},
																				"nativeSrc": "1076:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:19"
																		},
																		"nativeSrc": "1066:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:19"
																},
																"nativeSrc": "1059:43:19",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:19"
															},
															"nativeSrc": "1056:63:19",
															"nodeType": "YulIf",
															"src": "1056:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:19",
														"nodeType": "YulTypedName",
														"src": "1039:5:19",
														"type": ""
													}
												],
												"src": "1003:122:19"
											},
											{
												"body": {
													"nativeSrc": "1183:87:19",
													"nodeType": "YulBlock",
													"src": "1183:87:19",
													"statements": [
														{
															"nativeSrc": "1193:29:19",
															"nodeType": "YulAssignment",
															"src": "1193:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:19"
																},
																"nativeSrc": "1202:20:19",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:19"
																},
																"nativeSrc": "1231:33:19",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:19"
															},
															"nativeSrc": "1231:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:19",
														"nodeType": "YulTypedName",
														"src": "1161:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:19",
														"nodeType": "YulTypedName",
														"src": "1169:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:19",
														"nodeType": "YulTypedName",
														"src": "1177:5:19",
														"type": ""
													}
												],
												"src": "1131:139:19"
											},
											{
												"body": {
													"nativeSrc": "1342:263:19",
													"nodeType": "YulBlock",
													"src": "1342:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:19",
																"nodeType": "YulBlock",
																"src": "1388:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:19"
																			},
																			"nativeSrc": "1390:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:19"
																		},
																		"nativeSrc": "1390:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:19"
																		},
																		"nativeSrc": "1359:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:19"
																},
																"nativeSrc": "1355:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:19"
															},
															"nativeSrc": "1352:119:19",
															"nodeType": "YulIf",
															"src": "1352:119:19"
														},
														{
															"nativeSrc": "1481:117:19",
															"nodeType": "YulBlock",
															"src": "1481:117:19",
															"statements": [
																{
																	"nativeSrc": "1496:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:19",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:19"
																				},
																				"nativeSrc": "1556:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:19"
																		},
																		"nativeSrc": "1535:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:19",
														"nodeType": "YulTypedName",
														"src": "1312:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:19",
														"nodeType": "YulTypedName",
														"src": "1323:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:19",
														"nodeType": "YulTypedName",
														"src": "1335:6:19",
														"type": ""
													}
												],
												"src": "1276:329:19"
											},
											{
												"body": {
													"nativeSrc": "1654:79:19",
													"nodeType": "YulBlock",
													"src": "1654:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:19",
																"nodeType": "YulBlock",
																"src": "1711:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:19",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:19"
																			},
																			"nativeSrc": "1713:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:19"
																		},
																		"nativeSrc": "1713:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:19"
																				},
																				"nativeSrc": "1684:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:19"
																		},
																		"nativeSrc": "1674:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:19"
																},
																"nativeSrc": "1667:43:19",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:19"
															},
															"nativeSrc": "1664:63:19",
															"nodeType": "YulIf",
															"src": "1664:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:19",
														"nodeType": "YulTypedName",
														"src": "1647:5:19",
														"type": ""
													}
												],
												"src": "1611:122:19"
											},
											{
												"body": {
													"nativeSrc": "1791:87:19",
													"nodeType": "YulBlock",
													"src": "1791:87:19",
													"statements": [
														{
															"nativeSrc": "1801:29:19",
															"nodeType": "YulAssignment",
															"src": "1801:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:19"
																},
																"nativeSrc": "1810:20:19",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:19"
																},
																"nativeSrc": "1839:33:19",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:19"
															},
															"nativeSrc": "1839:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:19",
														"nodeType": "YulTypedName",
														"src": "1769:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:19",
														"nodeType": "YulTypedName",
														"src": "1777:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:19",
														"nodeType": "YulTypedName",
														"src": "1785:5:19",
														"type": ""
													}
												],
												"src": "1739:139:19"
											},
											{
												"body": {
													"nativeSrc": "1950:263:19",
													"nodeType": "YulBlock",
													"src": "1950:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:19",
																"nodeType": "YulBlock",
																"src": "1996:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:19"
																			},
																			"nativeSrc": "1998:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:19"
																		},
																		"nativeSrc": "1998:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:19"
																		},
																		"nativeSrc": "1967:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:19"
																},
																"nativeSrc": "1963:32:19",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:19"
															},
															"nativeSrc": "1960:119:19",
															"nodeType": "YulIf",
															"src": "1960:119:19"
														},
														{
															"nativeSrc": "2089:117:19",
															"nodeType": "YulBlock",
															"src": "2089:117:19",
															"statements": [
																{
																	"nativeSrc": "2104:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:19",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:19",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:19"
																				},
																				"nativeSrc": "2164:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:19"
																		},
																		"nativeSrc": "2143:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:19",
														"nodeType": "YulTypedName",
														"src": "1920:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:19",
														"nodeType": "YulTypedName",
														"src": "1931:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:19",
														"nodeType": "YulTypedName",
														"src": "1943:6:19",
														"type": ""
													}
												],
												"src": "1884:329:19"
											},
											{
												"body": {
													"nativeSrc": "2284:53:19",
													"nodeType": "YulBlock",
													"src": "2284:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2301:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2324:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2306:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:19"
																		},
																		"nativeSrc": "2306:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2294:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:19"
																},
																"nativeSrc": "2294:37:19",
																"nodeType": "YulFunctionCall",
																"src": "2294:37:19"
															},
															"nativeSrc": "2294:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2219:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2272:5:19",
														"nodeType": "YulTypedName",
														"src": "2272:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2279:3:19",
														"nodeType": "YulTypedName",
														"src": "2279:3:19",
														"type": ""
													}
												],
												"src": "2219:118:19"
											},
											{
												"body": {
													"nativeSrc": "2402:40:19",
													"nodeType": "YulBlock",
													"src": "2402:40:19",
													"statements": [
														{
															"nativeSrc": "2413:22:19",
															"nodeType": "YulAssignment",
															"src": "2413:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2429:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "2429:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2423:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "2423:5:19"
																},
																"nativeSrc": "2423:12:19",
																"nodeType": "YulFunctionCall",
																"src": "2423:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2413:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2343:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2385:5:19",
														"nodeType": "YulTypedName",
														"src": "2385:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2395:6:19",
														"nodeType": "YulTypedName",
														"src": "2395:6:19",
														"type": ""
													}
												],
												"src": "2343:99:19"
											},
											{
												"body": {
													"nativeSrc": "2544:73:19",
													"nodeType": "YulBlock",
													"src": "2544:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2561:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2561:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2566:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2566:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2554:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:19"
																},
																"nativeSrc": "2554:19:19",
																"nodeType": "YulFunctionCall",
																"src": "2554:19:19"
															},
															"nativeSrc": "2554:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "2554:19:19"
														},
														{
															"nativeSrc": "2582:29:19",
															"nodeType": "YulAssignment",
															"src": "2582:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2601:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "2601:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2606:4:19",
																		"nodeType": "YulLiteral",
																		"src": "2606:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2597:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:19"
																},
																"nativeSrc": "2597:14:19",
																"nodeType": "YulFunctionCall",
																"src": "2597:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2582:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "2582:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2448:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2516:3:19",
														"nodeType": "YulTypedName",
														"src": "2516:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2521:6:19",
														"nodeType": "YulTypedName",
														"src": "2521:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2532:11:19",
														"nodeType": "YulTypedName",
														"src": "2532:11:19",
														"type": ""
													}
												],
												"src": "2448:169:19"
											},
											{
												"body": {
													"nativeSrc": "2685:184:19",
													"nodeType": "YulBlock",
													"src": "2685:184:19",
													"statements": [
														{
															"nativeSrc": "2695:10:19",
															"nodeType": "YulVariableDeclaration",
															"src": "2695:10:19",
															"value": {
																"kind": "number",
																"nativeSrc": "2704:1:19",
																"nodeType": "YulLiteral",
																"src": "2704:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2699:1:19",
																	"nodeType": "YulTypedName",
																	"src": "2699:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2764:63:19",
																"nodeType": "YulBlock",
																"src": "2764:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2789:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "2789:3:19"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2794:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "2794:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2785:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2785:3:19"
																					},
																					"nativeSrc": "2785:11:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2785:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2808:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "2808:3:19"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2813:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "2813:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2804:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "2804:3:19"
																							},
																							"nativeSrc": "2804:11:19",
																							"nodeType": "YulFunctionCall",
																							"src": "2804:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2798:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2798:5:19"
																					},
																					"nativeSrc": "2798:18:19",
																					"nodeType": "YulFunctionCall",
																					"src": "2798:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2778:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2778:6:19"
																			},
																			"nativeSrc": "2778:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2778:39:19"
																		},
																		"nativeSrc": "2778:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "2778:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2725:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "2725:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2728:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "2728:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2722:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:19"
																},
																"nativeSrc": "2722:13:19",
																"nodeType": "YulFunctionCall",
																"src": "2722:13:19"
															},
															"nativeSrc": "2714:113:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2736:19:19",
																"nodeType": "YulBlock",
																"src": "2736:19:19",
																"statements": [
																	{
																		"nativeSrc": "2738:15:19",
																		"nodeType": "YulAssignment",
																		"src": "2738:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2747:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "2747:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2750:2:19",
																					"nodeType": "YulLiteral",
																					"src": "2750:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2743:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2743:3:19"
																			},
																			"nativeSrc": "2743:10:19",
																			"nodeType": "YulFunctionCall",
																			"src": "2743:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2738:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "2738:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2718:3:19",
																"nodeType": "YulBlock",
																"src": "2718:3:19",
																"statements": []
															},
															"src": "2714:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2847:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "2847:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2852:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2843:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:19"
																		},
																		"nativeSrc": "2843:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2843:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2861:1:19",
																		"nodeType": "YulLiteral",
																		"src": "2861:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2836:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:19"
																},
																"nativeSrc": "2836:27:19",
																"nodeType": "YulFunctionCall",
																"src": "2836:27:19"
															},
															"nativeSrc": "2836:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "2836:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2623:246:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2667:3:19",
														"nodeType": "YulTypedName",
														"src": "2667:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2672:3:19",
														"nodeType": "YulTypedName",
														"src": "2672:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2677:6:19",
														"nodeType": "YulTypedName",
														"src": "2677:6:19",
														"type": ""
													}
												],
												"src": "2623:246:19"
											},
											{
												"body": {
													"nativeSrc": "2923:54:19",
													"nodeType": "YulBlock",
													"src": "2923:54:19",
													"statements": [
														{
															"nativeSrc": "2933:38:19",
															"nodeType": "YulAssignment",
															"src": "2933:38:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2951:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "2951:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2958:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2958:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2947:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:19"
																		},
																		"nativeSrc": "2947:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2947:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2967:2:19",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2963:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "2963:3:19"
																		},
																		"nativeSrc": "2963:7:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:7:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2943:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "2943:3:19"
																},
																"nativeSrc": "2943:28:19",
																"nodeType": "YulFunctionCall",
																"src": "2943:28:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2933:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "2933:6:19"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2875:102:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2906:5:19",
														"nodeType": "YulTypedName",
														"src": "2906:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2916:6:19",
														"nodeType": "YulTypedName",
														"src": "2916:6:19",
														"type": ""
													}
												],
												"src": "2875:102:19"
											},
											{
												"body": {
													"nativeSrc": "3075:285:19",
													"nodeType": "YulBlock",
													"src": "3075:285:19",
													"statements": [
														{
															"nativeSrc": "3085:53:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3085:53:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3132:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3132:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3099:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "3099:32:19"
																},
																"nativeSrc": "3099:39:19",
																"nodeType": "YulFunctionCall",
																"src": "3099:39:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3089:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3089:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3147:78:19",
															"nodeType": "YulAssignment",
															"src": "3147:78:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3213:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3213:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3218:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3218:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3154:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "3154:58:19"
																},
																"nativeSrc": "3154:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3154:71:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3147:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3273:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3280:4:19",
																				"nodeType": "YulLiteral",
																				"src": "3280:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3269:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:19"
																		},
																		"nativeSrc": "3269:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:16:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3287:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3287:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3292:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3292:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3234:34:19",
																	"nodeType": "YulIdentifier",
																	"src": "3234:34:19"
																},
																"nativeSrc": "3234:65:19",
																"nodeType": "YulFunctionCall",
																"src": "3234:65:19"
															},
															"nativeSrc": "3234:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "3234:65:19"
														},
														{
															"nativeSrc": "3308:46:19",
															"nodeType": "YulAssignment",
															"src": "3308:46:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3319:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3319:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3346:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "3346:6:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3324:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "3324:21:19"
																		},
																		"nativeSrc": "3324:29:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3324:29:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3315:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3315:3:19"
																},
																"nativeSrc": "3315:39:19",
																"nodeType": "YulFunctionCall",
																"src": "3315:39:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3308:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2983:377:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3056:5:19",
														"nodeType": "YulTypedName",
														"src": "3056:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3063:3:19",
														"nodeType": "YulTypedName",
														"src": "3063:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3071:3:19",
														"nodeType": "YulTypedName",
														"src": "3071:3:19",
														"type": ""
													}
												],
												"src": "2983:377:19"
											},
											{
												"body": {
													"nativeSrc": "3408:48:19",
													"nodeType": "YulBlock",
													"src": "3408:48:19",
													"statements": [
														{
															"nativeSrc": "3418:32:19",
															"nodeType": "YulAssignment",
															"src": "3418:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3443:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3443:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3436:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "3436:6:19"
																		},
																		"nativeSrc": "3436:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3429:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:19"
																},
																"nativeSrc": "3429:21:19",
																"nodeType": "YulFunctionCall",
																"src": "3429:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3418:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "3418:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3366:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3390:5:19",
														"nodeType": "YulTypedName",
														"src": "3390:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3400:7:19",
														"nodeType": "YulTypedName",
														"src": "3400:7:19",
														"type": ""
													}
												],
												"src": "3366:90:19"
											},
											{
												"body": {
													"nativeSrc": "3521:50:19",
													"nodeType": "YulBlock",
													"src": "3521:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3538:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3538:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3558:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "3558:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3543:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "3543:14:19"
																		},
																		"nativeSrc": "3543:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3543:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "3531:6:19"
																},
																"nativeSrc": "3531:34:19",
																"nodeType": "YulFunctionCall",
																"src": "3531:34:19"
															},
															"nativeSrc": "3531:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "3531:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3462:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3509:5:19",
														"nodeType": "YulTypedName",
														"src": "3509:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3516:3:19",
														"nodeType": "YulTypedName",
														"src": "3516:3:19",
														"type": ""
													}
												],
												"src": "3462:109:19"
											},
											{
												"body": {
													"nativeSrc": "3857:685:19",
													"nodeType": "YulBlock",
													"src": "3857:685:19",
													"statements": [
														{
															"nativeSrc": "3867:27:19",
															"nodeType": "YulAssignment",
															"src": "3867:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3879:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "3879:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3890:3:19",
																		"nodeType": "YulLiteral",
																		"src": "3890:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3875:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3875:3:19"
																},
																"nativeSrc": "3875:19:19",
																"nodeType": "YulFunctionCall",
																"src": "3875:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3867:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3867:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3948:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3948:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3961:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "3961:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3972:1:19",
																				"nodeType": "YulLiteral",
																				"src": "3972:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3957:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:19"
																		},
																		"nativeSrc": "3957:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "3957:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3904:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3904:43:19"
																},
																"nativeSrc": "3904:71:19",
																"nodeType": "YulFunctionCall",
																"src": "3904:71:19"
															},
															"nativeSrc": "3904:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "3904:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4029:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4029:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4042:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4042:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4053:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4053:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4038:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4038:3:19"
																		},
																		"nativeSrc": "4038:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4038:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3985:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "3985:43:19"
																},
																"nativeSrc": "3985:72:19",
																"nodeType": "YulFunctionCall",
																"src": "3985:72:19"
															},
															"nativeSrc": "3985:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "3985:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4111:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4111:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4124:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4124:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4135:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4135:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4120:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:19"
																		},
																		"nativeSrc": "4120:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4067:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "4067:43:19"
																},
																"nativeSrc": "4067:72:19",
																"nodeType": "YulFunctionCall",
																"src": "4067:72:19"
															},
															"nativeSrc": "4067:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "4067:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4193:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4193:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4206:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4206:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4217:2:19",
																				"nodeType": "YulLiteral",
																				"src": "4217:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4202:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:19"
																		},
																		"nativeSrc": "4202:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4149:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "4149:43:19"
																},
																"nativeSrc": "4149:72:19",
																"nodeType": "YulFunctionCall",
																"src": "4149:72:19"
															},
															"nativeSrc": "4149:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "4149:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4242:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4242:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4253:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4253:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4238:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4238:3:19"
																		},
																		"nativeSrc": "4238:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4263:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "4263:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4269:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4259:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4259:3:19"
																		},
																		"nativeSrc": "4259:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4259:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4231:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4231:6:19"
																},
																"nativeSrc": "4231:49:19",
																"nodeType": "YulFunctionCall",
																"src": "4231:49:19"
															},
															"nativeSrc": "4231:49:19",
															"nodeType": "YulExpressionStatement",
															"src": "4231:49:19"
														},
														{
															"nativeSrc": "4289:86:19",
															"nodeType": "YulAssignment",
															"src": "4289:86:19",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4361:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4361:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4370:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4370:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4297:63:19",
																	"nodeType": "YulIdentifier",
																	"src": "4297:63:19"
																},
																"nativeSrc": "4297:78:19",
																"nodeType": "YulFunctionCall",
																"src": "4297:78:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4289:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4289:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "4429:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4429:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4442:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4442:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4453:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4453:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4438:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4438:3:19"
																		},
																		"nativeSrc": "4438:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4438:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4385:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "4385:43:19"
																},
																"nativeSrc": "4385:73:19",
																"nodeType": "YulFunctionCall",
																"src": "4385:73:19"
															},
															"nativeSrc": "4385:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "4385:73:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "4506:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4506:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4519:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4519:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4530:3:19",
																				"nodeType": "YulLiteral",
																				"src": "4530:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4515:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4515:3:19"
																		},
																		"nativeSrc": "4515:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4515:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4468:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "4468:37:19"
																},
																"nativeSrc": "4468:67:19",
																"nodeType": "YulFunctionCall",
																"src": "4468:67:19"
															},
															"nativeSrc": "4468:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "4468:67:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3577:965:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3781:9:19",
														"nodeType": "YulTypedName",
														"src": "3781:9:19",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3793:6:19",
														"nodeType": "YulTypedName",
														"src": "3793:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3801:6:19",
														"nodeType": "YulTypedName",
														"src": "3801:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3809:6:19",
														"nodeType": "YulTypedName",
														"src": "3809:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3817:6:19",
														"nodeType": "YulTypedName",
														"src": "3817:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3825:6:19",
														"nodeType": "YulTypedName",
														"src": "3825:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3833:6:19",
														"nodeType": "YulTypedName",
														"src": "3833:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3841:6:19",
														"nodeType": "YulTypedName",
														"src": "3841:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3852:4:19",
														"nodeType": "YulTypedName",
														"src": "3852:4:19",
														"type": ""
													}
												],
												"src": "3577:965:19"
											},
											{
												"body": {
													"nativeSrc": "4602:56:19",
													"nodeType": "YulBlock",
													"src": "4602:56:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4636:16:19",
																"nodeType": "YulBlock",
																"src": "4636:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4645:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4645:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4648:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4638:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4638:6:19"
																			},
																			"nativeSrc": "4638:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4638:12:19"
																		},
																		"nativeSrc": "4638:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4638:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4625:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4625:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4632:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4632:1:19",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4622:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "4622:2:19"
																		},
																		"nativeSrc": "4622:12:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4622:12:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4615:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:19"
																},
																"nativeSrc": "4615:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4615:20:19"
															},
															"nativeSrc": "4612:40:19",
															"nodeType": "YulIf",
															"src": "4612:40:19"
														}
													]
												},
												"name": "validator_revert_t_enum$_Stones_$3804",
												"nativeSrc": "4548:110:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4595:5:19",
														"nodeType": "YulTypedName",
														"src": "4595:5:19",
														"type": ""
													}
												],
												"src": "4548:110:19"
											},
											{
												"body": {
													"nativeSrc": "4727:98:19",
													"nodeType": "YulBlock",
													"src": "4727:98:19",
													"statements": [
														{
															"nativeSrc": "4737:29:19",
															"nodeType": "YulAssignment",
															"src": "4737:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4759:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4759:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4746:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "4746:12:19"
																},
																"nativeSrc": "4746:20:19",
																"nodeType": "YulFunctionCall",
																"src": "4746:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4737:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "4737:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4813:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "4813:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Stones_$3804",
																	"nativeSrc": "4775:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "4775:37:19"
																},
																"nativeSrc": "4775:44:19",
																"nodeType": "YulFunctionCall",
																"src": "4775:44:19"
															},
															"nativeSrc": "4775:44:19",
															"nodeType": "YulExpressionStatement",
															"src": "4775:44:19"
														}
													]
												},
												"name": "abi_decode_t_enum$_Stones_$3804",
												"nativeSrc": "4664:161:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4705:6:19",
														"nodeType": "YulTypedName",
														"src": "4705:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4713:3:19",
														"nodeType": "YulTypedName",
														"src": "4713:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4721:5:19",
														"nodeType": "YulTypedName",
														"src": "4721:5:19",
														"type": ""
													}
												],
												"src": "4664:161:19"
											},
											{
												"body": {
													"nativeSrc": "4925:402:19",
													"nodeType": "YulBlock",
													"src": "4925:402:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "4971:83:19",
																"nodeType": "YulBlock",
																"src": "4971:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4973:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "4973:77:19"
																			},
																			"nativeSrc": "4973:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4973:79:19"
																		},
																		"nativeSrc": "4973:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "4973:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4946:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "4946:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4955:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4955:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4942:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:19"
																		},
																		"nativeSrc": "4942:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4967:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4938:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:19"
																},
																"nativeSrc": "4938:32:19",
																"nodeType": "YulFunctionCall",
																"src": "4938:32:19"
															},
															"nativeSrc": "4935:119:19",
															"nodeType": "YulIf",
															"src": "4935:119:19"
														},
														{
															"nativeSrc": "5064:128:19",
															"nodeType": "YulBlock",
															"src": "5064:128:19",
															"statements": [
																{
																	"nativeSrc": "5079:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5079:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5093:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5093:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5083:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5083:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5108:74:19",
																	"nodeType": "YulAssignment",
																	"src": "5108:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5154:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5154:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5165:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5165:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5150:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5150:3:19"
																				},
																				"nativeSrc": "5150:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5150:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5174:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5174:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Stones_$3804",
																			"nativeSrc": "5118:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "5118:31:19"
																		},
																		"nativeSrc": "5118:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5118:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5108:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5108:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5202:118:19",
															"nodeType": "YulBlock",
															"src": "5202:118:19",
															"statements": [
																{
																	"nativeSrc": "5217:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5217:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5231:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5231:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5221:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5221:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5247:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5247:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5282:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5282:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5293:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5293:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5278:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5278:3:19"
																				},
																				"nativeSrc": "5278:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5278:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5302:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5302:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5257:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5257:20:19"
																		},
																		"nativeSrc": "5257:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5247:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5247:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Stones_$3804t_uint256",
												"nativeSrc": "4831:496:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4887:9:19",
														"nodeType": "YulTypedName",
														"src": "4887:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4898:7:19",
														"nodeType": "YulTypedName",
														"src": "4898:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4910:6:19",
														"nodeType": "YulTypedName",
														"src": "4910:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4918:6:19",
														"nodeType": "YulTypedName",
														"src": "4918:6:19",
														"type": ""
													}
												],
												"src": "4831:496:19"
											},
											{
												"body": {
													"nativeSrc": "5427:402:19",
													"nodeType": "YulBlock",
													"src": "5427:402:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "5473:83:19",
																"nodeType": "YulBlock",
																"src": "5473:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5475:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "5475:77:19"
																			},
																			"nativeSrc": "5475:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "5475:79:19"
																		},
																		"nativeSrc": "5475:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "5475:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5448:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5448:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5457:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5457:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5444:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:19"
																		},
																		"nativeSrc": "5444:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5469:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5469:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5440:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:19"
																},
																"nativeSrc": "5440:32:19",
																"nodeType": "YulFunctionCall",
																"src": "5440:32:19"
															},
															"nativeSrc": "5437:119:19",
															"nodeType": "YulIf",
															"src": "5437:119:19"
														},
														{
															"nativeSrc": "5566:117:19",
															"nodeType": "YulBlock",
															"src": "5566:117:19",
															"statements": [
																{
																	"nativeSrc": "5581:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5581:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5595:1:19",
																		"nodeType": "YulLiteral",
																		"src": "5595:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5585:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5585:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5610:63:19",
																	"nodeType": "YulAssignment",
																	"src": "5610:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5645:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5645:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5656:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5656:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5641:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5641:3:19"
																				},
																				"nativeSrc": "5641:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5641:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5665:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5665:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5620:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "5620:20:19"
																		},
																		"nativeSrc": "5620:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5620:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5610:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5610:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5693:129:19",
															"nodeType": "YulBlock",
															"src": "5693:129:19",
															"statements": [
																{
																	"nativeSrc": "5708:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5708:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5722:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5722:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5712:6:19",
																			"nodeType": "YulTypedName",
																			"src": "5712:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5738:74:19",
																	"nodeType": "YulAssignment",
																	"src": "5738:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5784:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5784:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5795:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "5795:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5780:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "5780:3:19"
																				},
																				"nativeSrc": "5780:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5780:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5804:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "5804:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Stones_$3804",
																			"nativeSrc": "5748:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "5748:31:19"
																		},
																		"nativeSrc": "5748:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5738:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5738:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_Stones_$3804",
												"nativeSrc": "5333:496:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5389:9:19",
														"nodeType": "YulTypedName",
														"src": "5389:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5400:7:19",
														"nodeType": "YulTypedName",
														"src": "5400:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5412:6:19",
														"nodeType": "YulTypedName",
														"src": "5412:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5420:6:19",
														"nodeType": "YulTypedName",
														"src": "5420:6:19",
														"type": ""
													}
												],
												"src": "5333:496:19"
											},
											{
												"body": {
													"nativeSrc": "5933:124:19",
													"nodeType": "YulBlock",
													"src": "5933:124:19",
													"statements": [
														{
															"nativeSrc": "5943:26:19",
															"nodeType": "YulAssignment",
															"src": "5943:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5955:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5955:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5951:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:19"
																},
																"nativeSrc": "5951:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5951:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5943:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5943:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6023:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6023:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6036:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6047:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6047:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6032:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:19"
																		},
																		"nativeSrc": "6032:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5979:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "5979:43:19"
																},
																"nativeSrc": "5979:71:19",
																"nodeType": "YulFunctionCall",
																"src": "5979:71:19"
															},
															"nativeSrc": "5979:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "5979:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5835:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5905:9:19",
														"nodeType": "YulTypedName",
														"src": "5905:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5917:6:19",
														"nodeType": "YulTypedName",
														"src": "5917:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5928:4:19",
														"nodeType": "YulTypedName",
														"src": "5928:4:19",
														"type": ""
													}
												],
												"src": "5835:222:19"
											},
											{
												"body": {
													"nativeSrc": "6140:274:19",
													"nodeType": "YulBlock",
													"src": "6140:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6186:83:19",
																"nodeType": "YulBlock",
																"src": "6186:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6188:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6188:77:19"
																			},
																			"nativeSrc": "6188:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6188:79:19"
																		},
																		"nativeSrc": "6188:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6188:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6161:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6161:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6170:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6157:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:19"
																		},
																		"nativeSrc": "6157:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6182:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6182:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6153:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:19"
																},
																"nativeSrc": "6153:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6153:32:19"
															},
															"nativeSrc": "6150:119:19",
															"nodeType": "YulIf",
															"src": "6150:119:19"
														},
														{
															"nativeSrc": "6279:128:19",
															"nodeType": "YulBlock",
															"src": "6279:128:19",
															"statements": [
																{
																	"nativeSrc": "6294:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6294:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6308:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6308:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6298:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6298:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6323:74:19",
																	"nodeType": "YulAssignment",
																	"src": "6323:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6369:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6369:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6380:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6380:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6365:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6365:3:19"
																				},
																				"nativeSrc": "6365:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6365:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6389:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6389:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Stones_$3804",
																			"nativeSrc": "6333:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "6333:31:19"
																		},
																		"nativeSrc": "6333:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6333:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6323:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6323:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Stones_$3804",
												"nativeSrc": "6063:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6110:9:19",
														"nodeType": "YulTypedName",
														"src": "6110:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6121:7:19",
														"nodeType": "YulTypedName",
														"src": "6121:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6133:6:19",
														"nodeType": "YulTypedName",
														"src": "6133:6:19",
														"type": ""
													}
												],
												"src": "6063:351:19"
											},
											{
												"body": {
													"nativeSrc": "6509:28:19",
													"nodeType": "YulBlock",
													"src": "6509:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6526:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6526:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6529:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6529:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6519:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:19"
																},
																"nativeSrc": "6519:12:19",
																"nodeType": "YulFunctionCall",
																"src": "6519:12:19"
															},
															"nativeSrc": "6519:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "6519:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6420:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6420:117:19"
											},
											{
												"body": {
													"nativeSrc": "6632:28:19",
													"nodeType": "YulBlock",
													"src": "6632:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6649:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6649:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6652:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6652:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6642:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:19"
																},
																"nativeSrc": "6642:12:19",
																"nodeType": "YulFunctionCall",
																"src": "6642:12:19"
															},
															"nativeSrc": "6642:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "6642:12:19"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6543:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6543:117:19"
											},
											{
												"body": {
													"nativeSrc": "6694:152:19",
													"nodeType": "YulBlock",
													"src": "6694:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6711:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6714:77:19",
																		"nodeType": "YulLiteral",
																		"src": "6714:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6704:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6704:6:19"
																},
																"nativeSrc": "6704:88:19",
																"nodeType": "YulFunctionCall",
																"src": "6704:88:19"
															},
															"nativeSrc": "6704:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "6704:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6808:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6808:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6811:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6811:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6801:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:19"
																},
																"nativeSrc": "6801:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6801:15:19"
															},
															"nativeSrc": "6801:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6801:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6832:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6832:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6835:4:19",
																		"nodeType": "YulLiteral",
																		"src": "6835:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6825:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6825:6:19"
																},
																"nativeSrc": "6825:15:19",
																"nodeType": "YulFunctionCall",
																"src": "6825:15:19"
															},
															"nativeSrc": "6825:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "6825:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6666:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6666:180:19"
											},
											{
												"body": {
													"nativeSrc": "6895:238:19",
													"nodeType": "YulBlock",
													"src": "6895:238:19",
													"statements": [
														{
															"nativeSrc": "6905:58:19",
															"nodeType": "YulVariableDeclaration",
															"src": "6905:58:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6927:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6957:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "6957:4:19"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6935:21:19",
																			"nodeType": "YulIdentifier",
																			"src": "6935:21:19"
																		},
																		"nativeSrc": "6935:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6935:27:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6923:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6923:3:19"
																},
																"nativeSrc": "6923:40:19",
																"nodeType": "YulFunctionCall",
																"src": "6923:40:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6909:10:19",
																	"nodeType": "YulTypedName",
																	"src": "6909:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7074:22:19",
																"nodeType": "YulBlock",
																"src": "7074:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7076:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7076:16:19"
																			},
																			"nativeSrc": "7076:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7076:18:19"
																		},
																		"nativeSrc": "7076:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7076:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7017:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7017:10:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7029:18:19",
																				"nodeType": "YulLiteral",
																				"src": "7029:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7014:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7014:2:19"
																		},
																		"nativeSrc": "7014:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7014:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7053:10:19",
																				"nodeType": "YulIdentifier",
																				"src": "7053:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7065:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7065:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7050:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "7050:2:19"
																		},
																		"nativeSrc": "7050:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7050:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7011:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7011:2:19"
																},
																"nativeSrc": "7011:62:19",
																"nodeType": "YulFunctionCall",
																"src": "7011:62:19"
															},
															"nativeSrc": "7008:88:19",
															"nodeType": "YulIf",
															"src": "7008:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7112:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7112:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7116:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "7116:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7105:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:19"
																},
																"nativeSrc": "7105:22:19",
																"nodeType": "YulFunctionCall",
																"src": "7105:22:19"
															},
															"nativeSrc": "7105:22:19",
															"nodeType": "YulExpressionStatement",
															"src": "7105:22:19"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6852:281:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6881:6:19",
														"nodeType": "YulTypedName",
														"src": "6881:6:19",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6889:4:19",
														"nodeType": "YulTypedName",
														"src": "6889:4:19",
														"type": ""
													}
												],
												"src": "6852:281:19"
											},
											{
												"body": {
													"nativeSrc": "7180:88:19",
													"nodeType": "YulBlock",
													"src": "7180:88:19",
													"statements": [
														{
															"nativeSrc": "7190:30:19",
															"nodeType": "YulAssignment",
															"src": "7190:30:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7200:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "7200:18:19"
																},
																"nativeSrc": "7200:20:19",
																"nodeType": "YulFunctionCall",
																"src": "7200:20:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7190:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7190:6:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7249:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7249:6:19"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7257:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7257:4:19"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7229:19:19",
																	"nodeType": "YulIdentifier",
																	"src": "7229:19:19"
																},
																"nativeSrc": "7229:33:19",
																"nodeType": "YulFunctionCall",
																"src": "7229:33:19"
															},
															"nativeSrc": "7229:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "7229:33:19"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7139:129:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7164:4:19",
														"nodeType": "YulTypedName",
														"src": "7164:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7173:6:19",
														"nodeType": "YulTypedName",
														"src": "7173:6:19",
														"type": ""
													}
												],
												"src": "7139:129:19"
											},
											{
												"body": {
													"nativeSrc": "7341:241:19",
													"nodeType": "YulBlock",
													"src": "7341:241:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "7446:22:19",
																"nodeType": "YulBlock",
																"src": "7446:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7448:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "7448:16:19"
																			},
																			"nativeSrc": "7448:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "7448:18:19"
																		},
																		"nativeSrc": "7448:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "7448:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7418:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7418:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7426:18:19",
																		"nodeType": "YulLiteral",
																		"src": "7426:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7415:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7415:2:19"
																},
																"nativeSrc": "7415:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7415:30:19"
															},
															"nativeSrc": "7412:56:19",
															"nodeType": "YulIf",
															"src": "7412:56:19"
														},
														{
															"nativeSrc": "7478:37:19",
															"nodeType": "YulAssignment",
															"src": "7478:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7508:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7508:6:19"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7486:21:19",
																	"nodeType": "YulIdentifier",
																	"src": "7486:21:19"
																},
																"nativeSrc": "7486:29:19",
																"nodeType": "YulFunctionCall",
																"src": "7486:29:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7478:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7478:4:19"
																}
															]
														},
														{
															"nativeSrc": "7552:23:19",
															"nodeType": "YulAssignment",
															"src": "7552:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7564:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "7564:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7570:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7570:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7560:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7560:3:19"
																},
																"nativeSrc": "7560:15:19",
																"nodeType": "YulFunctionCall",
																"src": "7560:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7552:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7552:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7274:308:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7325:6:19",
														"nodeType": "YulTypedName",
														"src": "7325:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7336:4:19",
														"nodeType": "YulTypedName",
														"src": "7336:4:19",
														"type": ""
													}
												],
												"src": "7274:308:19"
											},
											{
												"body": {
													"nativeSrc": "7652:82:19",
													"nodeType": "YulBlock",
													"src": "7652:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7675:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7675:3:19"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7680:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7680:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7685:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7685:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7662:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "7662:12:19"
																},
																"nativeSrc": "7662:30:19",
																"nodeType": "YulFunctionCall",
																"src": "7662:30:19"
															},
															"nativeSrc": "7662:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "7662:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7712:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7712:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7717:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7717:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7708:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:19"
																		},
																		"nativeSrc": "7708:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:16:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7726:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7726:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7701:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:19"
																},
																"nativeSrc": "7701:27:19",
																"nodeType": "YulFunctionCall",
																"src": "7701:27:19"
															},
															"nativeSrc": "7701:27:19",
															"nodeType": "YulExpressionStatement",
															"src": "7701:27:19"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7588:146:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7634:3:19",
														"nodeType": "YulTypedName",
														"src": "7634:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7639:3:19",
														"nodeType": "YulTypedName",
														"src": "7639:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7644:6:19",
														"nodeType": "YulTypedName",
														"src": "7644:6:19",
														"type": ""
													}
												],
												"src": "7588:146:19"
											},
											{
												"body": {
													"nativeSrc": "7824:341:19",
													"nodeType": "YulBlock",
													"src": "7824:341:19",
													"statements": [
														{
															"nativeSrc": "7834:75:19",
															"nodeType": "YulAssignment",
															"src": "7834:75:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7901:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7901:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7859:41:19",
																			"nodeType": "YulIdentifier",
																			"src": "7859:41:19"
																		},
																		"nativeSrc": "7859:49:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7859:49:19"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7843:15:19",
																	"nodeType": "YulIdentifier",
																	"src": "7843:15:19"
																},
																"nativeSrc": "7843:66:19",
																"nodeType": "YulFunctionCall",
																"src": "7843:66:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7834:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "7834:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7925:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7925:5:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7932:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7918:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7918:6:19"
																},
																"nativeSrc": "7918:21:19",
																"nodeType": "YulFunctionCall",
																"src": "7918:21:19"
															},
															"nativeSrc": "7918:21:19",
															"nodeType": "YulExpressionStatement",
															"src": "7918:21:19"
														},
														{
															"nativeSrc": "7948:27:19",
															"nodeType": "YulVariableDeclaration",
															"src": "7948:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7963:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7963:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7970:4:19",
																		"nodeType": "YulLiteral",
																		"src": "7970:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7959:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7959:3:19"
																},
																"nativeSrc": "7959:16:19",
																"nodeType": "YulFunctionCall",
																"src": "7959:16:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7952:3:19",
																	"nodeType": "YulTypedName",
																	"src": "7952:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8013:83:19",
																"nodeType": "YulBlock",
																"src": "8013:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8015:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8015:77:19"
																			},
																			"nativeSrc": "8015:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8015:79:19"
																		},
																		"nativeSrc": "8015:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8015:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7994:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "7994:3:19"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7999:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "7999:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7990:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:19"
																		},
																		"nativeSrc": "7990:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7990:16:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8008:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8008:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7987:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "7987:2:19"
																},
																"nativeSrc": "7987:25:19",
																"nodeType": "YulFunctionCall",
																"src": "7987:25:19"
															},
															"nativeSrc": "7984:112:19",
															"nodeType": "YulIf",
															"src": "7984:112:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8142:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8142:3:19"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8147:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8152:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8152:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8105:36:19",
																	"nodeType": "YulIdentifier",
																	"src": "8105:36:19"
																},
																"nativeSrc": "8105:54:19",
																"nodeType": "YulFunctionCall",
																"src": "8105:54:19"
															},
															"nativeSrc": "8105:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "8105:54:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7740:425:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7797:3:19",
														"nodeType": "YulTypedName",
														"src": "7797:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7802:6:19",
														"nodeType": "YulTypedName",
														"src": "7802:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7810:3:19",
														"nodeType": "YulTypedName",
														"src": "7810:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7818:5:19",
														"nodeType": "YulTypedName",
														"src": "7818:5:19",
														"type": ""
													}
												],
												"src": "7740:425:19"
											},
											{
												"body": {
													"nativeSrc": "8247:278:19",
													"nodeType": "YulBlock",
													"src": "8247:278:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8296:83:19",
																"nodeType": "YulBlock",
																"src": "8296:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8298:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8298:77:19"
																			},
																			"nativeSrc": "8298:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8298:79:19"
																		},
																		"nativeSrc": "8298:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8298:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8275:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8275:6:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8283:4:19",
																						"nodeType": "YulLiteral",
																						"src": "8283:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8271:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8271:3:19"
																				},
																				"nativeSrc": "8271:17:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8271:17:19"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8290:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "8290:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8267:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:19"
																		},
																		"nativeSrc": "8267:27:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8267:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8260:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:19"
																},
																"nativeSrc": "8260:35:19",
																"nodeType": "YulFunctionCall",
																"src": "8260:35:19"
															},
															"nativeSrc": "8257:122:19",
															"nodeType": "YulIf",
															"src": "8257:122:19"
														},
														{
															"nativeSrc": "8388:34:19",
															"nodeType": "YulVariableDeclaration",
															"src": "8388:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8415:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8415:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8402:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "8402:12:19"
																},
																"nativeSrc": "8402:20:19",
																"nodeType": "YulFunctionCall",
																"src": "8402:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8392:6:19",
																	"nodeType": "YulTypedName",
																	"src": "8392:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8431:88:19",
															"nodeType": "YulAssignment",
															"src": "8431:88:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8492:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8492:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8500:4:19",
																				"nodeType": "YulLiteral",
																				"src": "8500:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8488:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8488:3:19"
																		},
																		"nativeSrc": "8488:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8488:17:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8507:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8507:6:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8515:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "8515:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8440:47:19",
																	"nodeType": "YulIdentifier",
																	"src": "8440:47:19"
																},
																"nativeSrc": "8440:79:19",
																"nodeType": "YulFunctionCall",
																"src": "8440:79:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8431:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "8431:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8185:340:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8225:6:19",
														"nodeType": "YulTypedName",
														"src": "8225:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8233:3:19",
														"nodeType": "YulTypedName",
														"src": "8233:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8241:5:19",
														"nodeType": "YulTypedName",
														"src": "8241:5:19",
														"type": ""
													}
												],
												"src": "8185:340:19"
											},
											{
												"body": {
													"nativeSrc": "8652:700:19",
													"nodeType": "YulBlock",
													"src": "8652:700:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "8698:83:19",
																"nodeType": "YulBlock",
																"src": "8698:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8700:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "8700:77:19"
																			},
																			"nativeSrc": "8700:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "8700:79:19"
																		},
																		"nativeSrc": "8700:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "8700:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8673:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8673:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8682:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8682:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8669:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8669:3:19"
																		},
																		"nativeSrc": "8669:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8669:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8694:2:19",
																		"nodeType": "YulLiteral",
																		"src": "8694:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8665:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8665:3:19"
																},
																"nativeSrc": "8665:32:19",
																"nodeType": "YulFunctionCall",
																"src": "8665:32:19"
															},
															"nativeSrc": "8662:119:19",
															"nodeType": "YulIf",
															"src": "8662:119:19"
														},
														{
															"nativeSrc": "8791:117:19",
															"nodeType": "YulBlock",
															"src": "8791:117:19",
															"statements": [
																{
																	"nativeSrc": "8806:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8806:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8820:1:19",
																		"nodeType": "YulLiteral",
																		"src": "8820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8810:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8810:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8835:63:19",
																	"nodeType": "YulAssignment",
																	"src": "8835:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8870:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8870:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8881:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "8881:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8866:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8866:3:19"
																				},
																				"nativeSrc": "8866:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8866:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8890:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "8890:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8845:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "8845:20:19"
																		},
																		"nativeSrc": "8845:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8845:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8835:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "8835:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8918:288:19",
															"nodeType": "YulBlock",
															"src": "8918:288:19",
															"statements": [
																{
																	"nativeSrc": "8933:46:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8933:46:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8964:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "8964:9:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8975:2:19",
																						"nodeType": "YulLiteral",
																						"src": "8975:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8960:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "8960:3:19"
																				},
																				"nativeSrc": "8960:18:19",
																				"nodeType": "YulFunctionCall",
																				"src": "8960:18:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8947:12:19",
																			"nodeType": "YulIdentifier",
																			"src": "8947:12:19"
																		},
																		"nativeSrc": "8947:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8947:32:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8937:6:19",
																			"nodeType": "YulTypedName",
																			"src": "8937:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9026:83:19",
																		"nodeType": "YulBlock",
																		"src": "9026:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9028:77:19",
																						"nodeType": "YulIdentifier",
																						"src": "9028:77:19"
																					},
																					"nativeSrc": "9028:79:19",
																					"nodeType": "YulFunctionCall",
																					"src": "9028:79:19"
																				},
																				"nativeSrc": "9028:79:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "9028:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8998:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "8998:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9006:18:19",
																				"nodeType": "YulLiteral",
																				"src": "9006:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8995:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "8995:2:19"
																		},
																		"nativeSrc": "8995:30:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8995:30:19"
																	},
																	"nativeSrc": "8992:117:19",
																	"nodeType": "YulIf",
																	"src": "8992:117:19"
																},
																{
																	"nativeSrc": "9123:73:19",
																	"nodeType": "YulAssignment",
																	"src": "9123:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9168:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9168:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9179:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9179:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9164:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9164:3:19"
																				},
																				"nativeSrc": "9164:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9164:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9188:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9188:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9133:30:19",
																			"nodeType": "YulIdentifier",
																			"src": "9133:30:19"
																		},
																		"nativeSrc": "9133:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9133:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9123:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9123:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9216:129:19",
															"nodeType": "YulBlock",
															"src": "9216:129:19",
															"statements": [
																{
																	"nativeSrc": "9231:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9231:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9245:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9245:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9235:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9235:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9261:74:19",
																	"nodeType": "YulAssignment",
																	"src": "9261:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9307:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9307:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9318:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9318:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9303:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9303:3:19"
																				},
																				"nativeSrc": "9303:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9303:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9327:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9327:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Stones_$3804",
																			"nativeSrc": "9271:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "9271:31:19"
																		},
																		"nativeSrc": "9271:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9271:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9261:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9261:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_enum$_Stones_$3804",
												"nativeSrc": "8531:821:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8606:9:19",
														"nodeType": "YulTypedName",
														"src": "8606:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8617:7:19",
														"nodeType": "YulTypedName",
														"src": "8617:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8629:6:19",
														"nodeType": "YulTypedName",
														"src": "8629:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8637:6:19",
														"nodeType": "YulTypedName",
														"src": "8637:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8645:6:19",
														"nodeType": "YulTypedName",
														"src": "8645:6:19",
														"type": ""
													}
												],
												"src": "8531:821:19"
											},
											{
												"body": {
													"nativeSrc": "9386:152:19",
													"nodeType": "YulBlock",
													"src": "9386:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9403:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9403:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9406:77:19",
																		"nodeType": "YulLiteral",
																		"src": "9406:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9396:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:19"
																},
																"nativeSrc": "9396:88:19",
																"nodeType": "YulFunctionCall",
																"src": "9396:88:19"
															},
															"nativeSrc": "9396:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "9396:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9500:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9503:4:19",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9493:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:19"
																},
																"nativeSrc": "9493:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9493:15:19"
															},
															"nativeSrc": "9493:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9493:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9524:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9524:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9527:4:19",
																		"nodeType": "YulLiteral",
																		"src": "9527:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9517:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9517:6:19"
																},
																"nativeSrc": "9517:15:19",
																"nodeType": "YulFunctionCall",
																"src": "9517:15:19"
															},
															"nativeSrc": "9517:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "9517:15:19"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9358:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "9358:180:19"
											},
											{
												"body": {
													"nativeSrc": "9595:269:19",
													"nodeType": "YulBlock",
													"src": "9595:269:19",
													"statements": [
														{
															"nativeSrc": "9605:22:19",
															"nodeType": "YulAssignment",
															"src": "9605:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9619:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9619:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9625:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9625:1:19",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9615:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9615:3:19"
																},
																"nativeSrc": "9615:12:19",
																"nodeType": "YulFunctionCall",
																"src": "9615:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9605:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9605:6:19"
																}
															]
														},
														{
															"nativeSrc": "9636:38:19",
															"nodeType": "YulVariableDeclaration",
															"src": "9636:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9666:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "9666:4:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9672:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9662:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9662:3:19"
																},
																"nativeSrc": "9662:12:19",
																"nodeType": "YulFunctionCall",
																"src": "9662:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9640:18:19",
																	"nodeType": "YulTypedName",
																	"src": "9640:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9713:51:19",
																"nodeType": "YulBlock",
																"src": "9713:51:19",
																"statements": [
																	{
																		"nativeSrc": "9727:27:19",
																		"nodeType": "YulAssignment",
																		"src": "9727:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9741:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "9741:6:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9749:4:19",
																					"nodeType": "YulLiteral",
																					"src": "9749:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9737:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "9737:3:19"
																			},
																			"nativeSrc": "9737:17:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9737:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9727:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9727:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9693:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "9693:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9686:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9686:6:19"
																},
																"nativeSrc": "9686:26:19",
																"nodeType": "YulFunctionCall",
																"src": "9686:26:19"
															},
															"nativeSrc": "9683:81:19",
															"nodeType": "YulIf",
															"src": "9683:81:19"
														},
														{
															"body": {
																"nativeSrc": "9816:42:19",
																"nodeType": "YulBlock",
																"src": "9816:42:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9830:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "9830:16:19"
																			},
																			"nativeSrc": "9830:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9830:18:19"
																		},
																		"nativeSrc": "9830:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9830:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9780:18:19",
																		"nodeType": "YulIdentifier",
																		"src": "9780:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9803:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9803:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9811:2:19",
																				"nodeType": "YulLiteral",
																				"src": "9811:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9800:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9800:2:19"
																		},
																		"nativeSrc": "9800:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9800:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9777:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "9777:2:19"
																},
																"nativeSrc": "9777:38:19",
																"nodeType": "YulFunctionCall",
																"src": "9777:38:19"
															},
															"nativeSrc": "9774:84:19",
															"nodeType": "YulIf",
															"src": "9774:84:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9544:320:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9579:4:19",
														"nodeType": "YulTypedName",
														"src": "9579:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9588:6:19",
														"nodeType": "YulTypedName",
														"src": "9588:6:19",
														"type": ""
													}
												],
												"src": "9544:320:19"
											},
											{
												"body": {
													"nativeSrc": "9898:152:19",
													"nodeType": "YulBlock",
													"src": "9898:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9915:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9915:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9918:77:19",
																		"nodeType": "YulLiteral",
																		"src": "9918:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9908:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:19"
																},
																"nativeSrc": "9908:88:19",
																"nodeType": "YulFunctionCall",
																"src": "9908:88:19"
															},
															"nativeSrc": "9908:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "9908:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10012:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10012:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10015:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10015:4:19",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10005:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10005:6:19"
																},
																"nativeSrc": "10005:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10005:15:19"
															},
															"nativeSrc": "10005:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10005:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10036:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10036:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10039:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10039:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10029:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10029:6:19"
																},
																"nativeSrc": "10029:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10029:15:19"
															},
															"nativeSrc": "10029:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10029:15:19"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "9870:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "9870:180:19"
											},
											{
												"body": {
													"nativeSrc": "10162:65:19",
													"nodeType": "YulBlock",
													"src": "10162:65:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10184:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "10184:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10192:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10192:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10180:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10180:3:19"
																		},
																		"nativeSrc": "10180:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10180:14:19"
																	},
																	{
																		"hexValue": "46697273742046696c6c2053746f6e652043617021",
																		"kind": "string",
																		"nativeSrc": "10196:23:19",
																		"nodeType": "YulLiteral",
																		"src": "10196:23:19",
																		"type": "",
																		"value": "First Fill Stone Cap!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10173:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10173:6:19"
																},
																"nativeSrc": "10173:47:19",
																"nodeType": "YulFunctionCall",
																"src": "10173:47:19"
															},
															"nativeSrc": "10173:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "10173:47:19"
														}
													]
												},
												"name": "store_literal_in_memory_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c",
												"nativeSrc": "10056:171:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10154:6:19",
														"nodeType": "YulTypedName",
														"src": "10154:6:19",
														"type": ""
													}
												],
												"src": "10056:171:19"
											},
											{
												"body": {
													"nativeSrc": "10379:220:19",
													"nodeType": "YulBlock",
													"src": "10379:220:19",
													"statements": [
														{
															"nativeSrc": "10389:74:19",
															"nodeType": "YulAssignment",
															"src": "10389:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10455:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10455:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10460:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10460:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10396:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "10396:58:19"
																},
																"nativeSrc": "10396:67:19",
																"nodeType": "YulFunctionCall",
																"src": "10396:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10389:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10389:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10561:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10561:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c",
																	"nativeSrc": "10472:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "10472:88:19"
																},
																"nativeSrc": "10472:93:19",
																"nodeType": "YulFunctionCall",
																"src": "10472:93:19"
															},
															"nativeSrc": "10472:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "10472:93:19"
														},
														{
															"nativeSrc": "10574:19:19",
															"nodeType": "YulAssignment",
															"src": "10574:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10585:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10585:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10590:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10590:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10581:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10581:3:19"
																},
																"nativeSrc": "10581:12:19",
																"nodeType": "YulFunctionCall",
																"src": "10581:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10574:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10574:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10233:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10367:3:19",
														"nodeType": "YulTypedName",
														"src": "10367:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10375:3:19",
														"nodeType": "YulTypedName",
														"src": "10375:3:19",
														"type": ""
													}
												],
												"src": "10233:366:19"
											},
											{
												"body": {
													"nativeSrc": "10776:248:19",
													"nodeType": "YulBlock",
													"src": "10776:248:19",
													"statements": [
														{
															"nativeSrc": "10786:26:19",
															"nodeType": "YulAssignment",
															"src": "10786:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10798:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10798:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10809:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10809:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10794:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10794:3:19"
																},
																"nativeSrc": "10794:18:19",
																"nodeType": "YulFunctionCall",
																"src": "10794:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10786:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10786:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10833:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10833:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10844:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10844:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10829:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10829:3:19"
																		},
																		"nativeSrc": "10829:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10829:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10852:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "10852:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10858:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10858:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10848:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10848:3:19"
																		},
																		"nativeSrc": "10848:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10848:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10822:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:19"
																},
																"nativeSrc": "10822:47:19",
																"nodeType": "YulFunctionCall",
																"src": "10822:47:19"
															},
															"nativeSrc": "10822:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "10822:47:19"
														},
														{
															"nativeSrc": "10878:139:19",
															"nodeType": "YulAssignment",
															"src": "10878:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11012:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "11012:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10886:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "10886:124:19"
																},
																"nativeSrc": "10886:131:19",
																"nodeType": "YulFunctionCall",
																"src": "10886:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10878:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10878:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10605:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10756:9:19",
														"nodeType": "YulTypedName",
														"src": "10756:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10771:4:19",
														"nodeType": "YulTypedName",
														"src": "10771:4:19",
														"type": ""
													}
												],
												"src": "10605:419:19"
											},
											{
												"body": {
													"nativeSrc": "11184:288:19",
													"nodeType": "YulBlock",
													"src": "11184:288:19",
													"statements": [
														{
															"nativeSrc": "11194:26:19",
															"nodeType": "YulAssignment",
															"src": "11194:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11206:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11206:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11217:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11217:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11202:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:19"
																},
																"nativeSrc": "11202:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11202:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11194:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11194:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11274:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11274:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11287:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11287:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11298:1:19",
																				"nodeType": "YulLiteral",
																				"src": "11298:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11283:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:19"
																		},
																		"nativeSrc": "11283:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11283:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11230:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "11230:43:19"
																},
																"nativeSrc": "11230:71:19",
																"nodeType": "YulFunctionCall",
																"src": "11230:71:19"
															},
															"nativeSrc": "11230:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "11230:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11355:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11355:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11368:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11368:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11379:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11379:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11364:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11364:3:19"
																		},
																		"nativeSrc": "11364:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11364:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11311:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "11311:43:19"
																},
																"nativeSrc": "11311:72:19",
																"nodeType": "YulFunctionCall",
																"src": "11311:72:19"
															},
															"nativeSrc": "11311:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "11311:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11437:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11437:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11450:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "11450:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11461:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11461:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11446:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11446:3:19"
																		},
																		"nativeSrc": "11446:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11446:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11393:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "11393:43:19"
																},
																"nativeSrc": "11393:72:19",
																"nodeType": "YulFunctionCall",
																"src": "11393:72:19"
															},
															"nativeSrc": "11393:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "11393:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11030:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11140:9:19",
														"nodeType": "YulTypedName",
														"src": "11140:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11152:6:19",
														"nodeType": "YulTypedName",
														"src": "11152:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11160:6:19",
														"nodeType": "YulTypedName",
														"src": "11160:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11168:6:19",
														"nodeType": "YulTypedName",
														"src": "11168:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11179:4:19",
														"nodeType": "YulTypedName",
														"src": "11179:4:19",
														"type": ""
													}
												],
												"src": "11030:442:19"
											},
											{
												"body": {
													"nativeSrc": "11532:87:19",
													"nodeType": "YulBlock",
													"src": "11532:87:19",
													"statements": [
														{
															"nativeSrc": "11542:11:19",
															"nodeType": "YulAssignment",
															"src": "11542:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "11550:3:19",
																"nodeType": "YulIdentifier",
																"src": "11550:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11542:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11542:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11570:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11570:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11573:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11573:3:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11563:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11563:6:19"
																},
																"nativeSrc": "11563:14:19",
																"nodeType": "YulFunctionCall",
																"src": "11563:14:19"
															},
															"nativeSrc": "11563:14:19",
															"nodeType": "YulExpressionStatement",
															"src": "11563:14:19"
														},
														{
															"nativeSrc": "11586:26:19",
															"nodeType": "YulAssignment",
															"src": "11586:26:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11604:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11604:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11607:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11607:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11594:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "11594:9:19"
																},
																"nativeSrc": "11594:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11594:18:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11586:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11586:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "11478:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11519:3:19",
														"nodeType": "YulTypedName",
														"src": "11519:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11527:4:19",
														"nodeType": "YulTypedName",
														"src": "11527:4:19",
														"type": ""
													}
												],
												"src": "11478:141:19"
											},
											{
												"body": {
													"nativeSrc": "11669:49:19",
													"nodeType": "YulBlock",
													"src": "11669:49:19",
													"statements": [
														{
															"nativeSrc": "11679:33:19",
															"nodeType": "YulAssignment",
															"src": "11679:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11697:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "11697:5:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11704:2:19",
																				"nodeType": "YulLiteral",
																				"src": "11704:2:19",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11693:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11693:3:19"
																		},
																		"nativeSrc": "11693:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11693:14:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11709:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11709:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11689:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11689:3:19"
																},
																"nativeSrc": "11689:23:19",
																"nodeType": "YulFunctionCall",
																"src": "11689:23:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11679:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11679:6:19"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "11625:93:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11652:5:19",
														"nodeType": "YulTypedName",
														"src": "11652:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11662:6:19",
														"nodeType": "YulTypedName",
														"src": "11662:6:19",
														"type": ""
													}
												],
												"src": "11625:93:19"
											},
											{
												"body": {
													"nativeSrc": "11777:54:19",
													"nodeType": "YulBlock",
													"src": "11777:54:19",
													"statements": [
														{
															"nativeSrc": "11787:37:19",
															"nodeType": "YulAssignment",
															"src": "11787:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11812:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "11812:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11818:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11818:5:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11808:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11808:3:19"
																},
																"nativeSrc": "11808:16:19",
																"nodeType": "YulFunctionCall",
																"src": "11808:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11787:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "11787:8:19"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "11724:107:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11752:4:19",
														"nodeType": "YulTypedName",
														"src": "11752:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11758:5:19",
														"nodeType": "YulTypedName",
														"src": "11758:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11768:8:19",
														"nodeType": "YulTypedName",
														"src": "11768:8:19",
														"type": ""
													}
												],
												"src": "11724:107:19"
											},
											{
												"body": {
													"nativeSrc": "11913:317:19",
													"nodeType": "YulBlock",
													"src": "11913:317:19",
													"statements": [
														{
															"nativeSrc": "11923:35:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11923:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "11944:10:19",
																		"nodeType": "YulIdentifier",
																		"src": "11944:10:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11956:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11956:1:19",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11940:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11940:3:19"
																},
																"nativeSrc": "11940:18:19",
																"nodeType": "YulFunctionCall",
																"src": "11940:18:19"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "11927:9:19",
																	"nodeType": "YulTypedName",
																	"src": "11927:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11967:109:19",
															"nodeType": "YulVariableDeclaration",
															"src": "11967:109:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "11998:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "11998:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12009:66:19",
																		"nodeType": "YulLiteral",
																		"src": "12009:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "11979:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "11979:18:19"
																},
																"nativeSrc": "11979:97:19",
																"nodeType": "YulFunctionCall",
																"src": "11979:97:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11971:4:19",
																	"nodeType": "YulTypedName",
																	"src": "11971:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12085:51:19",
															"nodeType": "YulAssignment",
															"src": "12085:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12116:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12116:9:19"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "12127:8:19",
																		"nodeType": "YulIdentifier",
																		"src": "12127:8:19"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12097:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "12097:18:19"
																},
																"nativeSrc": "12097:39:19",
																"nodeType": "YulFunctionCall",
																"src": "12097:39:19"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "12085:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "12085:8:19"
																}
															]
														},
														{
															"nativeSrc": "12145:30:19",
															"nodeType": "YulAssignment",
															"src": "12145:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12158:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "12158:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "12169:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "12169:4:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "12165:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:19"
																		},
																		"nativeSrc": "12165:9:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12165:9:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12154:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12154:3:19"
																},
																"nativeSrc": "12154:21:19",
																"nodeType": "YulFunctionCall",
																"src": "12154:21:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12145:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "12145:5:19"
																}
															]
														},
														{
															"nativeSrc": "12184:40:19",
															"nodeType": "YulAssignment",
															"src": "12184:40:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12197:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "12197:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "12208:8:19",
																				"nodeType": "YulIdentifier",
																				"src": "12208:8:19"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "12218:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "12218:4:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12204:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12204:3:19"
																		},
																		"nativeSrc": "12204:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12204:19:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12194:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "12194:2:19"
																},
																"nativeSrc": "12194:30:19",
																"nodeType": "YulFunctionCall",
																"src": "12194:30:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12184:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12184:6:19"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "11837:393:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11874:5:19",
														"nodeType": "YulTypedName",
														"src": "11874:5:19",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "11881:10:19",
														"nodeType": "YulTypedName",
														"src": "11881:10:19",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "11893:8:19",
														"nodeType": "YulTypedName",
														"src": "11893:8:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11906:6:19",
														"nodeType": "YulTypedName",
														"src": "11906:6:19",
														"type": ""
													}
												],
												"src": "11837:393:19"
											},
											{
												"body": {
													"nativeSrc": "12268:28:19",
													"nodeType": "YulBlock",
													"src": "12268:28:19",
													"statements": [
														{
															"nativeSrc": "12278:12:19",
															"nodeType": "YulAssignment",
															"src": "12278:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "12285:5:19",
																"nodeType": "YulIdentifier",
																"src": "12285:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12278:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12278:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12236:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12254:5:19",
														"nodeType": "YulTypedName",
														"src": "12254:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12264:3:19",
														"nodeType": "YulTypedName",
														"src": "12264:3:19",
														"type": ""
													}
												],
												"src": "12236:60:19"
											},
											{
												"body": {
													"nativeSrc": "12362:82:19",
													"nodeType": "YulBlock",
													"src": "12362:82:19",
													"statements": [
														{
															"nativeSrc": "12372:66:19",
															"nodeType": "YulAssignment",
															"src": "12372:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12430:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "12430:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "12412:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "12412:17:19"
																				},
																				"nativeSrc": "12412:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12412:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12403:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "12403:8:19"
																		},
																		"nativeSrc": "12403:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12403:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12385:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "12385:17:19"
																},
																"nativeSrc": "12385:53:19",
																"nodeType": "YulFunctionCall",
																"src": "12385:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12372:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "12372:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "12302:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12342:5:19",
														"nodeType": "YulTypedName",
														"src": "12342:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12352:9:19",
														"nodeType": "YulTypedName",
														"src": "12352:9:19",
														"type": ""
													}
												],
												"src": "12302:142:19"
											},
											{
												"body": {
													"nativeSrc": "12497:28:19",
													"nodeType": "YulBlock",
													"src": "12497:28:19",
													"statements": [
														{
															"nativeSrc": "12507:12:19",
															"nodeType": "YulAssignment",
															"src": "12507:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "12514:5:19",
																"nodeType": "YulIdentifier",
																"src": "12514:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12507:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12507:3:19"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "12450:75:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12483:5:19",
														"nodeType": "YulTypedName",
														"src": "12483:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12493:3:19",
														"nodeType": "YulTypedName",
														"src": "12493:3:19",
														"type": ""
													}
												],
												"src": "12450:75:19"
											},
											{
												"body": {
													"nativeSrc": "12607:193:19",
													"nodeType": "YulBlock",
													"src": "12607:193:19",
													"statements": [
														{
															"nativeSrc": "12617:63:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12617:63:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "12672:7:19",
																		"nodeType": "YulIdentifier",
																		"src": "12672:7:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "12641:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "12641:30:19"
																},
																"nativeSrc": "12641:39:19",
																"nodeType": "YulFunctionCall",
																"src": "12641:39:19"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "12621:16:19",
																	"nodeType": "YulTypedName",
																	"src": "12621:16:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12696:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12696:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12736:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "12736:4:19"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12730:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "12730:5:19"
																				},
																				"nativeSrc": "12730:11:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12730:11:19"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "12743:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "12743:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "12775:16:19",
																						"nodeType": "YulIdentifier",
																						"src": "12775:16:19"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "12751:23:19",
																					"nodeType": "YulIdentifier",
																					"src": "12751:23:19"
																				},
																				"nativeSrc": "12751:41:19",
																				"nodeType": "YulFunctionCall",
																				"src": "12751:41:19"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "12702:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "12702:27:19"
																		},
																		"nativeSrc": "12702:91:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12702:91:19"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "12689:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12689:6:19"
																},
																"nativeSrc": "12689:105:19",
																"nodeType": "YulFunctionCall",
																"src": "12689:105:19"
															},
															"nativeSrc": "12689:105:19",
															"nodeType": "YulExpressionStatement",
															"src": "12689:105:19"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "12531:269:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12584:4:19",
														"nodeType": "YulTypedName",
														"src": "12584:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12590:6:19",
														"nodeType": "YulTypedName",
														"src": "12590:6:19",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "12598:7:19",
														"nodeType": "YulTypedName",
														"src": "12598:7:19",
														"type": ""
													}
												],
												"src": "12531:269:19"
											},
											{
												"body": {
													"nativeSrc": "12855:24:19",
													"nodeType": "YulBlock",
													"src": "12855:24:19",
													"statements": [
														{
															"nativeSrc": "12865:8:19",
															"nodeType": "YulAssignment",
															"src": "12865:8:19",
															"value": {
																"kind": "number",
																"nativeSrc": "12872:1:19",
																"nodeType": "YulLiteral",
																"src": "12872:1:19",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12865:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12865:3:19"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "12806:73:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12851:3:19",
														"nodeType": "YulTypedName",
														"src": "12851:3:19",
														"type": ""
													}
												],
												"src": "12806:73:19"
											},
											{
												"body": {
													"nativeSrc": "12938:136:19",
													"nodeType": "YulBlock",
													"src": "12938:136:19",
													"statements": [
														{
															"nativeSrc": "12948:46:19",
															"nodeType": "YulVariableDeclaration",
															"src": "12948:46:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "12962:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "12962:30:19"
																},
																"nativeSrc": "12962:32:19",
																"nodeType": "YulFunctionCall",
																"src": "12962:32:19"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "12952:6:19",
																	"nodeType": "YulTypedName",
																	"src": "12952:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13047:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13047:4:19"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "13053:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13053:6:19"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "13061:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13061:6:19"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "13003:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "13003:43:19"
																},
																"nativeSrc": "13003:65:19",
																"nodeType": "YulFunctionCall",
																"src": "13003:65:19"
															},
															"nativeSrc": "13003:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "13003:65:19"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "12885:189:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12924:4:19",
														"nodeType": "YulTypedName",
														"src": "12924:4:19",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12930:6:19",
														"nodeType": "YulTypedName",
														"src": "12930:6:19",
														"type": ""
													}
												],
												"src": "12885:189:19"
											},
											{
												"body": {
													"nativeSrc": "13130:136:19",
													"nodeType": "YulBlock",
													"src": "13130:136:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "13197:63:19",
																"nodeType": "YulBlock",
																"src": "13197:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13241:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "13241:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13248:1:19",
																					"nodeType": "YulLiteral",
																					"src": "13248:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "13211:29:19",
																				"nodeType": "YulIdentifier",
																				"src": "13211:29:19"
																			},
																			"nativeSrc": "13211:39:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13211:39:19"
																		},
																		"nativeSrc": "13211:39:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13211:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13150:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13150:5:19"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13157:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13157:3:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13147:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13147:2:19"
																},
																"nativeSrc": "13147:14:19",
																"nodeType": "YulFunctionCall",
																"src": "13147:14:19"
															},
															"nativeSrc": "13140:120:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13162:26:19",
																"nodeType": "YulBlock",
																"src": "13162:26:19",
																"statements": [
																	{
																		"nativeSrc": "13164:22:19",
																		"nodeType": "YulAssignment",
																		"src": "13164:22:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13177:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "13177:5:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13184:1:19",
																					"nodeType": "YulLiteral",
																					"src": "13184:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13173:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "13173:3:19"
																			},
																			"nativeSrc": "13173:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13173:13:19"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "13164:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "13164:5:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13144:2:19",
																"nodeType": "YulBlock",
																"src": "13144:2:19",
																"statements": []
															},
															"src": "13140:120:19"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "13080:186:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13118:5:19",
														"nodeType": "YulTypedName",
														"src": "13118:5:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13125:3:19",
														"nodeType": "YulTypedName",
														"src": "13125:3:19",
														"type": ""
													}
												],
												"src": "13080:186:19"
											},
											{
												"body": {
													"nativeSrc": "13351:464:19",
													"nodeType": "YulBlock",
													"src": "13351:464:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "13377:431:19",
																"nodeType": "YulBlock",
																"src": "13377:431:19",
																"statements": [
																	{
																		"nativeSrc": "13391:54:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13391:54:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "13439:5:19",
																					"nodeType": "YulIdentifier",
																					"src": "13439:5:19"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "13407:31:19",
																				"nodeType": "YulIdentifier",
																				"src": "13407:31:19"
																			},
																			"nativeSrc": "13407:38:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13407:38:19"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "13395:8:19",
																				"nodeType": "YulTypedName",
																				"src": "13395:8:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13458:63:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13458:63:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "13481:8:19",
																					"nodeType": "YulIdentifier",
																					"src": "13481:8:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "13509:10:19",
																							"nodeType": "YulIdentifier",
																							"src": "13509:10:19"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "13491:17:19",
																						"nodeType": "YulIdentifier",
																						"src": "13491:17:19"
																					},
																					"nativeSrc": "13491:29:19",
																					"nodeType": "YulFunctionCall",
																					"src": "13491:29:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13477:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "13477:3:19"
																			},
																			"nativeSrc": "13477:44:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13477:44:19"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "13462:11:19",
																				"nodeType": "YulTypedName",
																				"src": "13462:11:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13678:27:19",
																			"nodeType": "YulBlock",
																			"src": "13678:27:19",
																			"statements": [
																				{
																					"nativeSrc": "13680:23:19",
																					"nodeType": "YulAssignment",
																					"src": "13680:23:19",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "13695:8:19",
																						"nodeType": "YulIdentifier",
																						"src": "13695:8:19"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "13680:11:19",
																							"nodeType": "YulIdentifier",
																							"src": "13680:11:19"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "13662:10:19",
																					"nodeType": "YulIdentifier",
																					"src": "13662:10:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13674:2:19",
																					"nodeType": "YulLiteral",
																					"src": "13674:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13659:2:19",
																				"nodeType": "YulIdentifier",
																				"src": "13659:2:19"
																			},
																			"nativeSrc": "13659:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13659:18:19"
																		},
																		"nativeSrc": "13656:49:19",
																		"nodeType": "YulIf",
																		"src": "13656:49:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "13747:11:19",
																					"nodeType": "YulIdentifier",
																					"src": "13747:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "13764:8:19",
																							"nodeType": "YulIdentifier",
																							"src": "13764:8:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "13792:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "13792:3:19"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "13774:17:19",
																								"nodeType": "YulIdentifier",
																								"src": "13774:17:19"
																							},
																							"nativeSrc": "13774:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "13774:22:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13760:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "13760:3:19"
																					},
																					"nativeSrc": "13760:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "13760:37:19"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "13718:28:19",
																				"nodeType": "YulIdentifier",
																				"src": "13718:28:19"
																			},
																			"nativeSrc": "13718:80:19",
																			"nodeType": "YulFunctionCall",
																			"src": "13718:80:19"
																		},
																		"nativeSrc": "13718:80:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "13718:80:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "13368:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13368:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13373:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13373:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13365:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "13365:2:19"
																},
																"nativeSrc": "13365:11:19",
																"nodeType": "YulFunctionCall",
																"src": "13365:11:19"
															},
															"nativeSrc": "13362:446:19",
															"nodeType": "YulIf",
															"src": "13362:446:19"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "13272:543:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "13327:5:19",
														"nodeType": "YulTypedName",
														"src": "13327:5:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13334:3:19",
														"nodeType": "YulTypedName",
														"src": "13334:3:19",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "13339:10:19",
														"nodeType": "YulTypedName",
														"src": "13339:10:19",
														"type": ""
													}
												],
												"src": "13272:543:19"
											},
											{
												"body": {
													"nativeSrc": "13884:54:19",
													"nodeType": "YulBlock",
													"src": "13884:54:19",
													"statements": [
														{
															"nativeSrc": "13894:37:19",
															"nodeType": "YulAssignment",
															"src": "13894:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13919:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "13919:4:19"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13925:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "13925:5:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13915:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13915:3:19"
																},
																"nativeSrc": "13915:16:19",
																"nodeType": "YulFunctionCall",
																"src": "13915:16:19"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13894:8:19",
																	"nodeType": "YulIdentifier",
																	"src": "13894:8:19"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "13821:117:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13859:4:19",
														"nodeType": "YulTypedName",
														"src": "13859:4:19",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13865:5:19",
														"nodeType": "YulTypedName",
														"src": "13865:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13875:8:19",
														"nodeType": "YulTypedName",
														"src": "13875:8:19",
														"type": ""
													}
												],
												"src": "13821:117:19"
											},
											{
												"body": {
													"nativeSrc": "13995:118:19",
													"nodeType": "YulBlock",
													"src": "13995:118:19",
													"statements": [
														{
															"nativeSrc": "14005:68:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14005:68:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14054:1:19",
																						"nodeType": "YulLiteral",
																						"src": "14054:1:19",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "14057:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "14057:5:19"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "14050:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "14050:3:19"
																				},
																				"nativeSrc": "14050:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14050:13:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14069:1:19",
																						"nodeType": "YulLiteral",
																						"src": "14069:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14065:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "14065:3:19"
																				},
																				"nativeSrc": "14065:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14065:6:19"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "14021:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "14021:28:19"
																		},
																		"nativeSrc": "14021:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14021:51:19"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "14017:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14017:3:19"
																},
																"nativeSrc": "14017:56:19",
																"nodeType": "YulFunctionCall",
																"src": "14017:56:19"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14009:4:19",
																	"nodeType": "YulTypedName",
																	"src": "14009:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14082:25:19",
															"nodeType": "YulAssignment",
															"src": "14082:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14096:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14096:4:19"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "14102:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14102:4:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14092:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14092:3:19"
																},
																"nativeSrc": "14092:15:19",
																"nodeType": "YulFunctionCall",
																"src": "14092:15:19"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14082:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14082:6:19"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "13944:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13972:4:19",
														"nodeType": "YulTypedName",
														"src": "13972:4:19",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "13978:5:19",
														"nodeType": "YulTypedName",
														"src": "13978:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13988:6:19",
														"nodeType": "YulTypedName",
														"src": "13988:6:19",
														"type": ""
													}
												],
												"src": "13944:169:19"
											},
											{
												"body": {
													"nativeSrc": "14199:214:19",
													"nodeType": "YulBlock",
													"src": "14199:214:19",
													"statements": [
														{
															"nativeSrc": "14332:37:19",
															"nodeType": "YulAssignment",
															"src": "14332:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14359:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14359:4:19"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "14365:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14365:3:19"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "14340:18:19",
																	"nodeType": "YulIdentifier",
																	"src": "14340:18:19"
																},
																"nativeSrc": "14340:29:19",
																"nodeType": "YulFunctionCall",
																"src": "14340:29:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14332:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14332:4:19"
																}
															]
														},
														{
															"nativeSrc": "14378:29:19",
															"nodeType": "YulAssignment",
															"src": "14378:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14389:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14389:4:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14399:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14399:1:19",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "14402:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "14402:3:19"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "14395:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14395:3:19"
																		},
																		"nativeSrc": "14395:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14395:11:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14386:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14386:2:19"
																},
																"nativeSrc": "14386:21:19",
																"nodeType": "YulFunctionCall",
																"src": "14386:21:19"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "14378:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14378:4:19"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "14118:295:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14180:4:19",
														"nodeType": "YulTypedName",
														"src": "14180:4:19",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14186:3:19",
														"nodeType": "YulTypedName",
														"src": "14186:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "14194:4:19",
														"nodeType": "YulTypedName",
														"src": "14194:4:19",
														"type": ""
													}
												],
												"src": "14118:295:19"
											},
											{
												"body": {
													"nativeSrc": "14510:1303:19",
													"nodeType": "YulBlock",
													"src": "14510:1303:19",
													"statements": [
														{
															"nativeSrc": "14521:51:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14521:51:19",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14568:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "14568:3:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14535:32:19",
																	"nodeType": "YulIdentifier",
																	"src": "14535:32:19"
																},
																"nativeSrc": "14535:37:19",
																"nodeType": "YulFunctionCall",
																"src": "14535:37:19"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "14525:6:19",
																	"nodeType": "YulTypedName",
																	"src": "14525:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14657:22:19",
																"nodeType": "YulBlock",
																"src": "14657:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14659:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "14659:16:19"
																			},
																			"nativeSrc": "14659:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14659:18:19"
																		},
																		"nativeSrc": "14659:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14659:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14629:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14629:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14637:18:19",
																		"nodeType": "YulLiteral",
																		"src": "14637:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14626:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14626:2:19"
																},
																"nativeSrc": "14626:30:19",
																"nodeType": "YulFunctionCall",
																"src": "14626:30:19"
															},
															"nativeSrc": "14623:56:19",
															"nodeType": "YulIf",
															"src": "14623:56:19"
														},
														{
															"nativeSrc": "14689:52:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14689:52:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "14735:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "14735:4:19"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "14729:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "14729:5:19"
																		},
																		"nativeSrc": "14729:11:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14729:11:19"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "14703:25:19",
																	"nodeType": "YulIdentifier",
																	"src": "14703:25:19"
																},
																"nativeSrc": "14703:38:19",
																"nodeType": "YulFunctionCall",
																"src": "14703:38:19"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "14693:6:19",
																	"nodeType": "YulTypedName",
																	"src": "14693:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14834:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14834:4:19"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "14840:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14840:6:19"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "14848:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14848:6:19"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "14788:45:19",
																	"nodeType": "YulIdentifier",
																	"src": "14788:45:19"
																},
																"nativeSrc": "14788:67:19",
																"nodeType": "YulFunctionCall",
																"src": "14788:67:19"
															},
															"nativeSrc": "14788:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "14788:67:19"
														},
														{
															"nativeSrc": "14865:18:19",
															"nodeType": "YulVariableDeclaration",
															"src": "14865:18:19",
															"value": {
																"kind": "number",
																"nativeSrc": "14882:1:19",
																"nodeType": "YulLiteral",
																"src": "14882:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14869:9:19",
																	"nodeType": "YulTypedName",
																	"src": "14869:9:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14893:17:19",
															"nodeType": "YulAssignment",
															"src": "14893:17:19",
															"value": {
																"kind": "number",
																"nativeSrc": "14906:4:19",
																"nodeType": "YulLiteral",
																"src": "14906:4:19",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14893:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "14893:9:19"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14957:611:19",
																		"nodeType": "YulBlock",
																		"src": "14957:611:19",
																		"statements": [
																			{
																				"nativeSrc": "14971:37:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14971:37:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "14990:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "14990:6:19"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15002:4:19",
																									"nodeType": "YulLiteral",
																									"src": "15002:4:19",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14998:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "14998:3:19"
																							},
																							"nativeSrc": "14998:9:19",
																							"nodeType": "YulFunctionCall",
																							"src": "14998:9:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14986:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "14986:3:19"
																					},
																					"nativeSrc": "14986:22:19",
																					"nodeType": "YulFunctionCall",
																					"src": "14986:22:19"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "14975:7:19",
																						"nodeType": "YulTypedName",
																						"src": "14975:7:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15022:51:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15022:51:19",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15068:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "15068:4:19"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "15036:31:19",
																						"nodeType": "YulIdentifier",
																						"src": "15036:31:19"
																					},
																					"nativeSrc": "15036:37:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15036:37:19"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15026:6:19",
																						"nodeType": "YulTypedName",
																						"src": "15026:6:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15086:10:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15086:10:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15095:1:19",
																					"nodeType": "YulLiteral",
																					"src": "15095:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15090:1:19",
																						"nodeType": "YulTypedName",
																						"src": "15090:1:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15154:163:19",
																					"nodeType": "YulBlock",
																					"src": "15154:163:19",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15179:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "15179:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "15197:3:19",
																														"nodeType": "YulIdentifier",
																														"src": "15197:3:19"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "15202:9:19",
																														"nodeType": "YulIdentifier",
																														"src": "15202:9:19"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "15193:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "15193:3:19"
																												},
																												"nativeSrc": "15193:19:19",
																												"nodeType": "YulFunctionCall",
																												"src": "15193:19:19"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "15187:5:19",
																											"nodeType": "YulIdentifier",
																											"src": "15187:5:19"
																										},
																										"nativeSrc": "15187:26:19",
																										"nodeType": "YulFunctionCall",
																										"src": "15187:26:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15172:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "15172:6:19"
																								},
																								"nativeSrc": "15172:42:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15172:42:19"
																							},
																							"nativeSrc": "15172:42:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "15172:42:19"
																						},
																						{
																							"nativeSrc": "15231:24:19",
																							"nodeType": "YulAssignment",
																							"src": "15231:24:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15245:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "15245:6:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15253:1:19",
																										"nodeType": "YulLiteral",
																										"src": "15253:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15241:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "15241:3:19"
																								},
																								"nativeSrc": "15241:14:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15241:14:19"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "15231:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "15231:6:19"
																								}
																							]
																						},
																						{
																							"nativeSrc": "15272:31:19",
																							"nodeType": "YulAssignment",
																							"src": "15272:31:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "15289:9:19",
																										"nodeType": "YulIdentifier",
																										"src": "15289:9:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15300:2:19",
																										"nodeType": "YulLiteral",
																										"src": "15300:2:19",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15285:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "15285:3:19"
																								},
																								"nativeSrc": "15285:18:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15285:18:19"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "15272:9:19",
																									"nodeType": "YulIdentifier",
																									"src": "15272:9:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "15120:1:19",
																							"nodeType": "YulIdentifier",
																							"src": "15120:1:19"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15123:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "15123:7:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15117:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "15117:2:19"
																					},
																					"nativeSrc": "15117:14:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15117:14:19"
																				},
																				"nativeSrc": "15109:208:19",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "15132:21:19",
																					"nodeType": "YulBlock",
																					"src": "15132:21:19",
																					"statements": [
																						{
																							"nativeSrc": "15134:17:19",
																							"nodeType": "YulAssignment",
																							"src": "15134:17:19",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "15143:1:19",
																										"nodeType": "YulIdentifier",
																										"src": "15143:1:19"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15146:4:19",
																										"nodeType": "YulLiteral",
																										"src": "15146:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15139:3:19",
																									"nodeType": "YulIdentifier",
																									"src": "15139:3:19"
																								},
																								"nativeSrc": "15139:12:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15139:12:19"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "15134:1:19",
																									"nodeType": "YulIdentifier",
																									"src": "15134:1:19"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15113:3:19",
																					"nodeType": "YulBlock",
																					"src": "15113:3:19",
																					"statements": []
																				},
																				"src": "15109:208:19"
																			},
																			{
																				"body": {
																					"nativeSrc": "15353:156:19",
																					"nodeType": "YulBlock",
																					"src": "15353:156:19",
																					"statements": [
																						{
																							"nativeSrc": "15371:43:19",
																							"nodeType": "YulVariableDeclaration",
																							"src": "15371:43:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15398:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "15398:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15403:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "15403:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15394:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "15394:3:19"
																										},
																										"nativeSrc": "15394:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "15394:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15388:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "15388:5:19"
																								},
																								"nativeSrc": "15388:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15388:26:19"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "15375:9:19",
																									"nodeType": "YulTypedName",
																									"src": "15375:9:19",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15438:6:19",
																										"nodeType": "YulIdentifier",
																										"src": "15438:6:19"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "15465:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "15465:9:19"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "15480:6:19",
																														"nodeType": "YulIdentifier",
																														"src": "15480:6:19"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "15488:4:19",
																														"nodeType": "YulLiteral",
																														"src": "15488:4:19",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "15476:3:19",
																													"nodeType": "YulIdentifier",
																													"src": "15476:3:19"
																												},
																												"nativeSrc": "15476:17:19",
																												"nodeType": "YulFunctionCall",
																												"src": "15476:17:19"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "15446:18:19",
																											"nodeType": "YulIdentifier",
																											"src": "15446:18:19"
																										},
																										"nativeSrc": "15446:48:19",
																										"nodeType": "YulFunctionCall",
																										"src": "15446:48:19"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15431:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "15431:6:19"
																								},
																								"nativeSrc": "15431:64:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15431:64:19"
																							},
																							"nativeSrc": "15431:64:19",
																							"nodeType": "YulExpressionStatement",
																							"src": "15431:64:19"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15336:7:19",
																							"nodeType": "YulIdentifier",
																							"src": "15336:7:19"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "15345:6:19",
																							"nodeType": "YulIdentifier",
																							"src": "15345:6:19"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15333:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "15333:2:19"
																					},
																					"nativeSrc": "15333:19:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15333:19:19"
																				},
																				"nativeSrc": "15330:179:19",
																				"nodeType": "YulIf",
																				"src": "15330:179:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15529:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "15529:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "15543:6:19",
																											"nodeType": "YulIdentifier",
																											"src": "15543:6:19"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "15551:1:19",
																											"nodeType": "YulLiteral",
																											"src": "15551:1:19",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "15539:3:19",
																										"nodeType": "YulIdentifier",
																										"src": "15539:3:19"
																									},
																									"nativeSrc": "15539:14:19",
																									"nodeType": "YulFunctionCall",
																									"src": "15539:14:19"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15555:1:19",
																									"nodeType": "YulLiteral",
																									"src": "15555:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15535:3:19",
																								"nodeType": "YulIdentifier",
																								"src": "15535:3:19"
																							},
																							"nativeSrc": "15535:22:19",
																							"nodeType": "YulFunctionCall",
																							"src": "15535:22:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15522:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "15522:6:19"
																					},
																					"nativeSrc": "15522:36:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15522:36:19"
																				},
																				"nativeSrc": "15522:36:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "15522:36:19"
																			}
																		]
																	},
																	"nativeSrc": "14950:618:19",
																	"nodeType": "YulCase",
																	"src": "14950:618:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14955:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14955:1:19",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15585:222:19",
																		"nodeType": "YulBlock",
																		"src": "15585:222:19",
																		"statements": [
																			{
																				"nativeSrc": "15599:14:19",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15599:14:19",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15612:1:19",
																					"nodeType": "YulLiteral",
																					"src": "15612:1:19",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15603:5:19",
																						"nodeType": "YulTypedName",
																						"src": "15603:5:19",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15636:67:19",
																					"nodeType": "YulBlock",
																					"src": "15636:67:19",
																					"statements": [
																						{
																							"nativeSrc": "15654:35:19",
																							"nodeType": "YulAssignment",
																							"src": "15654:35:19",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15673:3:19",
																												"nodeType": "YulIdentifier",
																												"src": "15673:3:19"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15678:9:19",
																												"nodeType": "YulIdentifier",
																												"src": "15678:9:19"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15669:3:19",
																											"nodeType": "YulIdentifier",
																											"src": "15669:3:19"
																										},
																										"nativeSrc": "15669:19:19",
																										"nodeType": "YulFunctionCall",
																										"src": "15669:19:19"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15663:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "15663:5:19"
																								},
																								"nativeSrc": "15663:26:19",
																								"nodeType": "YulFunctionCall",
																								"src": "15663:26:19"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "15654:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "15654:5:19"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "15629:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "15629:6:19"
																				},
																				"nativeSrc": "15626:77:19",
																				"nodeType": "YulIf",
																				"src": "15626:77:19"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15723:4:19",
																							"nodeType": "YulIdentifier",
																							"src": "15723:4:19"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "15782:5:19",
																									"nodeType": "YulIdentifier",
																									"src": "15782:5:19"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "15789:6:19",
																									"nodeType": "YulIdentifier",
																									"src": "15789:6:19"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "15729:52:19",
																								"nodeType": "YulIdentifier",
																								"src": "15729:52:19"
																							},
																							"nativeSrc": "15729:67:19",
																							"nodeType": "YulFunctionCall",
																							"src": "15729:67:19"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15716:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "15716:6:19"
																					},
																					"nativeSrc": "15716:81:19",
																					"nodeType": "YulFunctionCall",
																					"src": "15716:81:19"
																				},
																				"nativeSrc": "15716:81:19",
																				"nodeType": "YulExpressionStatement",
																				"src": "15716:81:19"
																			}
																		]
																	},
																	"nativeSrc": "15577:230:19",
																	"nodeType": "YulCase",
																	"src": "15577:230:19",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14930:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14930:6:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14938:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14938:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14927:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "14927:2:19"
																},
																"nativeSrc": "14927:14:19",
																"nodeType": "YulFunctionCall",
																"src": "14927:14:19"
															},
															"nativeSrc": "14920:887:19",
															"nodeType": "YulSwitch",
															"src": "14920:887:19"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "14418:1395:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14499:4:19",
														"nodeType": "YulTypedName",
														"src": "14499:4:19",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "14505:3:19",
														"nodeType": "YulTypedName",
														"src": "14505:3:19",
														"type": ""
													}
												],
												"src": "14418:1395:19"
											},
											{
												"body": {
													"nativeSrc": "15925:73:19",
													"nodeType": "YulBlock",
													"src": "15925:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15947:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15947:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15955:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15955:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15943:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15943:3:19"
																		},
																		"nativeSrc": "15943:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15943:14:19"
																	},
																	{
																		"hexValue": "546869732053746f6e6520497320416c72656164792041637469766521",
																		"kind": "string",
																		"nativeSrc": "15959:31:19",
																		"nodeType": "YulLiteral",
																		"src": "15959:31:19",
																		"type": "",
																		"value": "This Stone Is Already Active!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15936:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15936:6:19"
																},
																"nativeSrc": "15936:55:19",
																"nodeType": "YulFunctionCall",
																"src": "15936:55:19"
															},
															"nativeSrc": "15936:55:19",
															"nodeType": "YulExpressionStatement",
															"src": "15936:55:19"
														}
													]
												},
												"name": "store_literal_in_memory_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475",
												"nativeSrc": "15819:179:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15917:6:19",
														"nodeType": "YulTypedName",
														"src": "15917:6:19",
														"type": ""
													}
												],
												"src": "15819:179:19"
											},
											{
												"body": {
													"nativeSrc": "16150:220:19",
													"nodeType": "YulBlock",
													"src": "16150:220:19",
													"statements": [
														{
															"nativeSrc": "16160:74:19",
															"nodeType": "YulAssignment",
															"src": "16160:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16226:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16226:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16231:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16231:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16167:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "16167:58:19"
																},
																"nativeSrc": "16167:67:19",
																"nodeType": "YulFunctionCall",
																"src": "16167:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16160:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16160:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16332:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16332:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475",
																	"nativeSrc": "16243:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "16243:88:19"
																},
																"nativeSrc": "16243:93:19",
																"nodeType": "YulFunctionCall",
																"src": "16243:93:19"
															},
															"nativeSrc": "16243:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "16243:93:19"
														},
														{
															"nativeSrc": "16345:19:19",
															"nodeType": "YulAssignment",
															"src": "16345:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16356:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16356:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16361:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16361:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16352:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16352:3:19"
																},
																"nativeSrc": "16352:12:19",
																"nodeType": "YulFunctionCall",
																"src": "16352:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16345:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16345:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16004:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16138:3:19",
														"nodeType": "YulTypedName",
														"src": "16138:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16146:3:19",
														"nodeType": "YulTypedName",
														"src": "16146:3:19",
														"type": ""
													}
												],
												"src": "16004:366:19"
											},
											{
												"body": {
													"nativeSrc": "16547:248:19",
													"nodeType": "YulBlock",
													"src": "16547:248:19",
													"statements": [
														{
															"nativeSrc": "16557:26:19",
															"nodeType": "YulAssignment",
															"src": "16557:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16569:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16569:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16580:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16580:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16565:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16565:3:19"
																},
																"nativeSrc": "16565:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16565:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16557:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16557:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16604:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16604:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16615:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16615:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16600:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16600:3:19"
																		},
																		"nativeSrc": "16600:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16600:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16623:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16623:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16629:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16629:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16619:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16619:3:19"
																		},
																		"nativeSrc": "16619:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16619:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16593:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16593:6:19"
																},
																"nativeSrc": "16593:47:19",
																"nodeType": "YulFunctionCall",
																"src": "16593:47:19"
															},
															"nativeSrc": "16593:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "16593:47:19"
														},
														{
															"nativeSrc": "16649:139:19",
															"nodeType": "YulAssignment",
															"src": "16649:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16783:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16783:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16657:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "16657:124:19"
																},
																"nativeSrc": "16657:131:19",
																"nodeType": "YulFunctionCall",
																"src": "16657:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16649:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16649:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16376:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16527:9:19",
														"nodeType": "YulTypedName",
														"src": "16527:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16542:4:19",
														"nodeType": "YulTypedName",
														"src": "16542:4:19",
														"type": ""
													}
												],
												"src": "16376:419:19"
											},
											{
												"body": {
													"nativeSrc": "16927:206:19",
													"nodeType": "YulBlock",
													"src": "16927:206:19",
													"statements": [
														{
															"nativeSrc": "16937:26:19",
															"nodeType": "YulAssignment",
															"src": "16937:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16949:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16949:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16960:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16960:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16945:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16945:3:19"
																},
																"nativeSrc": "16945:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16945:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16937:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16937:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17017:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17017:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17030:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17030:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17041:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17041:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17026:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17026:3:19"
																		},
																		"nativeSrc": "17026:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17026:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16973:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16973:43:19"
																},
																"nativeSrc": "16973:71:19",
																"nodeType": "YulFunctionCall",
																"src": "16973:71:19"
															},
															"nativeSrc": "16973:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "16973:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17098:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17098:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17111:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17111:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17122:2:19",
																				"nodeType": "YulLiteral",
																				"src": "17122:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17107:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17107:3:19"
																		},
																		"nativeSrc": "17107:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17107:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17054:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "17054:43:19"
																},
																"nativeSrc": "17054:72:19",
																"nodeType": "YulFunctionCall",
																"src": "17054:72:19"
															},
															"nativeSrc": "17054:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "17054:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16801:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16891:9:19",
														"nodeType": "YulTypedName",
														"src": "16891:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16903:6:19",
														"nodeType": "YulTypedName",
														"src": "16903:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16911:6:19",
														"nodeType": "YulTypedName",
														"src": "16911:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16922:4:19",
														"nodeType": "YulTypedName",
														"src": "16922:4:19",
														"type": ""
													}
												],
												"src": "16801:332:19"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function validator_revert_t_enum$_Stones_$3804(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Stones_$3804(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Stones_$3804(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Stones_$3804t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Stones_$3804(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_Stones_$3804(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Stones_$3804(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_enum$_Stones_$3804(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Stones_$3804(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_enum$_Stones_$3804(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_enum$_Stones_$3804(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c(memPtr) {\n\n        mstore(add(memPtr, 0), \"First Fill Stone Cap!\")\n\n    }\n\n    function abi_encode_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475(memPtr) {\n\n        mstore(add(memPtr, 0), \"This Stone Is Already Active!\")\n\n    }\n\n    function abi_encode_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80638da5cb5b1161008a578063c17560d411610064578063c17560d4146101ef578063cc2c98381461021f578063d420e5cb14610255578063f2fde38b14610271576100cd565b80638da5cb5b14610197578063a5c42ef1146101b5578063aa53d139146101d3576100cd565b80630cc797e1146100d1578063166d98cf146100ef5780634bc91efc1461011f57806355bd683c146101555780636811e17714610171578063715018a61461018d575b5f80fd5b6100d961028d565b6040516100e691906115d0565b60405180910390f35b61010960048036038101906101049190611654565b610298565b60405161011691906115d0565b60405180910390f35b610139600480360381019061013491906116a9565b6102ad565b60405161014c9796959493929190611787565b60405180910390f35b61016f600480360381019061016a919061181e565b6103bb565b005b61018b6004803603810190610186919061185c565b6103f9565b005b6101956109db565b005b61019f6109ee565b6040516101ac919061189a565b60405180910390f35b6101bd610a16565b6040516101ca91906115d0565b60405180910390f35b6101ed60048036038101906101e8919061185c565b610a21565b005b610209600480360381019061020491906118b3565b610f44565b60405161021691906115d0565b60405180910390f35b6102396004803603810190610234919061185c565b610f59565b60405161024c9796959493929190611787565b60405180910390f35b61026f600480360381019061026a9190611a0a565b611072565b005b61028b60048036038101906102869190611654565b6113c3565b005b6003805f0154905081565b6007602052805f5260405f205f915090505481565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201549080600301549080600401805461032290611aa3565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90611aa3565b80156103995780601f1061037057610100808354040283529160200191610399565b820191905f5260205f20905b81548152906001019060200180831161037c57829003601f168201915b505050505090806005015490806006015f9054906101000a900460ff16905087565b8060085f8460038111156103d2576103d1611ad3565b5b60038111156103e4576103e3611ad3565b5b81526020019081526020015f20819055505050565b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82600381111561044a57610449611ad3565b5b600381111561045c5761045b611ad3565b5b81526020019081526020015f206005015460055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8360038111156104be576104bd611ad3565b5b60038111156104d0576104cf611ad3565b5b81526020019081526020015f206003015414610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611b4a565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd833060055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8660038111156105b1576105b0611ad3565b5b60038111156105c3576105c2611ad3565b5b81526020019081526020015f20600201546040518463ffffffff1660e01b81526004016105f293929190611b68565b5f604051808303815f87803b158015610609575f80fd5b505af115801561061b573d5f803e3d5ffd5b505050506040518060e001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460038111156106b3576106b2611ad3565b5b60038111156106c5576106c4611ad3565b5b81526020019081526020015f2060020154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f84600381111561072c5761072b611ad3565b5b600381111561073e5761073d611ad3565b5b81526020019081526020015f2060030154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460038111156107a5576107a4611ad3565b5b60038111156107b7576107b6611ad3565b5b81526020019081526020015f2060040180546107d290611aa3565b80601f01602080910402602001604051908101604052809291908181526020018280546107fe90611aa3565b80156108495780601f1061082057610100808354040283529160200191610849565b820191905f5260205f20905b81548152906001019060200180831161082c57829003601f168201915b5050505050815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460038111156108a4576108a3611ad3565b5b60038111156108b6576108b5611ad3565b5b81526020019081526020015f206005015481526020016001151581525060065f6108e06003611447565b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040190816109a09190611d3a565b5060a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050506109d76003611453565b5050565b6109e3611467565b6109ec5f6114ee565b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805f0154905081565b60065f610a2e6003611447565b81526020019081526020015f206006015f9054906101000a900460ff16610a8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8190611b4a565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd833060055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f866003811115610b1a57610b19611ad3565b5b6003811115610b2c57610b2b611ad3565b5b81526020019081526020015f20600201546040518463ffffffff1660e01b8152600401610b5b93929190611b68565b5f604051808303815f87803b158015610b72575f80fd5b505af1158015610b84573d5f803e3d5ffd5b505050506040518060e001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610c1c57610c1b611ad3565b5b6003811115610c2e57610c2d611ad3565b5b81526020019081526020015f2060020154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610c9557610c94611ad3565b5b6003811115610ca757610ca6611ad3565b5b81526020019081526020015f2060030154815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610d0e57610d0d611ad3565b5b6003811115610d2057610d1f611ad3565b5b81526020019081526020015f206004018054610d3b90611aa3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6790611aa3565b8015610db25780601f10610d8957610100808354040283529160200191610db2565b820191905f5260205f20905b815481529060010190602001808311610d9557829003601f168201915b5050505050815260200160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f846003811115610e0d57610e0c611ad3565b5b6003811115610e1f57610e1e611ad3565b5b81526020019081526020015f206005015481526020016001151581525060065f610e496003611447565b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004019081610f099190611d3a565b5060a0820151816005015560c0820151816006015f6101000a81548160ff021916908315150217905550905050610f406003611453565b5050565b6008602052805f5260405f205f915090505481565b6005602052815f5260405f20602052805f5260405f205f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004018054610fd990611aa3565b80601f016020809104026020016040519081016040528092919081815260200182805461100590611aa3565b80156110505780601f1061102757610100808354040283529160200191611050565b820191905f5260205f20905b81548152906001019060200180831161103357829003601f168201915b505050505090806005015490806006015f9054906101000a900460ff16905087565b60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8260038111156110c3576110c2611ad3565b5b60038111156110d5576110d4611ad3565b5b81526020019081526020015f206006015f9054906101000a900460ff1615611132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112990611e53565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a14481948461117a6002611447565b6040518363ffffffff1660e01b8152600401611197929190611e71565b5f604051808303815f87803b1580156111ae575f80fd5b505af11580156111c0573d5f803e3d5ffd5b505050506040518060e001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016112116002611447565b815260200160085f84600381111561122c5761122b611ad3565b5b600381111561123e5761123d611ad3565b5b81526020019081526020015f205481526020018381526020015f81526020016001151581525060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8360038111156112b5576112b4611ad3565b5b60038111156112c7576112c6611ad3565b5b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040190816113879190611d3a565b5060a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050506113be6002611453565b505050565b6113cb611467565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361143b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611432919061189a565b60405180910390fd5b611444816114ee565b50565b5f815f01549050919050565b6001815f015f828254019250508190555050565b61146f6115b1565b73ffffffffffffffffffffffffffffffffffffffff1661148d6109ee565b73ffffffffffffffffffffffffffffffffffffffff16146114ec576114b06115b1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114e3919061189a565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6115ca816115b8565b82525050565b5f6020820190506115e35f8301846115c1565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611623826115fa565b9050919050565b61163381611619565b811461163d575f80fd5b50565b5f8135905061164e8161162a565b92915050565b5f60208284031215611669576116686115f2565b5b5f61167684828501611640565b91505092915050565b611688816115b8565b8114611692575f80fd5b50565b5f813590506116a38161167f565b92915050565b5f602082840312156116be576116bd6115f2565b5b5f6116cb84828501611695565b91505092915050565b6116dd81611619565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561171a5780820151818401526020810190506116ff565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61173f826116e3565b61174981856116ed565b93506117598185602086016116fd565b61176281611725565b840191505092915050565b5f8115159050919050565b6117818161176d565b82525050565b5f60e08201905061179a5f83018a6116d4565b6117a760208301896116d4565b6117b460408301886115c1565b6117c160608301876115c1565b81810360808301526117d38186611735565b90506117e260a08301856115c1565b6117ef60c0830184611778565b98975050505050505050565b60048110611807575f80fd5b50565b5f81359050611818816117fb565b92915050565b5f8060408385031215611834576118336115f2565b5b5f6118418582860161180a565b925050602061185285828601611695565b9150509250929050565b5f8060408385031215611872576118716115f2565b5b5f61187f85828601611640565b92505060206118908582860161180a565b9150509250929050565b5f6020820190506118ad5f8301846116d4565b92915050565b5f602082840312156118c8576118c76115f2565b5b5f6118d58482850161180a565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61191c82611725565b810181811067ffffffffffffffff8211171561193b5761193a6118e6565b5b80604052505050565b5f61194d6115e9565b90506119598282611913565b919050565b5f67ffffffffffffffff821115611978576119776118e6565b5b61198182611725565b9050602081019050919050565b828183375f83830152505050565b5f6119ae6119a98461195e565b611944565b9050828152602081018484840111156119ca576119c96118e2565b5b6119d584828561198e565b509392505050565b5f82601f8301126119f1576119f06118de565b5b8135611a0184826020860161199c565b91505092915050565b5f805f60608486031215611a2157611a206115f2565b5b5f611a2e86828701611640565b935050602084013567ffffffffffffffff811115611a4f57611a4e6115f6565b5b611a5b868287016119dd565b9250506040611a6c8682870161180a565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611aba57607f821691505b602082108103611acd57611acc611a76565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f46697273742046696c6c2053746f6e65204361702100000000000000000000005f82015250565b5f611b346015836116ed565b9150611b3f82611b00565b602082019050919050565b5f6020820190508181035f830152611b6181611b28565b9050919050565b5f606082019050611b7b5f8301866116d4565b611b8860208301856116d4565b611b9560408301846115c1565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611bf97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611bbe565b611c038683611bbe565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611c3e611c39611c34846115b8565b611c1b565b6115b8565b9050919050565b5f819050919050565b611c5783611c24565b611c6b611c6382611c45565b848454611bca565b825550505050565b5f90565b611c7f611c73565b611c8a818484611c4e565b505050565b5b81811015611cad57611ca25f82611c77565b600181019050611c90565b5050565b601f821115611cf257611cc381611b9d565b611ccc84611baf565b81016020851015611cdb578190505b611cef611ce785611baf565b830182611c8f565b50505b505050565b5f82821c905092915050565b5f611d125f1984600802611cf7565b1980831691505092915050565b5f611d2a8383611d03565b9150826002028217905092915050565b611d43826116e3565b67ffffffffffffffff811115611d5c57611d5b6118e6565b5b611d668254611aa3565b611d71828285611cb1565b5f60209050601f831160018114611da2575f8415611d90578287015190505b611d9a8582611d1f565b865550611e01565b601f198416611db086611b9d565b5f5b82811015611dd757848901518255600182019150602085019450602081019050611db2565b86831015611df45784890151611df0601f891682611d03565b8355505b6001600288020188555050505b505050505050565b7f546869732053746f6e6520497320416c726561647920416374697665210000005f82015250565b5f611e3d601d836116ed565b9150611e4882611e09565b602082019050919050565b5f6020820190508181035f830152611e6a81611e31565b9050919050565b5f604082019050611e845f8301856116d4565b611e9160208301846115c1565b939250505056fea26469706673582212201d8639f8c6fa5481b9a08c2a1c9fe061c5d6f27f41e2bfe6ef48f6966d05ed7f64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC17560D4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC17560D4 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xCC2C9838 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD420E5CB EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x271 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xA5C42EF1 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xAA53D139 EQ PUSH2 0x1D3 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xCC797E1 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x166D98CF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x4BC91EFC EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x55BD683C EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x6811E177 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x18D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x181E JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x9DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1072 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x13C3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x322 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x399 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x370 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x399 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D1 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E4 JUMPI PUSH2 0x3E3 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x449 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45C JUMPI PUSH2 0x45B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4CF PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD EQ PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5C3 JUMPI PUSH2 0x5C2 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6C5 JUMPI PUSH2 0x6C4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x7D2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7FE SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x849 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x820 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x849 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x82C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8A4 JUMPI PUSH2 0x8A3 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH2 0x8E0 PUSH1 0x3 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x9D7 PUSH1 0x3 PUSH2 0x1453 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9E3 PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x9EC PUSH0 PUSH2 0x14EE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 PUSH2 0xA2E PUSH1 0x3 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA81 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB1A JUMPI PUSH2 0xB19 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB2C JUMPI PUSH2 0xB2B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB72 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC2E JUMPI PUSH2 0xC2D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCA7 JUMPI PUSH2 0xCA6 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD1F PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xD3B SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD67 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD89 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH2 0xE49 PUSH1 0x3 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0xF09 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xF40 PUSH1 0x3 PUSH2 0x1453 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xFD9 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1005 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1050 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1027 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1050 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1033 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10D5 JUMPI PUSH2 0x10D4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP5 PUSH2 0x117A PUSH1 0x2 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1197 SWAP3 SWAP2 SWAP1 PUSH2 0x1E71 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1211 PUSH1 0x2 PUSH2 0x1447 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x122C JUMPI PUSH2 0x122B PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x123E JUMPI PUSH2 0x123D PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C6 PUSH2 0x1AD3 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1387 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x13BE PUSH1 0x2 PUSH2 0x1453 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13CB PUSH2 0x1467 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1432 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1444 DUP2 PUSH2 0x14EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x146F PUSH2 0x15B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x148D PUSH2 0x9EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14EC JUMPI PUSH2 0x14B0 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E3 SWAP2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15CA DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x15C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1623 DUP3 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP2 EQ PUSH2 0x163D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164E DUP2 PUSH2 0x162A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1676 DUP5 DUP3 DUP6 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1688 DUP2 PUSH2 0x15B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1692 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A3 DUP2 PUSH2 0x167F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP5 DUP3 DUP6 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DD DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x171A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16FF JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173F DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0x1749 DUP2 DUP6 PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP PUSH2 0x1759 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x1762 DUP2 PUSH2 0x1725 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1781 DUP2 PUSH2 0x176D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x179A PUSH0 DUP4 ADD DUP11 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x17A7 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x17B4 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x17C1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x15C1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x17D3 DUP2 DUP7 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP PUSH2 0x17E2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x17EF PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1778 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1818 DUP2 PUSH2 0x17FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1834 JUMPI PUSH2 0x1833 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1841 DUP6 DUP3 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1852 DUP6 DUP3 DUP7 ADD PUSH2 0x1695 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1872 JUMPI PUSH2 0x1871 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187F DUP6 DUP3 DUP7 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1890 DUP6 DUP3 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18AD PUSH0 DUP4 ADD DUP5 PUSH2 0x16D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D5 DUP5 DUP3 DUP6 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x191C DUP3 PUSH2 0x1725 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x193B JUMPI PUSH2 0x193A PUSH2 0x18E6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x194D PUSH2 0x15E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1959 DUP3 DUP3 PUSH2 0x1913 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x18E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1981 DUP3 PUSH2 0x1725 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19AE PUSH2 0x19A9 DUP5 PUSH2 0x195E JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x18E2 JUMP JUMPDEST JUMPDEST PUSH2 0x19D5 DUP5 DUP3 DUP6 PUSH2 0x198E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19F1 JUMPI PUSH2 0x19F0 PUSH2 0x18DE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A01 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x199C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A21 JUMPI PUSH2 0x1A20 PUSH2 0x15F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2E DUP7 DUP3 DUP8 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x15F6 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5B DUP7 DUP3 DUP8 ADD PUSH2 0x19DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A6C DUP7 DUP3 DUP8 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ABA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x1A76 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x46697273742046696C6C2053746F6E6520436170210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 PUSH1 0x15 DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3F DUP3 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B61 DUP2 PUSH2 0x1B28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B7B PUSH0 DUP4 ADD DUP7 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x1B88 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x1B95 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1BF9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x1C03 DUP7 DUP4 PUSH2 0x1BBE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3E PUSH2 0x1C39 PUSH2 0x1C34 DUP5 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x15B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C57 DUP4 PUSH2 0x1C24 JUMP JUMPDEST PUSH2 0x1C6B PUSH2 0x1C63 DUP3 PUSH2 0x1C45 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1BCA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1C7F PUSH2 0x1C73 JUMP JUMPDEST PUSH2 0x1C8A DUP2 DUP5 DUP5 PUSH2 0x1C4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CAD JUMPI PUSH2 0x1CA2 PUSH0 DUP3 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1CF2 JUMPI PUSH2 0x1CC3 DUP2 PUSH2 0x1B9D JUMP JUMPDEST PUSH2 0x1CCC DUP5 PUSH2 0x1BAF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1CDB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1CEF PUSH2 0x1CE7 DUP6 PUSH2 0x1BAF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1C8F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D12 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1CF7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2A DUP4 DUP4 PUSH2 0x1D03 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D43 DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D5C JUMPI PUSH2 0x1D5B PUSH2 0x18E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1D66 DUP3 SLOAD PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x1D71 DUP3 DUP3 DUP6 PUSH2 0x1CB1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DA2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1D90 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D9A DUP6 DUP3 PUSH2 0x1D1F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E01 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1DB0 DUP7 PUSH2 0x1B9D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DD7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DB2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1DF4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1DF0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D03 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x546869732053746F6E6520497320416C72656164792041637469766521000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3D PUSH1 0x1D DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1E48 DUP3 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E6A DUP2 PUSH2 0x1E31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E84 PUSH0 DUP4 ADD DUP6 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x1E91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR DUP7 CODECOPY 0xF8 0xC6 STATICCALL SLOAD DUP2 0xB9 LOG0 DUP13 0x2A SHR SWAP16 0xE0 PUSH2 0xC5D6 CALLCODE PUSH32 0x41E2BFE6EF48F6966D05ED7F64736F6C63430008160033000000000000000000 ",
							"sourceMap": "591:2970:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1374:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1316:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1899:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2502:545;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;719:31:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3056:503;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1428:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1225:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2009:488;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;756:32:18;;;;;;;;;:::o;1374:48::-;;;;;;;;;;;;;;;;;:::o;1316:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1899:104::-;1990:6;1966:14;:21;1981:5;1966:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;;;1899:104;;:::o;2502:545::-;2615:18;:23;2634:3;2615:23;;;;;;;;;;;;;;;:29;2639:4;2615:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;;2572:18;:23;2591:3;2572:23;;;;;;;;;;;;;;;:29;2596:4;2572:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;:79;2564:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;2693:18;;;;;;;;;;;2686:39;;;2726:3;2739:4;2746:18;:23;2765:3;2746:23;;;;;;;;;;;;;;;:29;2770:4;2746:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;;2686:98;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2826:184;;;;;;;;2838:3;2826:184;;;;;;2850:4;2826:184;;;;;;2856:18;:23;2875:3;2856:23;;;;;;;;;;;;;;;:29;2880:4;2856:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;;2826:184;;;;2894:18;:23;2913:3;2894:23;;;;;;;;;;;;;;;:29;2918:4;2894:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;2826:184;;;;2934:18;:23;2953:3;2934:23;;;;;;;;;;;;;;;:29;2958:4;2934:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;;2826:184;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2968:18;:23;2987:3;2968:23;;;;;;;;;;;;;;;:29;2992:4;2968:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;;2826:184;;;;3005:4;2826:184;;;;;2794:9;:29;2804:18;:8;:16;:18::i;:::-;2794:29;;;;;;;;;;;:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3020:20;:8;:18;:20::i;:::-;2502:545;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;719:31:18:-;;;;;;;;;:::o;3056:503::-;3125:9;:29;3135:18;:8;:16;:18::i;:::-;3125:29;;;;;;;;;;;:38;;;;;;;;;;;;3117:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3205:18;;;;;;;;;;;3198:39;;;3238:3;3251:4;3258:18;:23;3277:3;3258:23;;;;;;;;;;;;;;;:29;3282:4;3258:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;;3198:98;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3338:184;;;;;;;;3350:3;3338:184;;;;;;3362:4;3338:184;;;;;;3368:18;:23;3387:3;3368:23;;;;;;;;;;;;;;;:29;3392:4;3368:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;;3338:184;;;;3406:18;:23;3425:3;3406:23;;;;;;;;;;;;;;;:29;3430:4;3406:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;3338:184;;;;3446:18;:23;3465:3;3446:23;;;;;;;;;;;;;;;:29;3470:4;3446:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;;3338:184;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3480:18;:23;3499:3;3480:23;;;;;;;;;;;;;;;:29;3504:4;3480:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:36;;;3338:184;;;;3517:4;3338:184;;;;;3306:9;:29;3316:18;:8;:16;:18::i;:::-;3306:29;;;;;;;;;;;:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:20;:8;:18;:20::i;:::-;3056:503;;:::o;1428:52::-;;;;;;;;;;;;;;;;;:::o;1225:85::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2009:488::-;2099:18;:23;2118:3;2099:23;;;;;;;;;;;;;;;:29;2123:4;2099:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:38;;;;;;;;;;;;2098:39;2090:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2189:18;;;;;;;;;;;2180:37;;;2218:3;2222:17;:7;:15;:17::i;:::-;2180:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2282:71;;;;;;;;2294:3;2282:71;;;;;;2298:3;2282:71;;;;;;2302:17;:7;:15;:17::i;:::-;2282:71;;;;2320:14;:20;2335:4;2320:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2282:71;;;;2341:4;2282:71;;;;2346:1;2282:71;;;;2348:4;2282:71;;;;;2250:18;:23;2269:3;2250:23;;;;;;;;;;;;;;;:29;2274:4;2250:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:19;:7;:17;:19::i;:::-;2009:488;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;827:112:12:-;892:7;918;:14;;;911:21;;827:112;;;:::o;945:123::-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;7:77:19:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:99::-;2395:6;2429:5;2423:12;2413:22;;2343:99;;;:::o;2448:169::-;2532:11;2566:6;2561:3;2554:19;2606:4;2601:3;2597:14;2582:29;;2448:169;;;;:::o;2623:246::-;2704:1;2714:113;2728:6;2725:1;2722:13;2714:113;;;2813:1;2808:3;2804:11;2798:18;2794:1;2789:3;2785:11;2778:39;2750:2;2747:1;2743:10;2738:15;;2714:113;;;2861:1;2852:6;2847:3;2843:16;2836:27;2685:184;2623:246;;;:::o;2875:102::-;2916:6;2967:2;2963:7;2958:2;2951:5;2947:14;2943:28;2933:38;;2875:102;;;:::o;2983:377::-;3071:3;3099:39;3132:5;3099:39;:::i;:::-;3154:71;3218:6;3213:3;3154:71;:::i;:::-;3147:78;;3234:65;3292:6;3287:3;3280:4;3273:5;3269:16;3234:65;:::i;:::-;3324:29;3346:6;3324:29;:::i;:::-;3319:3;3315:39;3308:46;;3075:285;2983:377;;;;:::o;3366:90::-;3400:7;3443:5;3436:13;3429:21;3418:32;;3366:90;;;:::o;3462:109::-;3543:21;3558:5;3543:21;:::i;:::-;3538:3;3531:34;3462:109;;:::o;3577:965::-;3852:4;3890:3;3879:9;3875:19;3867:27;;3904:71;3972:1;3961:9;3957:17;3948:6;3904:71;:::i;:::-;3985:72;4053:2;4042:9;4038:18;4029:6;3985:72;:::i;:::-;4067;4135:2;4124:9;4120:18;4111:6;4067:72;:::i;:::-;4149;4217:2;4206:9;4202:18;4193:6;4149:72;:::i;:::-;4269:9;4263:4;4259:20;4253:3;4242:9;4238:19;4231:49;4297:78;4370:4;4361:6;4297:78;:::i;:::-;4289:86;;4385:73;4453:3;4442:9;4438:19;4429:6;4385:73;:::i;:::-;4468:67;4530:3;4519:9;4515:19;4506:6;4468:67;:::i;:::-;3577:965;;;;;;;;;;:::o;4548:110::-;4632:1;4625:5;4622:12;4612:40;;4648:1;4645;4638:12;4612:40;4548:110;:::o;4664:161::-;4721:5;4759:6;4746:20;4737:29;;4775:44;4813:5;4775:44;:::i;:::-;4664:161;;;;:::o;4831:496::-;4910:6;4918;4967:2;4955:9;4946:7;4942:23;4938:32;4935:119;;;4973:79;;:::i;:::-;4935:119;5093:1;5118:64;5174:7;5165:6;5154:9;5150:22;5118:64;:::i;:::-;5108:74;;5064:128;5231:2;5257:53;5302:7;5293:6;5282:9;5278:22;5257:53;:::i;:::-;5247:63;;5202:118;4831:496;;;;;:::o;5333:::-;5412:6;5420;5469:2;5457:9;5448:7;5444:23;5440:32;5437:119;;;5475:79;;:::i;:::-;5437:119;5595:1;5620:53;5665:7;5656:6;5645:9;5641:22;5620:53;:::i;:::-;5610:63;;5566:117;5722:2;5748:64;5804:7;5795:6;5784:9;5780:22;5748:64;:::i;:::-;5738:74;;5693:129;5333:496;;;;;:::o;5835:222::-;5928:4;5966:2;5955:9;5951:18;5943:26;;5979:71;6047:1;6036:9;6032:17;6023:6;5979:71;:::i;:::-;5835:222;;;;:::o;6063:351::-;6133:6;6182:2;6170:9;6161:7;6157:23;6153:32;6150:119;;;6188:79;;:::i;:::-;6150:119;6308:1;6333:64;6389:7;6380:6;6369:9;6365:22;6333:64;:::i;:::-;6323:74;;6279:128;6063:351;;;;:::o;6420:117::-;6529:1;6526;6519:12;6543:117;6652:1;6649;6642:12;6666:180;6714:77;6711:1;6704:88;6811:4;6808:1;6801:15;6835:4;6832:1;6825:15;6852:281;6935:27;6957:4;6935:27;:::i;:::-;6927:6;6923:40;7065:6;7053:10;7050:22;7029:18;7017:10;7014:34;7011:62;7008:88;;;7076:18;;:::i;:::-;7008:88;7116:10;7112:2;7105:22;6895:238;6852:281;;:::o;7139:129::-;7173:6;7200:20;;:::i;:::-;7190:30;;7229:33;7257:4;7249:6;7229:33;:::i;:::-;7139:129;;;:::o;7274:308::-;7336:4;7426:18;7418:6;7415:30;7412:56;;;7448:18;;:::i;:::-;7412:56;7486:29;7508:6;7486:29;:::i;:::-;7478:37;;7570:4;7564;7560:15;7552:23;;7274:308;;;:::o;7588:146::-;7685:6;7680:3;7675;7662:30;7726:1;7717:6;7712:3;7708:16;7701:27;7588:146;;;:::o;7740:425::-;7818:5;7843:66;7859:49;7901:6;7859:49;:::i;:::-;7843:66;:::i;:::-;7834:75;;7932:6;7925:5;7918:21;7970:4;7963:5;7959:16;8008:3;7999:6;7994:3;7990:16;7987:25;7984:112;;;8015:79;;:::i;:::-;7984:112;8105:54;8152:6;8147:3;8142;8105:54;:::i;:::-;7824:341;7740:425;;;;;:::o;8185:340::-;8241:5;8290:3;8283:4;8275:6;8271:17;8267:27;8257:122;;8298:79;;:::i;:::-;8257:122;8415:6;8402:20;8440:79;8515:3;8507:6;8500:4;8492:6;8488:17;8440:79;:::i;:::-;8431:88;;8247:278;8185:340;;;;:::o;8531:821::-;8629:6;8637;8645;8694:2;8682:9;8673:7;8669:23;8665:32;8662:119;;;8700:79;;:::i;:::-;8662:119;8820:1;8845:53;8890:7;8881:6;8870:9;8866:22;8845:53;:::i;:::-;8835:63;;8791:117;8975:2;8964:9;8960:18;8947:32;9006:18;8998:6;8995:30;8992:117;;;9028:79;;:::i;:::-;8992:117;9133:63;9188:7;9179:6;9168:9;9164:22;9133:63;:::i;:::-;9123:73;;8918:288;9245:2;9271:64;9327:7;9318:6;9307:9;9303:22;9271:64;:::i;:::-;9261:74;;9216:129;8531:821;;;;;:::o;9358:180::-;9406:77;9403:1;9396:88;9503:4;9500:1;9493:15;9527:4;9524:1;9517:15;9544:320;9588:6;9625:1;9619:4;9615:12;9605:22;;9672:1;9666:4;9662:12;9693:18;9683:81;;9749:4;9741:6;9737:17;9727:27;;9683:81;9811:2;9803:6;9800:14;9780:18;9777:38;9774:84;;9830:18;;:::i;:::-;9774:84;9595:269;9544:320;;;:::o;9870:180::-;9918:77;9915:1;9908:88;10015:4;10012:1;10005:15;10039:4;10036:1;10029:15;10056:171;10196:23;10192:1;10184:6;10180:14;10173:47;10056:171;:::o;10233:366::-;10375:3;10396:67;10460:2;10455:3;10396:67;:::i;:::-;10389:74;;10472:93;10561:3;10472:93;:::i;:::-;10590:2;10585:3;10581:12;10574:19;;10233:366;;;:::o;10605:419::-;10771:4;10809:2;10798:9;10794:18;10786:26;;10858:9;10852:4;10848:20;10844:1;10833:9;10829:17;10822:47;10886:131;11012:4;10886:131;:::i;:::-;10878:139;;10605:419;;;:::o;11030:442::-;11179:4;11217:2;11206:9;11202:18;11194:26;;11230:71;11298:1;11287:9;11283:17;11274:6;11230:71;:::i;:::-;11311:72;11379:2;11368:9;11364:18;11355:6;11311:72;:::i;:::-;11393;11461:2;11450:9;11446:18;11437:6;11393:72;:::i;:::-;11030:442;;;;;;:::o;11478:141::-;11527:4;11550:3;11542:11;;11573:3;11570:1;11563:14;11607:4;11604:1;11594:18;11586:26;;11478:141;;;:::o;11625:93::-;11662:6;11709:2;11704;11697:5;11693:14;11689:23;11679:33;;11625:93;;;:::o;11724:107::-;11768:8;11818:5;11812:4;11808:16;11787:37;;11724:107;;;;:::o;11837:393::-;11906:6;11956:1;11944:10;11940:18;11979:97;12009:66;11998:9;11979:97;:::i;:::-;12097:39;12127:8;12116:9;12097:39;:::i;:::-;12085:51;;12169:4;12165:9;12158:5;12154:21;12145:30;;12218:4;12208:8;12204:19;12197:5;12194:30;12184:40;;11913:317;;11837:393;;;;;:::o;12236:60::-;12264:3;12285:5;12278:12;;12236:60;;;:::o;12302:142::-;12352:9;12385:53;12403:34;12412:24;12430:5;12412:24;:::i;:::-;12403:34;:::i;:::-;12385:53;:::i;:::-;12372:66;;12302:142;;;:::o;12450:75::-;12493:3;12514:5;12507:12;;12450:75;;;:::o;12531:269::-;12641:39;12672:7;12641:39;:::i;:::-;12702:91;12751:41;12775:16;12751:41;:::i;:::-;12743:6;12736:4;12730:11;12702:91;:::i;:::-;12696:4;12689:105;12607:193;12531:269;;;:::o;12806:73::-;12851:3;12806:73;:::o;12885:189::-;12962:32;;:::i;:::-;13003:65;13061:6;13053;13047:4;13003:65;:::i;:::-;12938:136;12885:189;;:::o;13080:186::-;13140:120;13157:3;13150:5;13147:14;13140:120;;;13211:39;13248:1;13241:5;13211:39;:::i;:::-;13184:1;13177:5;13173:13;13164:22;;13140:120;;;13080:186;;:::o;13272:543::-;13373:2;13368:3;13365:11;13362:446;;;13407:38;13439:5;13407:38;:::i;:::-;13491:29;13509:10;13491:29;:::i;:::-;13481:8;13477:44;13674:2;13662:10;13659:18;13656:49;;;13695:8;13680:23;;13656:49;13718:80;13774:22;13792:3;13774:22;:::i;:::-;13764:8;13760:37;13747:11;13718:80;:::i;:::-;13377:431;;13362:446;13272:543;;;:::o;13821:117::-;13875:8;13925:5;13919:4;13915:16;13894:37;;13821:117;;;;:::o;13944:169::-;13988:6;14021:51;14069:1;14065:6;14057:5;14054:1;14050:13;14021:51;:::i;:::-;14017:56;14102:4;14096;14092:15;14082:25;;13995:118;13944:169;;;;:::o;14118:295::-;14194:4;14340:29;14365:3;14359:4;14340:29;:::i;:::-;14332:37;;14402:3;14399:1;14395:11;14389:4;14386:21;14378:29;;14118:295;;;;:::o;14418:1395::-;14535:37;14568:3;14535:37;:::i;:::-;14637:18;14629:6;14626:30;14623:56;;;14659:18;;:::i;:::-;14623:56;14703:38;14735:4;14729:11;14703:38;:::i;:::-;14788:67;14848:6;14840;14834:4;14788:67;:::i;:::-;14882:1;14906:4;14893:17;;14938:2;14930:6;14927:14;14955:1;14950:618;;;;15612:1;15629:6;15626:77;;;15678:9;15673:3;15669:19;15663:26;15654:35;;15626:77;15729:67;15789:6;15782:5;15729:67;:::i;:::-;15723:4;15716:81;15585:222;14920:887;;14950:618;15002:4;14998:9;14990:6;14986:22;15036:37;15068:4;15036:37;:::i;:::-;15095:1;15109:208;15123:7;15120:1;15117:14;15109:208;;;15202:9;15197:3;15193:19;15187:26;15179:6;15172:42;15253:1;15245:6;15241:14;15231:24;;15300:2;15289:9;15285:18;15272:31;;15146:4;15143:1;15139:12;15134:17;;15109:208;;;15345:6;15336:7;15333:19;15330:179;;;15403:9;15398:3;15394:19;15388:26;15446:48;15488:4;15480:6;15476:17;15465:9;15446:48;:::i;:::-;15438:6;15431:64;15353:156;15330:179;15555:1;15551;15543:6;15539:14;15535:22;15529:4;15522:36;14957:611;;;14920:887;;14510:1303;;;14418:1395;;:::o;15819:179::-;15959:31;15955:1;15947:6;15943:14;15936:55;15819:179;:::o;16004:366::-;16146:3;16167:67;16231:2;16226:3;16167:67;:::i;:::-;16160:74;;16243:93;16332:3;16243:93;:::i;:::-;16361:2;16356:3;16352:12;16345:19;;16004:366;;;:::o;16376:419::-;16542:4;16580:2;16569:9;16565:18;16557:26;;16629:9;16623:4;16619:20;16615:1;16604:9;16600:17;16593:47;16657:131;16783:4;16657:131;:::i;:::-;16649:139;;16376:419;;;:::o;16801:332::-;16922:4;16960:2;16949:9;16945:18;16937:26;;16973:71;17041:1;17030:9;17026:17;17017:6;16973:71;:::i;:::-;17054:72;17122:2;17111:9;17107:18;17098:6;17054:72;:::i;:::-;16801:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1577200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buy_Stone(address,uint8)": "infinite",
								"getUserStoneDetail(address,uint8)": "infinite",
								"listStone(uint256)": "infinite",
								"list_Stone(address,uint8)": "infinite",
								"listedID()": "2439",
								"mintStone(address,string,uint8)": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"setStonePrices(uint8,uint256)": "22839",
								"stoneCapAmount(uint8)": "2734",
								"tokenID()": "2483",
								"totalListed(address)": "2825",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1566,
									"end": 1893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1689,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1689,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 1710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1750,
									"end": 1753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 1720,
									"end": 1734,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1735,
									"end": 1746,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1720,
									"end": 1747,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1720,
									"end": 1747,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 1747,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1753,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1753,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1753,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1720,
									"end": 1753,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1794,
									"end": 1797,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "C8"
								},
								{
									"begin": 1763,
									"end": 1777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1763,
									"end": 1791,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1763,
									"end": 1791,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1791,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1797,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1797,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1797,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1763,
									"end": 1797,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1838,
									"end": 1841,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "12C"
								},
								{
									"begin": 1807,
									"end": 1821,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1822,
									"end": 1834,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1807,
									"end": 1835,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1807,
									"end": 1835,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1807,
									"end": 1835,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1841,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1841,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1841,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1807,
									"end": 1841,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1883,
									"end": 1886,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "190"
								},
								{
									"begin": 1851,
									"end": 1865,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1866,
									"end": 1879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1851,
									"end": 1880,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1851,
									"end": 1880,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 1851,
									"end": 1880,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1851,
									"end": 1880,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1886,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1886,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1886,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1851,
									"end": 1886,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1566,
									"end": 1893,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 19,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 19,
									"value": "62"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1710,
									"end": 1890,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 1710,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1758,
									"end": 1835,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1836,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1855,
									"end": 1859,
									"name": "PUSH",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1852,
									"end": 1853,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 1845,
									"end": 1860,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1879,
									"end": 1883,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1876,
									"end": 1877,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1884,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 3561,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d8639f8c6fa5481b9a08c2a1c9fe061c5d6f27f41e2bfe6ef48f6966d05ed7f64736f6c63430008160033",
									".code": [
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "C17560D4"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "C17560D4"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "CC2C9838"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "D420E5CB"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "A5C42EF1"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "AA53D139"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "CC797E1"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "166D98CF"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "4BC91EFC"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "55BD683C"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "6811E177"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 591,
											"end": 3561,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 756,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 756,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1374,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 1374,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 1316,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1316,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1316,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1899,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1899,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 2502,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "tag",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 719,
											"end": 750,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 719,
											"end": 750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 719,
											"end": 750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 3056,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 3056,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1428,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1428,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 1428,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 1225,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1225,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1225,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "tag",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 2009,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 2009,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 788,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 788,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 756,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "tag",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1316,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1316,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1316,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1980,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1966,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1966,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1996,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1996,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1996,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1966,
											"end": 1996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 2003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2637,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2643,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2615,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2615,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2644,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2615,
											"end": 2651,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2615,
											"end": 2651,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2594,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2600,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2572,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "tag",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2572,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2601,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2611,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2572,
											"end": 2651,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 2564,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 2564,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 2726,
											"end": 2729,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2764,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2774,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2746,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "tag",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "tag",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2746,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 2686,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2838,
											"end": 2841,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2850,
											"end": 2854,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2878,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2879,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2856,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "tag",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2856,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2885,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2893,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2856,
											"end": 2893,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2856,
											"end": 2893,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2916,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2922,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2894,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2894,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "tag",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2923,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2933,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2952,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2956,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2957,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 2962,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2934,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2934,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2826,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "tag",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 2826,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "tag",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "tag",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "tag",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "tag",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2990,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2991,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 2996,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2968,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "tag",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "tag",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2968,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 3004,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2968,
											"end": 3004,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 3004,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 2804,
											"end": 2812,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2804,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 2804,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "tag",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 2794,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2794,
											"end": 3010,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 3020,
											"end": 3028,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 3020,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2502,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 719,
											"end": 750,
											"name": "tag",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 750,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 719,
											"end": 750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3134,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 3135,
											"end": 3143,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3135,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 3135,
											"end": 3153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3154,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 3125,
											"end": 3163,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 3117,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 3117,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3205,
											"end": 3223,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3237,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3251,
											"end": 3255,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3280,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3281,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3286,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3258,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "tag",
											"source": 18,
											"value": "141"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3258,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "tag",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3295,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3258,
											"end": 3295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3295,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 3198,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "tag",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "tag",
											"source": 18,
											"value": "147"
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3362,
											"end": 3366,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3390,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3391,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3396,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "148"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3368,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "tag",
											"source": 18,
											"value": "148"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3368,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "tag",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3405,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3368,
											"end": 3405,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3405,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3428,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3434,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3406,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "tag",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "tag",
											"source": 18,
											"value": "152"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3406,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3435,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3446,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "tag",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3446,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "tag",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3475,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3479,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 3479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 3338,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 3338,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3503,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3480,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "tag",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3480,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "tag",
											"source": 18,
											"value": "168"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3509,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3516,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3480,
											"end": 3516,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3480,
											"end": 3516,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3521,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 3316,
											"end": 3324,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3316,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 3316,
											"end": 3334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 3306,
											"end": 3522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3306,
											"end": 3522,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3532,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 3532,
											"end": 3540,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 3532,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3532,
											"end": 3552,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 3532,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1428,
											"end": 1480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1225,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1225,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2117,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2099,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "tag",
											"source": 18,
											"value": "178"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2099,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2128,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2099,
											"end": 2137,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2098,
											"end": 2137,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 2090,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "tag",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 2090,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2217,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2217,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2217,
											"name": "PUSH",
											"source": 18,
											"value": "A1448194"
										},
										{
											"begin": 2218,
											"end": 2221,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2222,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 2222,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2239,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 2222,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 2180,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2180,
											"end": 2240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2302,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2302,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 2302,
											"end": 2319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2302,
											"end": 2319,
											"name": "tag",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2302,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2334,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2320,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2320,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2340,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2282,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2272,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2250,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "tag",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 2250,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "tag",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2279,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 2250,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "tag",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2363,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2363,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 2363,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2363,
											"end": 2382,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 2363,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2009,
											"end": 2497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 442,
											"end": 517,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 442,
											"end": 517,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 492,
											"end": 511,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 492,
											"end": 511,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 442,
											"end": 517,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 442,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "226"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 19,
											"value": "29"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "297"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 19,
											"value": "297"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2442,
											"name": "tag",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 2343,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2413,
											"end": 2435,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2413,
											"end": 2435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2442,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2442,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2442,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "tag",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2532,
											"end": 2543,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2561,
											"end": 2564,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2554,
											"end": 2573,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2606,
											"end": 2610,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2597,
											"end": 2611,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2582,
											"end": 2611,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2448,
											"end": 2617,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2448,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2869,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 2623,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2722,
											"end": 2735,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2804,
											"end": 2815,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2789,
											"end": 2792,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2785,
											"end": 2796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2738,
											"end": 2753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "tag",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 2714,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2847,
											"end": 2850,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2843,
											"end": 2859,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2863,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2685,
											"end": 2869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2869,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2623,
											"end": 2869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2875,
											"end": 2977,
											"name": "tag",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 2875,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2916,
											"end": 2922,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2951,
											"end": 2956,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2947,
											"end": 2961,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2943,
											"end": 2971,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2933,
											"end": 2971,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2933,
											"end": 2971,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2875,
											"end": 2977,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2875,
											"end": 2977,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2875,
											"end": 2977,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2875,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2983,
											"end": 3360,
											"name": "tag",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 2983,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 3132,
											"end": 3137,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3099,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 3099,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3099,
											"end": 3138,
											"name": "tag",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 3099,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3154,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 3218,
											"end": 3224,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3213,
											"end": 3216,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3154,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 3154,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3154,
											"end": 3225,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 3154,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3147,
											"end": 3225,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3147,
											"end": 3225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3234,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3280,
											"end": 3284,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3278,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3234,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 3234,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3234,
											"end": 3299,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 3234,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 3346,
											"end": 3352,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 3324,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "tag",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 3324,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3315,
											"end": 3354,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3308,
											"end": 3354,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3308,
											"end": 3354,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3075,
											"end": 3360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2983,
											"end": 3360,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2983,
											"end": 3360,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2983,
											"end": 3360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2983,
											"end": 3360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2983,
											"end": 3360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3366,
											"end": 3456,
											"name": "tag",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 3366,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3436,
											"end": 3449,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3429,
											"end": 3450,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3366,
											"end": 3456,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3366,
											"end": 3456,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3366,
											"end": 3456,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3366,
											"end": 3456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3462,
											"end": 3571,
											"name": "tag",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 3462,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3543,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 3558,
											"end": 3563,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3543,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 3543,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3543,
											"end": 3564,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 3543,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3538,
											"end": 3541,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3462,
											"end": 3571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3462,
											"end": 3571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3462,
											"end": 3571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "tag",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3893,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3867,
											"end": 3894,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3867,
											"end": 3894,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3957,
											"end": 3974,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 3904,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3904,
											"end": 3975,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 3904,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3985,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 4053,
											"end": 4055,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4051,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4029,
											"end": 4035,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 3985,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 3985,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3985,
											"end": 4057,
											"name": "tag",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 3985,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4133,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 4067,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "tag",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 4067,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 4217,
											"end": 4219,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4206,
											"end": 4215,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 4149,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4263,
											"end": 4267,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4259,
											"end": 4279,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 4242,
											"end": 4251,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4231,
											"end": 4280,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4297,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4361,
											"end": 4367,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 4297,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 4297,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4297,
											"end": 4375,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 4297,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4289,
											"end": 4375,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4289,
											"end": 4375,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4385,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 4453,
											"end": 4456,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 4442,
											"end": 4451,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4429,
											"end": 4435,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4385,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 4385,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4385,
											"end": 4458,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 4385,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4468,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4515,
											"end": 4534,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4506,
											"end": 4512,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4468,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 4468,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4468,
											"end": 4535,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 4468,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3577,
											"end": 4542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4548,
											"end": 4658,
											"name": "tag",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 4548,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4633,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4625,
											"end": 4630,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4622,
											"end": 4634,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 4612,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 4612,
											"end": 4652,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4638,
											"end": 4650,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4612,
											"end": 4652,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 4612,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4548,
											"end": 4658,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4548,
											"end": 4658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4825,
											"name": "tag",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 4664,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4721,
											"end": 4726,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4765,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4746,
											"end": 4766,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4737,
											"end": 4766,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4737,
											"end": 4766,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 4813,
											"end": 4818,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 4775,
											"end": 4819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4819,
											"name": "tag",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 4775,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4825,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4825,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4825,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4825,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4924,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4967,
											"end": 4969,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4942,
											"end": 4965,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4938,
											"end": 4970,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 4973,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4973,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 4935,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 5174,
											"end": 5181,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5150,
											"end": 5172,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 5118,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 5118,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5108,
											"end": 5182,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5108,
											"end": 5182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5064,
											"end": 5192,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 5302,
											"end": 5309,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5278,
											"end": 5300,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 5257,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 5257,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5247,
											"end": 5310,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5247,
											"end": 5310,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5202,
											"end": 5320,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4831,
											"end": 5327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5469,
											"end": 5471,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 5457,
											"end": 5466,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5448,
											"end": 5455,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5444,
											"end": 5467,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5440,
											"end": 5472,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5556,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 5437,
											"end": 5556,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5475,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 5475,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 5475,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5475,
											"end": 5554,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 5475,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5437,
											"end": 5556,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 5437,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 5665,
											"end": 5672,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5656,
											"end": 5662,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5645,
											"end": 5654,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5641,
											"end": 5663,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5620,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 5620,
											"end": 5673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5620,
											"end": 5673,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 5620,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5610,
											"end": 5673,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5610,
											"end": 5673,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5566,
											"end": 5683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5748,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5795,
											"end": 5801,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5780,
											"end": 5802,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5748,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 5748,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5748,
											"end": 5812,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 5748,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5738,
											"end": 5812,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5738,
											"end": 5812,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5693,
											"end": 5822,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5333,
											"end": 5829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5835,
											"end": 6057,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 5835,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5943,
											"end": 5969,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5979,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6032,
											"end": 6049,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5979,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 5979,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5979,
											"end": 6050,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 5979,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5835,
											"end": 6057,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5835,
											"end": 6057,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5835,
											"end": 6057,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5835,
											"end": 6057,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5835,
											"end": 6057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6063,
											"end": 6414,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 6063,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6184,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6161,
											"end": 6168,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6157,
											"end": 6180,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6153,
											"end": 6185,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6150,
											"end": 6269,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6150,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 6150,
											"end": 6269,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6188,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 6188,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 6188,
											"end": 6267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6188,
											"end": 6267,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 6188,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6150,
											"end": 6269,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 6150,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 6389,
											"end": 6396,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 6378,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6365,
											"end": 6387,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6333,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 6333,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6333,
											"end": 6397,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 6333,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6323,
											"end": 6397,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6323,
											"end": 6397,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6279,
											"end": 6407,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6063,
											"end": 6414,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6063,
											"end": 6414,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6063,
											"end": 6414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6063,
											"end": 6414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6063,
											"end": 6414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6420,
											"end": 6537,
											"name": "tag",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 6420,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6543,
											"end": 6660,
											"name": "tag",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 6543,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6652,
											"end": 6653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6650,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6642,
											"end": 6654,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6666,
											"end": 6846,
											"name": "tag",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 6666,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6714,
											"end": 6791,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6792,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6811,
											"end": 6815,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 6808,
											"end": 6809,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6816,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6835,
											"end": 6839,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6840,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 7133,
											"name": "tag",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 6852,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6935,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6935,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 6935,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6935,
											"end": 6962,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 6935,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6923,
											"end": 6963,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7053,
											"end": 7063,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7050,
											"end": 7072,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7017,
											"end": 7027,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7014,
											"end": 7048,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7011,
											"end": 7073,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 7008,
											"end": 7096,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7008,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 7008,
											"end": 7096,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 7076,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7008,
											"end": 7096,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 7008,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7116,
											"end": 7126,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7112,
											"end": 7114,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7127,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6895,
											"end": 7133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 7133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 7133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 7133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7139,
											"end": 7268,
											"name": "tag",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 7139,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 7200,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 7200,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7200,
											"end": 7220,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 7200,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7190,
											"end": 7220,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7190,
											"end": 7220,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7229,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7249,
											"end": 7255,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7229,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 7229,
											"end": 7262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7229,
											"end": 7262,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 7229,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7139,
											"end": 7268,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7139,
											"end": 7268,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7139,
											"end": 7268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7139,
											"end": 7268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7274,
											"end": 7582,
											"name": "tag",
											"source": 19,
											"value": "245"
										},
										{
											"begin": 7274,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7426,
											"end": 7444,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7415,
											"end": 7445,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7412,
											"end": 7468,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7412,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 7412,
											"end": 7468,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 7448,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7412,
											"end": 7468,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 7412,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7486,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7486,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "234"
										},
										{
											"begin": 7486,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7486,
											"end": 7515,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 7486,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7570,
											"end": 7574,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7560,
											"end": 7575,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7552,
											"end": 7575,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7552,
											"end": 7575,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7274,
											"end": 7582,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7274,
											"end": 7582,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7274,
											"end": 7582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7274,
											"end": 7582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7734,
											"name": "tag",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 7588,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7685,
											"end": 7691,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7680,
											"end": 7683,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7675,
											"end": 7678,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7662,
											"end": 7692,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7712,
											"end": 7715,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7708,
											"end": 7724,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7701,
											"end": 7728,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7734,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7734,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7734,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7588,
											"end": 7734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "tag",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 7859,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 7901,
											"end": 7907,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7859,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "245"
										},
										{
											"begin": 7859,
											"end": 7908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7859,
											"end": 7908,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 7859,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7843,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 7843,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7843,
											"end": 7909,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 7843,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7834,
											"end": 7909,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7834,
											"end": 7909,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7932,
											"end": 7938,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7925,
											"end": 7930,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7918,
											"end": 7939,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7963,
											"end": 7968,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7959,
											"end": 7975,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8008,
											"end": 8011,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7999,
											"end": 8005,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7994,
											"end": 7997,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7990,
											"end": 8006,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7987,
											"end": 8012,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7984,
											"end": 8096,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7984,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 7984,
											"end": 8096,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8015,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 8015,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 8015,
											"end": 8094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8015,
											"end": 8094,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 8015,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7984,
											"end": 8096,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 7984,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8105,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 8152,
											"end": 8158,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8142,
											"end": 8145,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8105,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 8105,
											"end": 8159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8105,
											"end": 8159,
											"name": "tag",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 8105,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7824,
											"end": 8165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 8165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8185,
											"end": 8525,
											"name": "tag",
											"source": 19,
											"value": "248"
										},
										{
											"begin": 8185,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8241,
											"end": 8246,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8293,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8283,
											"end": 8287,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8271,
											"end": 8288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8267,
											"end": 8294,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8257,
											"end": 8379,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 8257,
											"end": 8379,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8298,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 8298,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 8298,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8298,
											"end": 8377,
											"name": "tag",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 8298,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8257,
											"end": 8379,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 8257,
											"end": 8379,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8402,
											"end": 8422,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 8515,
											"end": 8518,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8507,
											"end": 8513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8500,
											"end": 8504,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8492,
											"end": 8498,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8488,
											"end": 8505,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 8440,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 8440,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8431,
											"end": 8519,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8431,
											"end": 8519,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8247,
											"end": 8525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8185,
											"end": 8525,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8185,
											"end": 8525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8185,
											"end": 8525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8185,
											"end": 8525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8185,
											"end": 8525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8643,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8645,
											"end": 8651,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8694,
											"end": 8696,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8682,
											"end": 8691,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8669,
											"end": 8692,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8665,
											"end": 8697,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8662,
											"end": 8781,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8662,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 8662,
											"end": 8781,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8700,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 8700,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 8700,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8700,
											"end": 8779,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 8700,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8662,
											"end": 8781,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 8662,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 8890,
											"end": 8897,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8881,
											"end": 8887,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8870,
											"end": 8879,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8866,
											"end": 8888,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 8845,
											"end": 8898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 8898,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 8845,
											"end": 8898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8835,
											"end": 8898,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 8835,
											"end": 8898,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8791,
											"end": 8908,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8975,
											"end": 8977,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 8973,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8960,
											"end": 8978,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8947,
											"end": 8979,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9006,
											"end": 9024,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8998,
											"end": 9004,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8995,
											"end": 9025,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8992,
											"end": 9109,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8992,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 8992,
											"end": 9109,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9028,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 9028,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 9028,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9028,
											"end": 9107,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 9028,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8992,
											"end": 9109,
											"name": "tag",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 8992,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9133,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 9188,
											"end": 9195,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9179,
											"end": 9185,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9164,
											"end": 9186,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9133,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "248"
										},
										{
											"begin": 9133,
											"end": 9196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9133,
											"end": 9196,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 9133,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9123,
											"end": 9196,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9123,
											"end": 9196,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8918,
											"end": 9206,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9271,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 9327,
											"end": 9334,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9318,
											"end": 9324,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9307,
											"end": 9316,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 9303,
											"end": 9325,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9271,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 9271,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9271,
											"end": 9335,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 9271,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9261,
											"end": 9335,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9261,
											"end": 9335,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9216,
											"end": 9345,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8531,
											"end": 9352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9358,
											"end": 9538,
											"name": "tag",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 9358,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9406,
											"end": 9483,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9484,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9527,
											"end": 9531,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9524,
											"end": 9525,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9532,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9544,
											"end": 9864,
											"name": "tag",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 9544,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9588,
											"end": 9594,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 9619,
											"end": 9623,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9615,
											"end": 9627,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 9605,
											"end": 9627,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9605,
											"end": 9627,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9672,
											"end": 9673,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 9666,
											"end": 9670,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9662,
											"end": 9674,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9693,
											"end": 9711,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9683,
											"end": 9764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 9683,
											"end": 9764,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 9741,
											"end": 9747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9737,
											"end": 9754,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9727,
											"end": 9754,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9727,
											"end": 9754,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9683,
											"end": 9764,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 9683,
											"end": 9764,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9800,
											"end": 9814,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 9780,
											"end": 9798,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9777,
											"end": 9815,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9774,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 9774,
											"end": 9858,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 9830,
											"end": 9848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "tag",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9774,
											"end": 9858,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 9774,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9595,
											"end": 9864,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9544,
											"end": 9864,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9544,
											"end": 9864,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9544,
											"end": 9864,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9544,
											"end": 9864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9870,
											"end": 10050,
											"name": "tag",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 9870,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9918,
											"end": 9995,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9915,
											"end": 9916,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9996,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10015,
											"end": 10019,
											"name": "PUSH",
											"source": 19,
											"value": "21"
										},
										{
											"begin": 10012,
											"end": 10013,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10005,
											"end": 10020,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10039,
											"end": 10043,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10044,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10056,
											"end": 10227,
											"name": "tag",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 10056,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10196,
											"end": 10219,
											"name": "PUSH",
											"source": 19,
											"value": "46697273742046696C6C2053746F6E6520436170210000000000000000000000"
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10180,
											"end": 10194,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10173,
											"end": 10220,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10056,
											"end": 10227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10056,
											"end": 10227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10599,
											"name": "tag",
											"source": 19,
											"value": "251"
										},
										{
											"begin": 10233,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10375,
											"end": 10378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 10460,
											"end": 10462,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 10455,
											"end": 10458,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 10396,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10396,
											"end": 10463,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 10396,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10389,
											"end": 10463,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10389,
											"end": 10463,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10472,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 10561,
											"end": 10564,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10472,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 10472,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10472,
											"end": 10565,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 10472,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10590,
											"end": 10592,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10585,
											"end": 10588,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10581,
											"end": 10593,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10574,
											"end": 10593,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10574,
											"end": 10593,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10599,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10599,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10599,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10233,
											"end": 10599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 11024,
											"name": "tag",
											"source": 19,
											"value": "92"
										},
										{
											"begin": 10605,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10771,
											"end": 10775,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10811,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10794,
											"end": 10812,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10786,
											"end": 10812,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10786,
											"end": 10812,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10858,
											"end": 10867,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10852,
											"end": 10856,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10848,
											"end": 10868,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10844,
											"end": 10845,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10842,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10829,
											"end": 10846,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10822,
											"end": 10869,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10886,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10886,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "251"
										},
										{
											"begin": 10886,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10886,
											"end": 11017,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 10886,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10878,
											"end": 11017,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10878,
											"end": 11017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 11024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 11024,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 11024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10605,
											"end": 11024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "tag",
											"source": 19,
											"value": "98"
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11179,
											"end": 11183,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11219,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11206,
											"end": 11215,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11194,
											"end": 11220,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11194,
											"end": 11220,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11296,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11283,
											"end": 11300,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 11230,
											"end": 11301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 11230,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 11379,
											"end": 11381,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11368,
											"end": 11377,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 11311,
											"end": 11383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 11311,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 11461,
											"end": 11463,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 11459,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11446,
											"end": 11464,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11437,
											"end": 11443,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 11393,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 11393,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11030,
											"end": 11472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11478,
											"end": 11619,
											"name": "tag",
											"source": 19,
											"value": "252"
										},
										{
											"begin": 11478,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11527,
											"end": 11531,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11553,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11542,
											"end": 11553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11570,
											"end": 11571,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11577,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11607,
											"end": 11611,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11604,
											"end": 11605,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11594,
											"end": 11612,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 11586,
											"end": 11612,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11586,
											"end": 11612,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11478,
											"end": 11619,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11478,
											"end": 11619,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11478,
											"end": 11619,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11478,
											"end": 11619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11625,
											"end": 11718,
											"name": "tag",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 11625,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11662,
											"end": 11668,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11711,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 11697,
											"end": 11702,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11693,
											"end": 11707,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11689,
											"end": 11712,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 11679,
											"end": 11712,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11679,
											"end": 11712,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11625,
											"end": 11718,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11625,
											"end": 11718,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11625,
											"end": 11718,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11625,
											"end": 11718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11831,
											"name": "tag",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 11724,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11768,
											"end": 11776,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11823,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11812,
											"end": 11816,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11808,
											"end": 11824,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 11787,
											"end": 11824,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11787,
											"end": 11824,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11831,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11831,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11831,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11831,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11724,
											"end": 11831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "tag",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11906,
											"end": 11912,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11956,
											"end": 11957,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 11944,
											"end": 11954,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11940,
											"end": 11958,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 11979,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 12009,
											"end": 12075,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11998,
											"end": 12007,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11979,
											"end": 12076,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 11979,
											"end": 12076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11979,
											"end": 12076,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 11979,
											"end": 12076,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12097,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 12127,
											"end": 12135,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12116,
											"end": 12125,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12097,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "254"
										},
										{
											"begin": 12097,
											"end": 12136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12097,
											"end": 12136,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 12097,
											"end": 12136,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12085,
											"end": 12136,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 12085,
											"end": 12136,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12169,
											"end": 12173,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12165,
											"end": 12174,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12154,
											"end": 12175,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12175,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12175,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12208,
											"end": 12216,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12204,
											"end": 12223,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12197,
											"end": 12202,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12194,
											"end": 12224,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 12184,
											"end": 12224,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12184,
											"end": 12224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11913,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11913,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11837,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12236,
											"end": 12296,
											"name": "tag",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 12236,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12264,
											"end": 12267,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12278,
											"end": 12290,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12278,
											"end": 12290,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12236,
											"end": 12296,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12236,
											"end": 12296,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12236,
											"end": 12296,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12236,
											"end": 12296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12302,
											"end": 12444,
											"name": "tag",
											"source": 19,
											"value": "257"
										},
										{
											"begin": 12302,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12352,
											"end": 12361,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 12403,
											"end": 12437,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 12412,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 12430,
											"end": 12435,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12412,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 12412,
											"end": 12436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12412,
											"end": 12436,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 12412,
											"end": 12436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12403,
											"end": 12437,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 12403,
											"end": 12437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12403,
											"end": 12437,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 12403,
											"end": 12437,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 12385,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 12385,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12372,
											"end": 12438,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12372,
											"end": 12438,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12302,
											"end": 12444,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12302,
											"end": 12444,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12302,
											"end": 12444,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12302,
											"end": 12444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12450,
											"end": 12525,
											"name": "tag",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 12450,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12493,
											"end": 12496,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12519,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12507,
											"end": 12519,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12507,
											"end": 12519,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12450,
											"end": 12525,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12450,
											"end": 12525,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12450,
											"end": 12525,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12450,
											"end": 12525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12531,
											"end": 12800,
											"name": "tag",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 12531,
											"end": 12800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12641,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 12672,
											"end": 12679,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12641,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "257"
										},
										{
											"begin": 12641,
											"end": 12680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12641,
											"end": 12680,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 12641,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12702,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 12751,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 12775,
											"end": 12791,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12751,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 12751,
											"end": 12792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12751,
											"end": 12792,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 12751,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12743,
											"end": 12749,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12736,
											"end": 12740,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12730,
											"end": 12741,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 12702,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 12702,
											"end": 12793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12702,
											"end": 12793,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 12702,
											"end": 12793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12696,
											"end": 12700,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12689,
											"end": 12794,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 12607,
											"end": 12800,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12531,
											"end": 12800,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12531,
											"end": 12800,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12531,
											"end": 12800,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12531,
											"end": 12800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12806,
											"end": 12879,
											"name": "tag",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 12806,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12851,
											"end": 12854,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12806,
											"end": 12879,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12806,
											"end": 12879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12885,
											"end": 13074,
											"name": "tag",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 12885,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12962,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 12962,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 12962,
											"end": 12994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12962,
											"end": 12994,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 12962,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13003,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 13061,
											"end": 13067,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13053,
											"end": 13059,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13047,
											"end": 13051,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13003,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 13003,
											"end": 13068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13003,
											"end": 13068,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 13003,
											"end": 13068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12938,
											"end": 13074,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12885,
											"end": 13074,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12885,
											"end": 13074,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12885,
											"end": 13074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13080,
											"end": 13266,
											"name": "tag",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 13080,
											"end": 13266,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13157,
											"end": 13160,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13150,
											"end": 13155,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13147,
											"end": 13161,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13211,
											"end": 13250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 13248,
											"end": 13249,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13241,
											"end": 13246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13211,
											"end": 13250,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 13211,
											"end": 13250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13211,
											"end": 13250,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 13211,
											"end": 13250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13184,
											"end": 13185,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 13177,
											"end": 13182,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13173,
											"end": 13186,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13164,
											"end": 13186,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13164,
											"end": 13186,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 13140,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13080,
											"end": 13266,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13080,
											"end": 13266,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13080,
											"end": 13266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13272,
											"end": 13815,
											"name": "tag",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 13272,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13373,
											"end": 13375,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 13368,
											"end": 13371,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13365,
											"end": 13376,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 13362,
											"end": 13808,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13362,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 13362,
											"end": 13808,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13407,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 13439,
											"end": 13444,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13407,
											"end": 13445,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "252"
										},
										{
											"begin": 13407,
											"end": 13445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13407,
											"end": 13445,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 13407,
											"end": 13445,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13491,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 13509,
											"end": 13519,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13491,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 13491,
											"end": 13520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13491,
											"end": 13520,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 13491,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13481,
											"end": 13489,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13477,
											"end": 13521,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13674,
											"end": 13676,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13662,
											"end": 13672,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13659,
											"end": 13677,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 13656,
											"end": 13705,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 13656,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 13656,
											"end": 13705,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 13695,
											"end": 13703,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13680,
											"end": 13703,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13680,
											"end": 13703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13656,
											"end": 13705,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 13656,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13718,
											"end": 13798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 13774,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 13792,
											"end": 13795,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13774,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 13774,
											"end": 13796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13774,
											"end": 13796,
											"name": "tag",
											"source": 19,
											"value": "424"
										},
										{
											"begin": 13774,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13764,
											"end": 13772,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13760,
											"end": 13797,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13747,
											"end": 13758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13718,
											"end": 13798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 13718,
											"end": 13798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13718,
											"end": 13798,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 13718,
											"end": 13798,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13377,
											"end": 13808,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13377,
											"end": 13808,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13362,
											"end": 13808,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 13362,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13272,
											"end": 13815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13272,
											"end": 13815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13272,
											"end": 13815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13272,
											"end": 13815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13938,
											"name": "tag",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 13821,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13875,
											"end": 13883,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13925,
											"end": 13930,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13919,
											"end": 13923,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13915,
											"end": 13931,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 13894,
											"end": 13931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13894,
											"end": 13931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13938,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13938,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13938,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13938,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13944,
											"end": 14113,
											"name": "tag",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 13944,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13988,
											"end": 13994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 14069,
											"end": 14070,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14071,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 14057,
											"end": 14062,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14054,
											"end": 14055,
											"name": "PUSH",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 14050,
											"end": 14063,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 14021,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 14021,
											"end": 14072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14021,
											"end": 14072,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 14021,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14017,
											"end": 14073,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 14102,
											"end": 14106,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 14096,
											"end": 14100,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14092,
											"end": 14107,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 14082,
											"end": 14107,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14082,
											"end": 14107,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13995,
											"end": 14113,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13944,
											"end": 14113,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 13944,
											"end": 14113,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13944,
											"end": 14113,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13944,
											"end": 14113,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13944,
											"end": 14113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14118,
											"end": 14413,
											"name": "tag",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 14118,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14194,
											"end": 14198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 14365,
											"end": 14368,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14359,
											"end": 14363,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14340,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 14340,
											"end": 14369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14340,
											"end": 14369,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 14340,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14332,
											"end": 14369,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14332,
											"end": 14369,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14402,
											"end": 14405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14399,
											"end": 14400,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 14395,
											"end": 14406,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 14389,
											"end": 14393,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14386,
											"end": 14407,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 14378,
											"end": 14407,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14378,
											"end": 14407,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14118,
											"end": 14413,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14118,
											"end": 14413,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14118,
											"end": 14413,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14118,
											"end": 14413,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14118,
											"end": 14413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 15813,
											"name": "tag",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 14418,
											"end": 15813,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14535,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 14568,
											"end": 14571,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14535,
											"end": 14572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 14535,
											"end": 14572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14535,
											"end": 14572,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 14535,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14637,
											"end": 14655,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14629,
											"end": 14635,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14626,
											"end": 14656,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 14623,
											"end": 14679,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14623,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 14623,
											"end": 14679,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 14659,
											"end": 14677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14623,
											"end": 14679,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 14623,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 14735,
											"end": 14739,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14729,
											"end": 14740,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 14703,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14703,
											"end": 14741,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 14703,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 14848,
											"end": 14854,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14840,
											"end": 14846,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14834,
											"end": 14838,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 14788,
											"end": 14855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 14788,
											"end": 14855,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14882,
											"end": 14883,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14906,
											"end": 14910,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14893,
											"end": 14910,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14893,
											"end": 14910,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14938,
											"end": 14940,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 14930,
											"end": 14936,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 14955,
											"end": 14956,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 14950,
											"end": 15568,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14950,
											"end": 15568,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 14950,
											"end": 15568,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 14950,
											"end": 15568,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15612,
											"end": 15613,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15629,
											"end": 15635,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15626,
											"end": 15703,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15626,
											"end": 15703,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 15626,
											"end": 15703,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15678,
											"end": 15687,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15673,
											"end": 15676,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 15669,
											"end": 15688,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15663,
											"end": 15689,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15654,
											"end": 15689,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15654,
											"end": 15689,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15626,
											"end": 15703,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 15626,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15729,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15782,
											"end": 15787,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15729,
											"end": 15796,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 15729,
											"end": 15796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15729,
											"end": 15796,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 15729,
											"end": 15796,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15723,
											"end": 15727,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15716,
											"end": 15797,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 15585,
											"end": 15807,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14920,
											"end": 15807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 14920,
											"end": 15807,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14950,
											"end": 15568,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 14950,
											"end": 15568,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15002,
											"end": 15006,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 14998,
											"end": 15007,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 14990,
											"end": 14996,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14986,
											"end": 15008,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 15036,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 15068,
											"end": 15072,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15036,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "252"
										},
										{
											"begin": 15036,
											"end": 15073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15036,
											"end": 15073,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 15036,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15095,
											"end": 15096,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15123,
											"end": 15130,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15120,
											"end": 15121,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15117,
											"end": 15131,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15202,
											"end": 15211,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15197,
											"end": 15200,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 15193,
											"end": 15212,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15187,
											"end": 15213,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15179,
											"end": 15185,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15172,
											"end": 15214,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 15253,
											"end": 15254,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 15245,
											"end": 15251,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15241,
											"end": 15255,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15255,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15255,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15300,
											"end": 15302,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15285,
											"end": 15303,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15272,
											"end": 15303,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 15272,
											"end": 15303,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15146,
											"end": 15150,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15143,
											"end": 15144,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15139,
											"end": 15151,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15134,
											"end": 15151,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15134,
											"end": 15151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 15109,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15345,
											"end": 15351,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 15336,
											"end": 15343,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15333,
											"end": 15352,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15509,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 15330,
											"end": 15509,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15403,
											"end": 15412,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15398,
											"end": 15401,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 15394,
											"end": 15413,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15388,
											"end": 15414,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15446,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 15488,
											"end": 15492,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 15480,
											"end": 15486,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 15476,
											"end": 15493,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 15465,
											"end": 15474,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15446,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 15446,
											"end": 15494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15446,
											"end": 15494,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 15446,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15438,
											"end": 15444,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15431,
											"end": 15495,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 15353,
											"end": 15509,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15330,
											"end": 15509,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 15330,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15555,
											"end": 15556,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 15551,
											"end": 15552,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 15543,
											"end": 15549,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 15539,
											"end": 15553,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 15535,
											"end": 15557,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15529,
											"end": 15533,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 15522,
											"end": 15558,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 14957,
											"end": 15568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14957,
											"end": 15568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14957,
											"end": 15568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14920,
											"end": 15807,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 14920,
											"end": 15807,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14920,
											"end": 15807,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 15813,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 15813,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 15813,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 15813,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 15813,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 15813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15819,
											"end": 15998,
											"name": "tag",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 15819,
											"end": 15998,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15959,
											"end": 15990,
											"name": "PUSH",
											"source": 19,
											"value": "546869732053746F6E6520497320416C72656164792041637469766521000000"
										},
										{
											"begin": 15955,
											"end": 15956,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15947,
											"end": 15953,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15943,
											"end": 15957,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15936,
											"end": 15991,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15819,
											"end": 15998,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15819,
											"end": 15998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16004,
											"end": 16370,
											"name": "tag",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 16004,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16146,
											"end": 16149,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 16231,
											"end": 16233,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 16226,
											"end": 16229,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16167,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 16167,
											"end": 16234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16167,
											"end": 16234,
											"name": "tag",
											"source": 19,
											"value": "448"
										},
										{
											"begin": 16167,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16160,
											"end": 16234,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16160,
											"end": 16234,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16243,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 16332,
											"end": 16335,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16243,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 16243,
											"end": 16336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16243,
											"end": 16336,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 16243,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16361,
											"end": 16363,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16356,
											"end": 16359,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16352,
											"end": 16364,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16345,
											"end": 16364,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16345,
											"end": 16364,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16004,
											"end": 16370,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16004,
											"end": 16370,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16004,
											"end": 16370,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16004,
											"end": 16370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16795,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 16376,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16542,
											"end": 16546,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16582,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16578,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16565,
											"end": 16583,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16557,
											"end": 16583,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16557,
											"end": 16583,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16629,
											"end": 16638,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16623,
											"end": 16627,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16639,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16615,
											"end": 16616,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16604,
											"end": 16613,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16600,
											"end": 16617,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16593,
											"end": 16640,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16657,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 16783,
											"end": 16787,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16657,
											"end": 16788,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 16657,
											"end": 16788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16657,
											"end": 16788,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 16657,
											"end": 16788,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16649,
											"end": 16788,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16649,
											"end": 16788,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16795,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16795,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16795,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16376,
											"end": 16795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16922,
											"end": 16926,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16960,
											"end": 16962,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16949,
											"end": 16958,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16945,
											"end": 16963,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 16963,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16937,
											"end": 16963,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16973,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 17041,
											"end": 17042,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17030,
											"end": 17039,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17026,
											"end": 17043,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17017,
											"end": 17023,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16973,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 16973,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16973,
											"end": 17044,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 16973,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17054,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 17122,
											"end": 17124,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17111,
											"end": 17120,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17107,
											"end": 17125,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17104,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 17054,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 17054,
											"end": 17126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17054,
											"end": 17126,
											"name": "tag",
											"source": 19,
											"value": "454"
										},
										{
											"begin": 17054,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16801,
											"end": 17133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/Dispatch_AI/Marketplace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy_Stone(address,uint8)": "aa53d139",
							"getUserStoneDetail(address,uint8)": "cc2c9838",
							"listStone(uint256)": "4bc91efc",
							"list_Stone(address,uint8)": "6811e177",
							"listedID()": "0cc797e1",
							"mintStone(address,string,uint8)": "d420e5cb",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setStonePrices(uint8,uint256)": "55bd683c",
							"stoneCapAmount(uint8)": "c17560d4",
							"tokenID()": "a5c42ef1",
							"totalListed(address)": "166d98cf",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"enum Marketplace.Stones\",\"name\":\"_typ\",\"type\":\"uint8\"}],\"name\":\"buy_Stone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum Marketplace.Stones\",\"name\":\"stone\",\"type\":\"uint8\"}],\"name\":\"getUserStoneDetail\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"listStone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"enum Marketplace.Stones\",\"name\":\"_typ\",\"type\":\"uint8\"}],\"name\":\"list_Stone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listedID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"enum Marketplace.Stones\",\"name\":\"_typ\",\"type\":\"uint8\"}],\"name\":\"mintStone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Marketplace.Stones\",\"name\":\"_name\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setStonePrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Marketplace.Stones\",\"name\":\"stones\",\"type\":\"uint8\"}],\"name\":\"stoneCapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"totalListed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MarketPlace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dispatch_AI/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Dispatch_AI/Marketplace.sol\":{\"keccak256\":\"0x4d841e1a9f07f04fd08adcbc7ad7759f5a8f33b08cc17b5c9ea31083cee4599a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17450bb7e47cd52a445eeea8d382b62106d42e94cf44c8012c7224a62968b4ed\",\"dweb:/ipfs/QmP3YgCbacWy2wTq4o45MgYHdLF3atWWhKMX6KTBEJLPWm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 3757,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "tokenID",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)2206_storage"
							},
							{
								"astId": 3760,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "listedID",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)2206_storage"
							},
							{
								"astId": 3762,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "NFTContractAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 3785,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "getUserStoneDetail",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_enum(Stones)3804,t_struct(stoneDetail)3777_storage))"
							},
							{
								"astId": 3790,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "listStone",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(stoneDetail)3777_storage)"
							},
							{
								"astId": 3794,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "totalListed",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3799,
								"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
								"label": "stoneCapAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_enum(Stones)3804,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Stones)3804": {
								"encoding": "inplace",
								"label": "enum Marketplace.Stones",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_enum(Stones)3804,t_struct(stoneDetail)3777_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(Stones)3804,t_struct(stoneDetail)3777_storage)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(Stones)3804,t_struct(stoneDetail)3777_storage)": {
								"encoding": "mapping",
								"key": "t_enum(Stones)3804",
								"label": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail)",
								"numberOfBytes": "32",
								"value": "t_struct(stoneDetail)3777_storage"
							},
							"t_mapping(t_enum(Stones)3804,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(Stones)3804",
								"label": "mapping(enum Marketplace.Stones => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(stoneDetail)3777_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.stoneDetail)",
								"numberOfBytes": "32",
								"value": "t_struct(stoneDetail)3777_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)2206_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2205,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(stoneDetail)3777_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.stoneDetail",
								"members": [
									{
										"astId": 3764,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3766,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "currentOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3768,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "tokenID",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3770,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "capAmount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3772,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "uri",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 3774,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "points",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3776,
										"contract": "contracts/Dispatch_AI/Marketplace.sol:Marketplace",
										"label": "isActive",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2200
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 2201,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2200,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2200,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								2200
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							427
						]
					},
					"id": 428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 427,
							"linearizedBaseContracts": [
								427
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 361,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 370,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 427,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 427,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 427,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 427,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 427,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 427,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 428,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								361,
								370
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							463
						]
					},
					"id": 464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 463,
							"linearizedBaseContracts": [
								463
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 440,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 442,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 463,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 463,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 463,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 464,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2178
						],
						"IERC20": [
							427
						],
						"IERC20Permit": [
							463
						],
						"SafeERC20": [
							753
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 465,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 428,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 427,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 464,
							"src": "179:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 463,
										"src": "187:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 2179,
							"src": "240:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 470,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2178,
										"src": "248:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 475,
									"libraryName": {
										"id": 473,
										"name": "Address",
										"nameLocations": [
											"781:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2178,
										"src": "781:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:5",
									"typeName": {
										"id": 474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:5",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 480,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "907:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:5"
									},
									"src": "876:46:5"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 489,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1043:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1060:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1086:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:5"
									},
									"src": "1004:109:5"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1375:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "1405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 504,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 394,
																	"src": "1427:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 506,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "1444:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "1448:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 502,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 500,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1385:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:5"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1325:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 491,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "1325:6:5"
													},
													"referencedDeclaration": 427,
													"src": "1325:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1351:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:5"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:5"
									},
									"scope": 753,
									"src": "1303:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "1792:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 530,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "1844:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "1844:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 532,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "1865:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 533,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "1871:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 534,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "1875:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 526,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1802:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:5"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 515,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "1728:6:5"
													},
													"referencedDeclaration": 427,
													"src": "1728:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1756:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1768:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:5"
									},
									"scope": 753,
									"src": "1702:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "2167:139:5",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "2177:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 557,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2231:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 553,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2200:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "2200:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "2262:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 564,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2269:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 565,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2278:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 566,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2293:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$427",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2249:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:5"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2112:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "2112:6:5"
													},
													"referencedDeclaration": 427,
													"src": "2112:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2126:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:5"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:5"
									},
									"scope": 753,
									"src": "2081:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "2607:370:5",
										"statements": [
											{
												"id": 612,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:5",
												"statements": [
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 612,
																"src": "2641:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 592,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 588,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 586,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 590,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2699:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2668:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "2668:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "2725:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 594,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "2744:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "2721:160:5",
														"trueBody": {
															"id": 602,
															"nodeType": "Block",
															"src": "2763:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 597,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 577,
																				"src": "2821:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 598,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "2830:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 599,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 579,
																				"src": "2848:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 596,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2788:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 601,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 605,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2907:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 606,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 607,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "2923:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 608,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "2942:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 604,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "2894:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 611,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2540:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 573,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 427,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2554:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2571:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:5"
									},
									"scope": 753,
									"src": "2509:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3373:303:5",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3383:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 625,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 629,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "3426:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "3426:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 631,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "3442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 632,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "3451:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 633,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 627,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:5"
											},
											{
												"condition": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 637,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "3498:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 638,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "3505:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$427",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 636,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3474:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "3469:201:5",
												"trueBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "3520:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 642,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "3554:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "3576:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$427",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 414,
																				"src": "3576:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 647,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 620,
																						"src": "3592:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 649,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 643,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 641,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3534:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 652,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 654,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "3639:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 655,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "3646:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$427",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 653,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3619:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$427_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3318:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "3318:6:5"
													},
													"referencedDeclaration": 427,
													"src": "3318:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3332:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:5"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:5"
									},
									"scope": 753,
									"src": "3296:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "4129:559:5",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "4478:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 670,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4532:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "4512:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1999,
														"src": "4504:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 680,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "4551:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 686,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4589:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:5",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "4547:135:5",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "4610:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 696,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "4664:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$427",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$427",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 694,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 693,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "4631:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "RevertStatement",
															"src": "4624:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4088:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "4088:6:5"
													},
													"referencedDeclaration": 427,
													"src": "4088:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4102:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:5"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:5"
									},
									"scope": 753,
									"src": "4059:629:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "5278:489:5",
										"statements": [
											{
												"assignments": [
													715,
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "5574:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 714,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "5588:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 716,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5635:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "5623:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$427",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "5657:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 727,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "5669:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 733,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "5706:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 734,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 736,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 731,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "5738:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$427",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$427",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 713,
												"id": 750,
												"nodeType": "Return",
												"src": "5650:110:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5222:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$427",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 427,
														"src": "5222:6:5"
													},
													"referencedDeclaration": 427,
													"src": "5222:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$427",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:5"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5272:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:5"
									},
									"scope": 753,
									"src": "5189:578:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "751:5018:5",
							"usedErrors": [
								480,
								489
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2200
						],
						"ERC165": [
							2553
						],
						"ERC721": [
							1762
						],
						"IERC165": [
							2565
						],
						"IERC721": [
							1879
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1925
						],
						"IERC721Receiver": [
							1897
						],
						"Strings": [
							2529
						]
					},
					"id": 1763,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1880,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 756,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1898,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 758,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1897,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1926,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 760,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1925,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2201,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 762,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2200,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 765,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2530,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2529,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 2554,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 766,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 767,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2553,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 285,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2200,
										"src": "804:7:6"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2553,
										"src": "813:6:6"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "821:7:6"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1925,
										"src": "830:15:6"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:6"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1762,
							"linearizedBaseContracts": [
								1762,
								237,
								1925,
								1879,
								2553,
								2565,
								2200
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 784,
									"libraryName": {
										"id": 782,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2529,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 786,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 785,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 787,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 791,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 789,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 790,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 795,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 794,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 799,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 806,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 805,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 804,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 802,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 803,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 815,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 819,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 823,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1762,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2552,
										2564
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 834,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 836,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1879_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1879_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 835,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1879",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 842,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1925_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1925_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 841,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1925",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 849,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 847,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1762_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2552,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 833,
												"id": 852,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 830,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 828,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2553,
												"src": "1637:6:6"
											},
											{
												"id": 829,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2565,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 825,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1762,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1804
									],
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 868,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 877,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 879,
													"indexExpression": {
														"id": 878,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 861,
												"id": 880,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1762,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1812
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 889,
												"id": 893,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1762,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1910
									],
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 901,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 786,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 900,
												"id": 902,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1762,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 910,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 909,
												"id": 911,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1762,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1924
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 921,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 925,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 927,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 932,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 940,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 941,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2342,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 937,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 920,
												"id": 947,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1762,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 954,
												"id": 956,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1762,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1852
									],
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 969,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 966,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1631
														],
														"referencedDeclaration": 1565,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1762,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1868
									],
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 981,
												"id": 989,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1762,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1860
									],
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1000,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 999,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1762,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1878
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1017,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1019,
														"indexExpression": {
															"id": 1018,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1021,
													"indexExpression": {
														"id": 1020,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1022,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1762,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1844
									],
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1034,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1035,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1041,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1040,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1046,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1069,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1049,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"arguments": [
														{
															"id": 1052,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1054,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1051,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1059,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1062,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1063,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1064,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1061,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1762,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1080,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1088,
															1114
														],
														"referencedDeclaration": 1114,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1762,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1824
									],
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1110,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1106,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1762,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1122,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1124,
													"indexExpression": {
														"id": 1123,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1125,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1762,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1135,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1137,
													"indexExpression": {
														"id": 1136,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1138,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1762,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1158,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1159,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1162,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1143,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1163,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1161,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1167,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1166,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1169,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1172,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1174,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1762,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1187,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1188,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1189,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1186,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1193,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1208,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1204,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1205,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1203,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1207,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 1209,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 1202,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1199,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1198,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1201,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1762,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 1227,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1221,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1223,
																"indexExpression": {
																	"id": 1222,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1224,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1226,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1217,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1762,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1241,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": {
													"arguments": [
														{
															"id": 1244,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1247,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1248,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1256,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1253,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 1287,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1268,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1273,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1267,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1565,
																		1631
																	],
																	"referencedDeclaration": 1631,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 1286,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1280,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1282,
																			"indexExpression": {
																				"id": 1281,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1285,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1289,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1290,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 1301,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1295,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1297,
																			"indexExpression": {
																				"id": 1296,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1304,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1306,
														"indexExpression": {
															"id": 1305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1307,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1310,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 1316,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1242,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1317,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1762,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "10008:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "10022:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "10018:87:6",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "10040:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1333,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1339,
															"nodeType": "RevertStatement",
															"src": "10054:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "10114:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"id": 1345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "10146:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "10150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1344,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "10138:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1353,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "10184:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1354,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "10180:96:6",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "10213:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1360,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1359,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1365,
															"nodeType": "RevertStatement",
															"src": "10227:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "9970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "9982:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:6"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:6"
									},
									"scope": 1762,
									"src": "9955:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "10690:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "10710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "10714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1377,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1384,
															1410
														],
														"referencedDeclaration": 1410,
														"src": "10700:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:6"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10652:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10664:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:6"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:6"
									},
									"scope": 1762,
									"src": "10633:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "11038:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "11054:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11058:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "11048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "11111:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1405,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "11115:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "11124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1399,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "11076:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:6"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "10973:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "10985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "11002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:6"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:6"
									},
									"scope": 1762,
									"src": "10954:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "11503:186:6",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1442,
														"src": "11513:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1416,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "11557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1418,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "11537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1430,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "11591:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "11587:96:6",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "11620:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1437,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "11664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1436,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1439,
															"nodeType": "RevertStatement",
															"src": "11634:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "11477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:6"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:6"
									},
									"scope": 1762,
									"src": "11462:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "12084:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "12098:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1454,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1467,
												"nodeType": "IfStatement",
												"src": "12094:87:6",
												"trueBody": {
													"id": 1466,
													"nodeType": "Block",
													"src": "12116:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1460,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1459,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1465,
															"nodeType": "RevertStatement",
															"src": "12130:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "12190:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1471,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "12222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "12226:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1470,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "12214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1479,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "12260:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1490,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "12362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "12379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1500,
													"nodeType": "IfStatement",
													"src": "12358:109:6",
													"trueBody": {
														"id": 1499,
														"nodeType": "Block",
														"src": "12385:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1494,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "12427:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1495,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "12433:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1496,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "12442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1493,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1498,
																"nodeType": "RevertStatement",
																"src": "12399:57:6"
															}
														]
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "12256:211:6",
												"trueBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "12289:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1486,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "12333:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1485,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1488,
															"nodeType": "RevertStatement",
															"src": "12303:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12046:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "12058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:6"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:6"
									},
									"scope": 1762,
									"src": "12013:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "13481:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1514,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "13505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "13511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1516,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "13515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1513,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1521,
															1547
														],
														"referencedDeclaration": 1547,
														"src": "13491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:6"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "13455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:6"
									},
									"scope": 1762,
									"src": "13406:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "13873:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "13893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13899:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1536,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "13883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "13944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "13950:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "13954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "13963:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1539,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "13921:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:6"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13808:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13820:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "13837:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:6"
									},
									"scope": 1762,
									"src": "13771:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "14488:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "14507:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "14511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1560,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "14520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1557,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1565,
															1631
														],
														"referencedDeclaration": 1631,
														"src": "14498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:6"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14436:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "14465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:6"
									},
									"scope": 1762,
									"src": "14418:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "14814:568:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "14880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1578,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "14893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "14876:460:6",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "14913:423:6",
													"statements": [
														{
															"assignments": [
																1586
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1586,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1622,
																	"src": "14927:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1590,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1588,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "14957:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1587,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "14943:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "15093:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1592,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1597,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "15115:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1598,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "15124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1602,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1586,
																				"src": "15150:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1603,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "15157:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1601,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "15133:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1612,
															"nodeType": "IfStatement",
															"src": "15089:142:6",
															"trueBody": {
																"id": 1611,
																"nodeType": "Block",
																"src": "15164:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1608,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "15211:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1607,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1610,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1613,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "15249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1621,
															"nodeType": "IfStatement",
															"src": "15245:81:6",
															"trueBody": {
																"id": 1620,
																"nodeType": "Block",
																"src": "15260:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1615,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "15292:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1616,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "15299:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1617,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "15303:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1614,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1787,
																				"src": "15283:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1619,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1624,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "15346:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "15362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1627,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "15373:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:6"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14738:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14750:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "14781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:6"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:6"
									},
									"scope": 1762,
									"src": "14720:662:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "15684:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "15698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1642,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "15694:91:6",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "15722:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "15765:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1647,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "15736:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1653,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "15794:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1656,
															"indexExpression": {
																"id": 1654,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "15813:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1657,
														"indexExpression": {
															"id": 1655,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1658,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "15832:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1662,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "15870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "15877:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "15887:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1661,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "15855:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "EmitStatement",
												"src": "15850:46:6"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15634:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "15652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:6"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:6"
									},
									"scope": 1762,
									"src": "15591:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "16210:169:6",
										"statements": [
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "16220:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1676,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "16245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "16236:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "16267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1683,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1693,
												"nodeType": "IfStatement",
												"src": "16263:88:6",
												"trueBody": {
													"id": 1692,
													"nodeType": "Block",
													"src": "16288:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1689,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "16332:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1688,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1691,
															"nodeType": "RevertStatement",
															"src": "16302:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1694,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1677,
													"src": "16367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1675,
												"id": 1695,
												"nodeType": "Return",
												"src": "16360:12:6"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "16161:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:6"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "16201:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:6"
									},
									"scope": 1762,
									"src": "16138:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "17020:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1709,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "17034:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1759,
												"nodeType": "IfStatement",
												"src": "17030:664:6",
												"trueBody": {
													"id": 1758,
													"nodeType": "Block",
													"src": "17054:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1738,
																		"nodeType": "Block",
																		"src": "17168:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1727,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1725,
																						"src": "17190:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1728,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1897,
																								"src": "17200:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1897_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1729,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1896,
																							"src": "17200:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1737,
																				"nodeType": "IfStatement",
																				"src": "17186:130:6",
																				"trueBody": {
																					"id": 1736,
																					"nodeType": "Block",
																					"src": "17243:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1733,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1702,
																										"src": "17294:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1732,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1734,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1735,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1739,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1726,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1725,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1739,
																				"src": "17153:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1724,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:6"
																	},
																	"src": "17144:186:6"
																},
																{
																	"block": {
																		"id": 1755,
																		"nodeType": "Block",
																		"src": "17359:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1743,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1741,
																							"src": "17381:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1753,
																					"nodeType": "Block",
																					"src": "17480:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:6",
																								"nodeType": "YulBlock",
																								"src": "17566:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:6"
																													},
																													"nativeSrc": "17599:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:6"
																													},
																													"nativeSrc": "17616:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:6"
																											},
																											"nativeSrc": "17592:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:6"
																										},
																										"nativeSrc": "17592:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1741,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1741,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1752,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:6"
																						}
																					]
																				},
																				"id": 1754,
																				"nodeType": "IfStatement",
																				"src": "17377:293:6",
																				"trueBody": {
																					"id": 1751,
																					"nodeType": "Block",
																					"src": "17401:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1748,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1702,
																										"src": "17452:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1747,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1749,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1750,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1756,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1742,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1741,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1756,
																				"src": "17338:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1740,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:6"
																	},
																	"src": "17331:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1718,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2190,
																			"src": "17109:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1720,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "17123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "17129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1722,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "17138:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1715,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "17088:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1714,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "17072:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1897_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1897",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1896,
																	"src": "17072:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1757,
															"nodeType": "TryStatement",
															"src": "17068:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16950:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16976:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "16993:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:6"
									},
									"scope": 1762,
									"src": "16918:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1763,
							"src": "776:16926:6",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "107:17596:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2565
						],
						"IERC721": [
							1879
						]
					},
					"id": 1880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1764,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2566,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1765,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1768,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2565,
										"src": "287:7:7"
									},
									"id": 1769,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1767,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1879,
							"linearizedBaseContracts": [
								1879,
								2565
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1778,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1787,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1796,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1879,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1879,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1879,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1879,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1879,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1879,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1879,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1879,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1879,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1880,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1897
						]
					},
					"id": 1898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1882,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1897,
							"linearizedBaseContracts": [
								1897
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1897,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1898,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1879
						],
						"IERC721Metadata": [
							1925
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1926,
							"sourceUnit": 1880,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1900,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1903,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1879,
										"src": "357:7:9"
									},
									"id": 1904,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1902,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1925,
							"linearizedBaseContracts": [
								1925,
								1879,
								2565
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1925,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1925,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1925,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1926,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1778,
								1787,
								1796
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2178
						]
					},
					"id": 2179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1928,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2178,
							"linearizedBaseContracts": [
								2178
							],
							"name": "Address",
							"nameLocation": "203:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1933,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "349:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:10"
									},
									"src": "316:50:10"
								},
								{
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1938,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "475:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:10"
									},
									"src": "452:39:10"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1941,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:10"
									},
									"src": "591:24:10"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "1602:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1951,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																],
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1954,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "1640:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1964,
												"nodeType": "IfStatement",
												"src": "1612:109:10",
												"trueBody": {
													"id": 1963,
													"nodeType": "Block",
													"src": "1648:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1959,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1957,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1956,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "1669:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1962,
															"nodeType": "RevertStatement",
															"src": "1662:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1966,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "1732:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1965,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1973,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1967,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "1750:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1969,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "1772:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:10"
											},
											{
												"condition": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:10",
													"subExpression": {
														"id": 1974,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "1798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "IfStatement",
												"src": "1793:63:10",
												"trueBody": {
													"id": 1979,
													"nodeType": "Block",
													"src": "1807:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1976,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "1828:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1978,
															"nodeType": "RevertStatement",
															"src": "1821:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1550:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1577:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:10"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:10"
									},
									"scope": 2178,
									"src": "1531:331:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "2794:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1993,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "2833:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1994,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "2841:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1992,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "2811:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1991,
												"id": 1997,
												"nodeType": "Return",
												"src": "2804:45:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2727:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2743:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "2780:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:10"
									},
									"scope": 2178,
									"src": "2705:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3293:279:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2013,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2178",
																		"typeString": "library Address"
																	}
																],
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2016,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "3331:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "3303:108:10",
												"trueBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "3338:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2021,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$2178",
																					"typeString": "library Address"
																				}
																			],
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2019,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2018,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "3359:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2024,
															"nodeType": "RevertStatement",
															"src": "3352:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													2028,
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3421:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2027,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3435:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2029,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2037,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "3488:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2031,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "3462:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2033,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "3481:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2039,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "3537:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2040,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "3545:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2041,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "3554:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2038,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "3510:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2043,
												"nodeType": "Return",
												"src": "3503:62:10"
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3211:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3227:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2003,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:10"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3279:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:10"
									},
									"scope": 2178,
									"src": "3180:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "3811:154:10",
										"statements": [
											{
												"assignments": [
													2056,
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3822:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2055,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "3836:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2057,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"arguments": [
														{
															"id": 2061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "3881:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2059,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "3863:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "3930:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "3938:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2067,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "3947:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2064,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "3903:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2069,
												"nodeType": "Return",
												"src": "3896:62:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3755:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:10"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3797:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:10"
									},
									"scope": 2178,
									"src": "3711:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "4203:156:10",
										"statements": [
											{
												"assignments": [
													2082,
													2084
												],
												"declarations": [
													{
														"constant": false,
														"id": 2082,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2096,
														"src": "4214:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2081,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2096,
														"src": "4228:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2083,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"initialValue": {
													"arguments": [
														{
															"id": 2087,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "4275:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2085,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "4255:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "4324:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2092,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "4332:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2093,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "4341:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2090,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "4297:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2080,
												"id": 2095,
												"nodeType": "Return",
												"src": "4290:62:10"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4136:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4152:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:10"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "4189:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:10"
									},
									"scope": 2178,
									"src": "4106:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "4783:424:10",
										"statements": [
											{
												"condition": {
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:10",
													"subExpression": {
														"id": 2109,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "4798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "4857:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2116,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "5045:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2120,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2100,
																				"src": "5071:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2131,
															"nodeType": "IfStatement",
															"src": "5041:119:10",
															"trueBody": {
																"id": 2130,
																"nodeType": "Block",
																"src": "5096:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2127,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2100,
																					"src": "5138:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2126,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1938,
																				"src": "5121:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2129,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2132,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "5180:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2133,
															"nodeType": "Return",
															"src": "5173:17:10"
														}
													]
												},
												"id": 2135,
												"nodeType": "IfStatement",
												"src": "4793:408:10",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "4807:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2112,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "4829:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2111,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "4821:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4670:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4694:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4716:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:10"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "4769:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:10"
									},
									"scope": 2178,
									"src": "4625:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "5509:122:10",
										"statements": [
											{
												"condition": {
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:10",
													"subExpression": {
														"id": 2147,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "5524:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "5583:42:10",
													"statements": [
														{
															"expression": {
																"id": 2154,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "5604:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2146,
															"id": 2155,
															"nodeType": "Return",
															"src": "5597:17:10"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "5519:106:10",
												"trueBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "5533:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2150,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "5555:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2149,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "5547:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5433:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5447:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:10"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "5495:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:10"
									},
									"scope": 2178,
									"src": "5407:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "5798:461:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2165,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "5874:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "6204:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2171,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "6225:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2173,
															"nodeType": "RevertStatement",
															"src": "6218:24:10"
														}
													]
												},
												"id": 2175,
												"nodeType": "IfStatement",
												"src": "5870:383:10",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "5897:301:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:10",
																"nodeType": "YulBlock",
																"src": "6055:133:10",
																"statements": [
																	{
																		"nativeSrc": "6073:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:10"
																			},
																			"nativeSrc": "6096:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:10",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:10",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:10"
																					},
																					"nativeSrc": "6137:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:10"
																			},
																			"nativeSrc": "6130:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:10"
																		},
																		"nativeSrc": "6130:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:10"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 2162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:10",
																	"valueSize": 1
																}
															],
															"id": 2169,
															"nodeType": "InlineAssembly",
															"src": "6046:142:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "5760:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:10"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:10"
									},
									"scope": 2178,
									"src": "5743:516:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2179,
							"src": "195:6066:10",
							"usedErrors": [
								1933,
								1938,
								1941
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2200
						]
					},
					"id": 2201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2181,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2200,
							"linearizedBaseContracts": [
								2200
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2186,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2188,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 2200,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2195,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2194,
												"id": 2197,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 2200,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2201,
							"src": "624:235:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2274
						]
					},
					"id": 2275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2203,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2274,
							"linearizedBaseContracts": [
								2274
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2206,
									"members": [
										{
											"constant": false,
											"id": 2205,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2206,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 2274,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2214,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2205,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2216,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2207,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "844:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 2274,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 2230,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2224,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2205,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2229,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2220,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2219,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "964:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 2274,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													2239
												],
												"declarations": [
													{
														"constant": false,
														"id": 2239,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2259,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"expression": {
														"id": 2240,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2205,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2244,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 2258,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2250,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2205,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2257,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2233,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 2274,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2266,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2205,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2261,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 2206,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 2274,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2275,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3619
						],
						"SignedMath": [
							3724
						],
						"Strings": [
							2529
						]
					},
					"id": 2530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 3620,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2277,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3619,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 3725,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2279,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3724,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2281,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2529,
							"linearizedBaseContracts": [
								2529
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2284,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2529,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2282,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2283,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2287,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2529,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2285,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2286,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2294,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 2340,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															2303
														],
														"declarations": [
															{
																"constant": false,
																"id": 2303,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2302,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2310,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2306,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2304,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3619,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3619_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3439,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															2312
														],
														"declarations": [
															{
																"constant": false,
																"id": 2312,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2311,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2317,
														"initialValue": {
															"arguments": [
																{
																	"id": 2315,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2303,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2313,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															2319
														],
														"declarations": [
															{
																"constant": false,
																"id": 2319,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2318,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2320,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2303,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 2319,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 2321,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 2336,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 2323,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2319,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2284,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2319,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2297,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 2326,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2327,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2330,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2335,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 2334,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2337,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 2338,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2301,
														"id": 2339,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2529,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2362,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2345,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2360,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3724,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3724_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3723,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2359,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2350,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2349,
												"id": 2366,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2344,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2529,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2387,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 2386,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2380,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2371,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2378,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3619,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3619_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3561,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2376,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2388,
																	2471,
																	2491
																],
																"referencedDeclaration": 2471,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2375,
														"id": 2385,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2529,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2470,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2401,
												"initialValue": {
													"id": 2400,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2391,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													2403
												],
												"declarations": [
													{
														"constant": false,
														"id": 2403,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2470,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2402,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2412,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2407,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2404,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2413,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2415,
														"indexExpression": {
															"hexValue": "30",
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2418,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2419,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2421,
														"indexExpression": {
															"hexValue": "31",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2424,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 2453,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2439,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2403,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2441,
																	"indexExpression": {
																		"id": 2440,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2442,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2446,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2443,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2448,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2449,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2452,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2433,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2454,
												"initializationExpression": {
													"assignments": [
														2426
													],
													"declarations": [
														{
															"constant": false,
															"id": 2426,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2454,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2425,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2432,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2428,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 2436,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2426,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2438,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2455,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2464,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 2463,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2459,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2460,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2393,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2458,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2462,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2467,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2465,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2397,
												"id": 2469,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2529,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2484,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2474,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2482,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2480,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2487,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2479,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2388,
															2471,
															2491
														],
														"referencedDeclaration": 2471,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2478,
												"id": 2489,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2529,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2527,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2503,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2494,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2501,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2508,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2506,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2515,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2494,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2513,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2512,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2521,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2496,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2519,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2518,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2500,
												"id": 2526,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2529,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2530,
							"src": "251:2847:13",
							"usedErrors": [
								2294
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2553
						],
						"IERC165": [
							2565
						]
					},
					"id": 2554,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2554,
							"sourceUnit": 2566,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2532,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2535,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2565,
										"src": "687:7:14"
									},
									"id": 2536,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2534,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2553,
							"linearizedBaseContracts": [
								2553,
								2565
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2564
									],
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2544,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2539,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2546,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2565,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2565_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2565_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2545,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2565",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2543,
												"id": 2550,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2538,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2553,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2554,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2565
						]
					},
					"id": 2566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2555,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2556,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2565,
							"linearizedBaseContracts": [
								2565
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2558,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2565,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2566,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3619
						]
					},
					"id": 3620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2568,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3619,
							"linearizedBaseContracts": [
								3619
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2571,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2576,
									"members": [
										{
											"id": 2572,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2573,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2574,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2575,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2607,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2606,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2589
														],
														"declarations": [
															{
																"constant": false,
																"id": 2589,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2606,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2593,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2590,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2581,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2594,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2589,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2595,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2599,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2587,
															"id": 2600,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2603,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2604,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2587,
														"id": 2605,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3619,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2634,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2620,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2613,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2621,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2627,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2619,
															"id": 2626,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2629,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2630,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2613,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2632,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2619,
														"id": 2633,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2609,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3619,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2676,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2648,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2653,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2647,
															"id": 2654,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2657
														],
														"declarations": [
															{
																"constant": false,
																"id": 2657,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2676,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2661,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2658,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2659,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2662,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2663,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2671,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2669,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2647,
															"id": 2670,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2673,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2674,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2647,
														"id": 2675,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3619,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2704,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2690,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2697,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2689,
															"id": 2696,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2699,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2681,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2700,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2683,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2702,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2689,
														"id": 2703,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3619,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2732,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2718,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2711,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2725,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2723,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2717,
															"id": 2724,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2727,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2709,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2728,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2711,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2730,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2717,
														"id": 2731,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3619,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2744,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2737,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2745,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2748,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2739,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2747,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2743,
												"id": 2750,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3619,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2762,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2763,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2761,
												"id": 2768,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2753,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3619,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2792,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2780,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2781,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2775,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2783,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2784,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2785,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2787,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2779,
												"id": 2791,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3619,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2811,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2810,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2806,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2796,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2807,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2802,
															"id": 2809,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2812,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2816,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2796,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2798,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2802,
												"id": 2825,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2794,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3619,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2951,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2840
														],
														"declarations": [
															{
																"constant": false,
																"id": 2840,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2839,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2844,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2841,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2830,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2842,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2832,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2846
														],
														"declarations": [
															{
																"constant": false,
																"id": 2846,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2845,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2847,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2830,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2832,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2848,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2849,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2857,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2856,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2852,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2840,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2853,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2838,
																	"id": 2855,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2858,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2859,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2865,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2864,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2861,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2571,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2863,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2867
														],
														"declarations": [
															{
																"constant": false,
																"id": 2867,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2866,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2868,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2834,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2867,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2830,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2832,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2869,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2871
														],
														"declarations": [
															{
																"constant": false,
																"id": 2871,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2870,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2878,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2872,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2834,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2874,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2834,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2834,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2840,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2871,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2879,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2880,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2840,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2881,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2882,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2885,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2887
														],
														"declarations": [
															{
																"constant": false,
																"id": 2887,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2951,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2886,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2894,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2889,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2834,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2895,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2897,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2898,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2902,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2903,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2905,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2906,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2910,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2911,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2913,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2914,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2918,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2919,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2921,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2922,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2926,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2927,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2929,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2930,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2934,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2935,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2937,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2938,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2942,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2943,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2837,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2944,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2945,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2887,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2948,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2949,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2838,
														"id": 2950,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2828,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3619,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2969
												],
												"declarations": [
													{
														"constant": false,
														"id": 2969,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2995,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2975,
												"initialValue": {
													"arguments": [
														{
															"id": 2971,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2972,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2958,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2973,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2960,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2970,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2953,
															2996
														],
														"referencedDeclaration": 2953,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2977,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2576",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2576",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2976,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3618,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2980,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2956,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2981,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2958,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2982,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2960,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2979,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2992,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2991,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2987,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2969,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2990,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2993,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2969,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2967,
												"id": 2994,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2961,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3619,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3004,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3010,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 3009,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3003,
															"id": 3008,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													3012
												],
												"declarations": [
													{
														"constant": false,
														"id": 3012,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3107,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3021,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3015,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3014,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3275,
																			3310
																		],
																		"referencedDeclaration": 3275,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 3106,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3022,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3023,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3024,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3025,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3028,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3032,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3033,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3034,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3035,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3036,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3039,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3043,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3044,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3045,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3046,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3047,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3050,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3054,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3055,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3056,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3057,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3058,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3065,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3066,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3067,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3068,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3069,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3072,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3076,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3078,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3079,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3080,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3083,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3087,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3089,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3090,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2999,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3091,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3098,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3100,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3012,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3101,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2999,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3102,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3012,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3099,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3003,
														"id": 3105,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3619,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 3141,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															3120
														],
														"declarations": [
															{
																"constant": false,
																"id": 3120,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3141,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3119,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3124,
														"initialValue": {
															"arguments": [
																{
																	"id": 3122,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3111,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3121,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3108,
																	3143
																],
																"referencedDeclaration": 3108,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3125,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3127,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3114,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3126,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3129,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3120,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3130,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3120,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3132,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3111,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3138,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3118,
														"id": 3140,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3112,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3619,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													3152
												],
												"declarations": [
													{
														"constant": false,
														"id": 3152,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3274,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3154,
												"initialValue": {
													"hexValue": "30",
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 3271,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3169,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 3168,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3163,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3167,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3184,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 3183,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3178,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3182,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3199,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 3198,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3193,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3214,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 3213,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3208,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3212,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3229,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 3228,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3223,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 3226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3224,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3227,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3230,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3244,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 3243,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3238,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 3241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3242,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3245,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3259,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 3258,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3250,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3253,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 3256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3254,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3257,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3260,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3270,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 3269,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3265,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3268,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3272,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3152,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3150,
												"id": 3273,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 3144,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3619,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3309,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 3308,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															3287
														],
														"declarations": [
															{
																"constant": false,
																"id": 3287,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3308,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3291,
														"initialValue": {
															"arguments": [
																{
																	"id": 3289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3278,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3288,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3275,
																	3310
																],
																"referencedDeclaration": 3275,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3292,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3287,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3294,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3281,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3293,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3297,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3287,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3299,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3278,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3285,
														"id": 3307,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3276,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3279,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 3285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3619,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3438,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													3319
												],
												"declarations": [
													{
														"constant": false,
														"id": 3319,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3438,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3321,
												"initialValue": {
													"hexValue": "30",
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 3435,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3322,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3338,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 3337,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3327,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3332,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 3335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3336,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3339,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3355,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 3354,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3349,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3353,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3356,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3372,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 3371,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 3365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3361,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3366,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 3369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3367,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3370,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3373,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3389,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 3388,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3378,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3383,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3387,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3406,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 3405,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3400,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 3403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3404,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3407,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3423,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 3422,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3313,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3417,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3418,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3421,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3424,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3434,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 3433,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3429,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3432,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3436,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3319,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3317,
												"id": 3437,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 3311,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3619,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3473,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 3472,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															3451
														],
														"declarations": [
															{
																"constant": false,
																"id": 3451,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3472,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3450,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3455,
														"initialValue": {
															"arguments": [
																{
																	"id": 3453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3452,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3439,
																	3474
																],
																"referencedDeclaration": 3439,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3456,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3451,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3458,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3445,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3457,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3460,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3461,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3451,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3463,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3442,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3469,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3449,
														"id": 3471,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3440,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3443,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3619,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3560,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3483
												],
												"declarations": [
													{
														"constant": false,
														"id": 3483,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3560,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3485,
												"initialValue": {
													"hexValue": "30",
													"id": 3484,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3557,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3500,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3499,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3494,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3498,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3515,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3514,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3506,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3509,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3513,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3516,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3530,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3529,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3524,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3528,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3531,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3545,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3544,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3477,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3539,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3540,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3543,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3477,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3556,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3555,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3551,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3483,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3554,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3558,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3483,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3481,
												"id": 3559,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 3475,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3619,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3598,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3597,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3573
														],
														"declarations": [
															{
																"constant": false,
																"id": 3573,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3597,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3577,
														"initialValue": {
															"arguments": [
																{
																	"id": 3575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3564,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3574,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3561,
																	3599
																],
																"referencedDeclaration": 3561,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3578,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3573,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3580,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3567,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2576",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3579,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3618,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2576_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3585,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3583,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3573,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3584,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3586,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3588,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3564,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3571,
														"id": 3596,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3562,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3565,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3619,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3617,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3610,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3603,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2576",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2576",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3608,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3607,
												"id": 3616,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3600,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2576",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3602,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3601,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2576,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2576,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2576",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3618,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3619,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3620,
							"src": "203:14914:16",
							"usedErrors": [
								2571
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3724
						]
					},
					"id": 3725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3622,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3724,
							"linearizedBaseContracts": [
								3724
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3639,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3632,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3625,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3633,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3627,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3636,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3627,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3635,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3631,
												"id": 3638,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3623,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3625,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3624,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3627,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3640,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3629,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3724,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3657,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3650,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3643,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3651,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3645,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3654,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3645,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3653,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3649,
												"id": 3656,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3641,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3642,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3644,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3647,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3724,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3701,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3669
												],
												"declarations": [
													{
														"constant": false,
														"id": 3669,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3701,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3668,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3682,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3670,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3661,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3671,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3663,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3673,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3674,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3661,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3675,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3663,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3677,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3680,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3683,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3688,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3669,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3686,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3684,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3693,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3661,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3694,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3663,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3696,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3698,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3667,
												"id": 3700,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3659,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3660,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3662,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3702,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3724,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3722,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3721,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3712,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3705,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3716,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3705,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3715,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3705,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3710,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3709,
														"id": 3720,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3703,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3705,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3704,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3723,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3724,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3725,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contracts/Dispatch_AI/Marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/Dispatch_AI/Marketplace.sol",
					"exportedSymbols": {
						"Address": [
							2178
						],
						"Context": [
							2200
						],
						"Counters": [
							2274
						],
						"ERC165": [
							2553
						],
						"ERC721": [
							1762
						],
						"IERC165": [
							2565
						],
						"IERC20": [
							427
						],
						"IERC20Permit": [
							463
						],
						"IERC721": [
							1879
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1925
						],
						"IERC721Receiver": [
							1897
						],
						"IIERC721": [
							3741
						],
						"Marketplace": [
							4087
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"SafeERC20": [
							753
						],
						"Strings": [
							2529
						]
					},
					"id": 4088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4088,
							"sourceUnit": 2275,
							"src": "58:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4088,
							"sourceUnit": 1763,
							"src": "111:57:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4088,
							"sourceUnit": 148,
							"src": "169:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 3730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4088,
							"sourceUnit": 350,
							"src": "222:62:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4088,
							"sourceUnit": 428,
							"src": "285:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4088,
							"sourceUnit": 754,
							"src": "342:65:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3733,
								"nodeType": "StructuredDocumentation",
								"src": "408:67:18",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 3741,
							"linearizedBaseContracts": [
								3741
							],
							"name": "IIERC721",
							"nameLocation": "486:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a1448194",
									"id": 3740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "510:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3735,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "527:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "519:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3737,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "539:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3740,
												"src": "531:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:29:18"
									},
									"returnParameters": {
										"id": 3739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:0:18"
									},
									"scope": 3741,
									"src": "501:57:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4088,
							"src": "476:84:18",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3743,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"615:15:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "615:15:18"
									},
									"id": 3744,
									"nodeType": "InheritanceSpecifier",
									"src": "615:15:18"
								},
								{
									"baseName": {
										"id": 3745,
										"name": "Ownable",
										"nameLocations": [
											"633:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "633:7:18"
									},
									"id": 3746,
									"nodeType": "InheritanceSpecifier",
									"src": "633:7:18"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3742,
								"nodeType": "StructuredDocumentation",
								"src": "561:29:18",
								"text": " @title MarketPlace"
							},
							"fullyImplemented": true,
							"id": 4087,
							"linearizedBaseContracts": [
								4087,
								147,
								2200,
								349
							],
							"name": "Marketplace",
							"nameLocation": "600:11:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3750,
									"libraryName": {
										"id": 3747,
										"name": "SafeERC20",
										"nameLocations": [
											"652:9:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "652:9:18"
									},
									"nodeType": "UsingForDirective",
									"src": "646:27:18",
									"typeName": {
										"id": 3749,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3748,
											"name": "IERC20",
											"nameLocations": [
												"666:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 427,
											"src": "666:6:18"
										},
										"referencedDeclaration": 427,
										"src": "666:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$427",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 3754,
									"libraryName": {
										"id": 3751,
										"name": "Counters",
										"nameLocations": [
											"684:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2274,
										"src": "684:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "678:36:18",
									"typeName": {
										"id": 3753,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3752,
											"name": "Counters.Counter",
											"nameLocations": [
												"697:8:18",
												"706:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2206,
											"src": "697:16:18"
										},
										"referencedDeclaration": 2206,
										"src": "697:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a5c42ef1",
									"id": 3757,
									"mutability": "mutable",
									"name": "tokenID",
									"nameLocation": "743:7:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "719:31:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2206_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3756,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3755,
											"name": "Counters.Counter",
											"nameLocations": [
												"719:8:18",
												"728:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2206,
											"src": "719:16:18"
										},
										"referencedDeclaration": 2206,
										"src": "719:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0cc797e1",
									"id": 3760,
									"mutability": "mutable",
									"name": "listedID",
									"nameLocation": "780:8:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "756:32:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2206_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3759,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3758,
											"name": "Counters.Counter",
											"nameLocations": [
												"756:8:18",
												"765:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2206,
											"src": "756:16:18"
										},
										"referencedDeclaration": 2206,
										"src": "756:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2206_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3762,
									"mutability": "mutable",
									"name": "NFTContractAddress",
									"nameLocation": "826:18:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "818:26:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3761,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:18",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Marketplace.stoneDetail",
									"id": 3777,
									"members": [
										{
											"constant": false,
											"id": 3764,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "901:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "893:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3763,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "893:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3766,
											"mutability": "mutable",
											"name": "currentOwner",
											"nameLocation": "924:12:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "916:20:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3765,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "916:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3768,
											"mutability": "mutable",
											"name": "tokenID",
											"nameLocation": "951:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "946:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3767,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "946:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3770,
											"mutability": "mutable",
											"name": "capAmount",
											"nameLocation": "973:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "968:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3769,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "968:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3772,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "999:3:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "992:10:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3771,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "992:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3774,
											"mutability": "mutable",
											"name": "points",
											"nameLocation": "1017:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "1012:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3773,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1012:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3776,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1039:8:18",
											"nodeType": "VariableDeclaration",
											"scope": 3777,
											"src": "1034:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3775,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1034:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stoneDetail",
									"nameLocation": "872:11:18",
									"nodeType": "StructDefinition",
									"scope": 4087,
									"src": "865:189:18",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc2c9838",
									"id": 3785,
									"mutability": "mutable",
									"name": "getUserStoneDetail",
									"nameLocation": "1292:18:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "1225:85:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
										"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail))"
									},
									"typeName": {
										"id": 3784,
										"keyName": "user",
										"keyNameLocation": "1242:4:18",
										"keyType": {
											"id": 3778,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1234:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1225:59:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
											"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3783,
											"keyName": "stone",
											"keyNameLocation": "1264:5:18",
											"keyType": {
												"id": 3780,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3779,
													"name": "Stones",
													"nameLocations": [
														"1257:6:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3804,
													"src": "1257:6:18"
												},
												"referencedDeclaration": 3804,
												"src": "1257:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stones_$3804",
													"typeString": "enum Marketplace.Stones"
												}
											},
											"nodeType": "Mapping",
											"src": "1249:34:18",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
												"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 3782,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3781,
													"name": "stoneDetail",
													"nameLocations": [
														"1271:11:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3777,
													"src": "1271:11:18"
												},
												"referencedDeclaration": 3777,
												"src": "1271:11:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stoneDetail_$3777_storage_ptr",
													"typeString": "struct Marketplace.stoneDetail"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4bc91efc",
									"id": 3790,
									"mutability": "mutable",
									"name": "listStone",
									"nameLocation": "1359:9:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "1316:52:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stoneDetail_$3777_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.stoneDetail)"
									},
									"typeName": {
										"id": 3789,
										"keyName": "count",
										"keyNameLocation": "1330:5:18",
										"keyType": {
											"id": 3786,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1325:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1316:35:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stoneDetail_$3777_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.stoneDetail)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3788,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3787,
												"name": "stoneDetail",
												"nameLocations": [
													"1339:11:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3777,
												"src": "1339:11:18"
											},
											"referencedDeclaration": 3777,
											"src": "1339:11:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_stoneDetail_$3777_storage_ptr",
												"typeString": "struct Marketplace.stoneDetail"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "166d98cf",
									"id": 3794,
									"mutability": "mutable",
									"name": "totalListed",
									"nameLocation": "1411:11:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "1374:48:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3793,
										"keyName": "user",
										"keyNameLocation": "1391:4:18",
										"keyType": {
											"id": 3791,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1383:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1374:29:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3792,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1398:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c17560d4",
									"id": 3799,
									"mutability": "mutable",
									"name": "stoneCapAmount",
									"nameLocation": "1466:14:18",
									"nodeType": "VariableDeclaration",
									"scope": 4087,
									"src": "1428:52:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
										"typeString": "mapping(enum Marketplace.Stones => uint256)"
									},
									"typeName": {
										"id": 3798,
										"keyName": "stones",
										"keyNameLocation": "1444:6:18",
										"keyType": {
											"id": 3796,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3795,
												"name": "Stones",
												"nameLocations": [
													"1437:6:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3804,
												"src": "1437:6:18"
											},
											"referencedDeclaration": 3804,
											"src": "1437:6:18",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Stones_$3804",
												"typeString": "enum Marketplace.Stones"
											}
										},
										"nodeType": "Mapping",
										"src": "1428:30:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
											"typeString": "mapping(enum Marketplace.Stones => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3797,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1453:4:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.Stones",
									"id": 3804,
									"members": [
										{
											"id": 3800,
											"name": "Perl",
											"nameLocation": "1514:4:18",
											"nodeType": "EnumValue",
											"src": "1514:4:18"
										},
										{
											"id": 3801,
											"name": "Nelam",
											"nameLocation": "1520:5:18",
											"nodeType": "EnumValue",
											"src": "1520:5:18"
										},
										{
											"id": 3802,
											"name": "Yaqut",
											"nameLocation": "1527:5:18",
											"nodeType": "EnumValue",
											"src": "1527:5:18"
										},
										{
											"id": 3803,
											"name": "Firoza",
											"nameLocation": "1534:6:18",
											"nodeType": "EnumValue",
											"src": "1534:6:18"
										}
									],
									"name": "Stones",
									"nameLocation": "1506:6:18",
									"nodeType": "EnumDefinition",
									"src": "1501:41:18"
								},
								{
									"body": {
										"id": 3846,
										"nodeType": "Block",
										"src": "1661:232:18",
										"statements": [
											{
												"expression": {
													"id": 3816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3814,
														"name": "NFTContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3762,
														"src": "1671:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3815,
														"name": "nftContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3808,
														"src": "1692:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1671:39:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3817,
												"nodeType": "ExpressionStatement",
												"src": "1671:39:18"
											},
											{
												"expression": {
													"id": 3823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3818,
															"name": "stoneCapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "1720:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
																"typeString": "mapping(enum Marketplace.Stones => uint256)"
															}
														},
														"id": 3821,
														"indexExpression": {
															"expression": {
																"id": 3819,
																"name": "Stones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3804,
																"src": "1735:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stones_$3804_$",
																	"typeString": "type(enum Marketplace.Stones)"
																}
															},
															"id": 3820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1742:4:18",
															"memberName": "Perl",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3800,
															"src": "1735:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stones_$3804",
																"typeString": "enum Marketplace.Stones"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1720:27:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 3822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1750:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1720:33:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3824,
												"nodeType": "ExpressionStatement",
												"src": "1720:33:18"
											},
											{
												"expression": {
													"id": 3830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3825,
															"name": "stoneCapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "1763:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
																"typeString": "mapping(enum Marketplace.Stones => uint256)"
															}
														},
														"id": 3828,
														"indexExpression": {
															"expression": {
																"id": 3826,
																"name": "Stones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3804,
																"src": "1778:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stones_$3804_$",
																	"typeString": "type(enum Marketplace.Stones)"
																}
															},
															"id": 3827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1785:5:18",
															"memberName": "Nelam",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3801,
															"src": "1778:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stones_$3804",
																"typeString": "enum Marketplace.Stones"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1763:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 3829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1794:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1763:34:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3831,
												"nodeType": "ExpressionStatement",
												"src": "1763:34:18"
											},
											{
												"expression": {
													"id": 3837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3832,
															"name": "stoneCapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "1807:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
																"typeString": "mapping(enum Marketplace.Stones => uint256)"
															}
														},
														"id": 3835,
														"indexExpression": {
															"expression": {
																"id": 3833,
																"name": "Stones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3804,
																"src": "1822:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stones_$3804_$",
																	"typeString": "type(enum Marketplace.Stones)"
																}
															},
															"id": 3834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1829:5:18",
															"memberName": "Yaqut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3802,
															"src": "1822:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stones_$3804",
																"typeString": "enum Marketplace.Stones"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1807:28:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333030",
														"id": 3836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1838:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"src": "1807:34:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3838,
												"nodeType": "ExpressionStatement",
												"src": "1807:34:18"
											},
											{
												"expression": {
													"id": 3844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3839,
															"name": "stoneCapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "1851:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
																"typeString": "mapping(enum Marketplace.Stones => uint256)"
															}
														},
														"id": 3842,
														"indexExpression": {
															"expression": {
																"id": 3840,
																"name": "Stones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3804,
																"src": "1866:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stones_$3804_$",
																	"typeString": "type(enum Marketplace.Stones)"
																}
															},
															"id": 3841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1873:6:18",
															"memberName": "Firoza",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3803,
															"src": "1866:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stones_$3804",
																"typeString": "enum Marketplace.Stones"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1851:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343030",
														"id": 3843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1883:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_400_by_1",
															"typeString": "int_const 400"
														},
														"value": "400"
													},
													"src": "1851:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3845,
												"nodeType": "ExpressionStatement",
												"src": "1851:35:18"
											}
										]
									},
									"id": 3847,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3811,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3806,
													"src": "1643:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3812,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3810,
												"name": "Ownable",
												"nameLocations": [
													"1635:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1635:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1635:21:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3806,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1586:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "1578:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3808,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "1607:18:18",
												"nodeType": "VariableDeclaration",
												"scope": 3847,
												"src": "1599:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:49:18"
									},
									"returnParameters": {
										"id": 3813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1661:0:18"
									},
									"scope": 4087,
									"src": "1566:327:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3861,
										"nodeType": "Block",
										"src": "1956:47:18",
										"statements": [
											{
												"expression": {
													"id": 3859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3855,
															"name": "stoneCapAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "1966:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
																"typeString": "mapping(enum Marketplace.Stones => uint256)"
															}
														},
														"id": 3857,
														"indexExpression": {
															"id": 3856,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3850,
															"src": "1981:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stones_$3804",
																"typeString": "enum Marketplace.Stones"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1966:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3858,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3852,
														"src": "1990:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1966:30:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3860,
												"nodeType": "ExpressionStatement",
												"src": "1966:30:18"
											}
										]
									},
									"functionSelector": "55bd683c",
									"id": 3862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStonePrices",
									"nameLocation": "1908:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3850,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1930:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "1923:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stones_$3804",
													"typeString": "enum Marketplace.Stones"
												},
												"typeName": {
													"id": 3849,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3848,
														"name": "Stones",
														"nameLocations": [
															"1923:6:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3804,
														"src": "1923:6:18"
													},
													"referencedDeclaration": 3804,
													"src": "1923:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stones_$3804",
														"typeString": "enum Marketplace.Stones"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3852,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1941:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "1936:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1936:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:26:18"
									},
									"returnParameters": {
										"id": 3854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1956:0:18"
									},
									"scope": 4087,
									"src": "1899:104:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3918,
										"nodeType": "Block",
										"src": "2080:417:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2098:39:18",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3873,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2099:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3875,
																		"indexExpression": {
																			"id": 3874,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3864,
																			"src": "2118:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2099:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3877,
																	"indexExpression": {
																		"id": 3876,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3869,
																		"src": "2123:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2099:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3878,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2129:8:18",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3776,
																"src": "2099:38:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732053746f6e6520497320416c72656164792041637469766521",
															"id": 3880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2138:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475",
																"typeString": "literal_string \"This Stone Is Already Active!\""
															},
															"value": "This Stone Is Already Active!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_865013b0b1c6e4e3fe97b233c76427dcf96f3e9b98e77368831b2e77b2087475",
																"typeString": "literal_string \"This Stone Is Already Active!\""
															}
														],
														"id": 3872,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2090:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2090:80:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3882,
												"nodeType": "ExpressionStatement",
												"src": "2090:80:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3887,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3864,
															"src": "2218:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3888,
																	"name": "tokenID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3757,
																	"src": "2222:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3889,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2230:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2218,
																"src": "2222:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2222:17:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3884,
																	"name": "NFTContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3762,
																	"src": "2189:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3883,
																"name": "IIERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3741,
																"src": "2180:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IIERC721_$3741_$",
																	"typeString": "type(contract IIERC721)"
																}
															},
															"id": 3885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2180:28:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIERC721_$3741",
																"typeString": "contract IIERC721"
															}
														},
														"id": 3886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2209:8:18",
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3740,
														"src": "2180:37:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 3891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3892,
												"nodeType": "ExpressionStatement",
												"src": "2180:60:18"
											},
											{
												"expression": {
													"id": 3911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3893,
																"name": "getUserStoneDetail",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3785,
																"src": "2250:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																}
															},
															"id": 3896,
															"indexExpression": {
																"id": 3894,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3864,
																"src": "2269:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2250:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
															}
														},
														"id": 3897,
														"indexExpression": {
															"id": 3895,
															"name": "_typ",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3869,
															"src": "2274:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stones_$3804",
																"typeString": "enum Marketplace.Stones"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2250:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
															"typeString": "struct Marketplace.stoneDetail storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3899,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3864,
																"src": "2294:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3900,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3864,
																"src": "2298:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3901,
																		"name": "tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3757,
																		"src": "2302:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$2206_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 3902,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2310:7:18",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2218,
																	"src": "2302:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 3903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2302:17:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 3904,
																	"name": "stoneCapAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3799,
																	"src": "2320:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_uint256_$",
																		"typeString": "mapping(enum Marketplace.Stones => uint256)"
																	}
																},
																"id": 3906,
																"indexExpression": {
																	"id": 3905,
																	"name": "_typ",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3869,
																	"src": "2335:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stones_$3804",
																		"typeString": "enum Marketplace.Stones"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2320:20:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3907,
																"name": "_uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3866,
																"src": "2341:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "30",
																"id": 3908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2346:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "74727565",
																"id": 3909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2348:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3898,
															"name": "stoneDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3777,
															"src": "2282:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_stoneDetail_$3777_storage_ptr_$",
																"typeString": "type(struct Marketplace.stoneDetail storage pointer)"
															}
														},
														"id": 3910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2282:71:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stoneDetail_$3777_memory_ptr",
															"typeString": "struct Marketplace.stoneDetail memory"
														}
													},
													"src": "2250:103:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
														"typeString": "struct Marketplace.stoneDetail storage ref"
													}
												},
												"id": 3912,
												"nodeType": "ExpressionStatement",
												"src": "2250:103:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3913,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3757,
															"src": "2363:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2371:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2232,
														"src": "2363:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2206_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2363:19:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3917,
												"nodeType": "ExpressionStatement",
												"src": "2363:19:18"
											}
										]
									},
									"functionSelector": "d420e5cb",
									"id": 3919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintStone",
									"nameLocation": "2018:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3864,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2036:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "2028:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3866,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "2054:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "2040:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2040:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3869,
												"mutability": "mutable",
												"name": "_typ",
												"nameLocation": "2067:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3919,
												"src": "2060:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stones_$3804",
													"typeString": "enum Marketplace.Stones"
												},
												"typeName": {
													"id": 3868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3867,
														"name": "Stones",
														"nameLocations": [
															"2060:6:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3804,
														"src": "2060:6:18"
													},
													"referencedDeclaration": 3804,
													"src": "2060:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stones_$3804",
														"typeString": "enum Marketplace.Stones"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:45:18"
									},
									"returnParameters": {
										"id": 3871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:18"
									},
									"scope": 4087,
									"src": "2009:488:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4005,
										"nodeType": "Block",
										"src": "2554:493:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3928,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2572:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3930,
																		"indexExpression": {
																			"id": 3929,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3921,
																			"src": "2591:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2572:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3932,
																	"indexExpression": {
																		"id": 3931,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3924,
																		"src": "2596:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2572:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3933,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2602:9:18",
																"memberName": "capAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3770,
																"src": "2572:39:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3934,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2615:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3936,
																		"indexExpression": {
																			"id": 3935,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3921,
																			"src": "2634:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2615:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3938,
																	"indexExpression": {
																		"id": 3937,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3924,
																		"src": "2639:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2615:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3939,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2645:6:18",
																"memberName": "points",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3774,
																"src": "2615:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2572:79:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46697273742046696c6c2053746f6e652043617021",
															"id": 3941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2652:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c",
																"typeString": "literal_string \"First Fill Stone Cap!\""
															},
															"value": "First Fill Stone Cap!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c",
																"typeString": "literal_string \"First Fill Stone Cap!\""
															}
														],
														"id": 3927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2564:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:112:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3943,
												"nodeType": "ExpressionStatement",
												"src": "2564:112:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3948,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3921,
															"src": "2726:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3951,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2739:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4087",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4087",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2731:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2731:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2731:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3953,
																		"name": "getUserStoneDetail",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3785,
																		"src": "2746:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																			"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																		}
																	},
																	"id": 3955,
																	"indexExpression": {
																		"id": 3954,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3921,
																		"src": "2765:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2746:23:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																		"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																	}
																},
																"id": 3957,
																"indexExpression": {
																	"id": 3956,
																	"name": "_typ",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3924,
																	"src": "2770:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stones_$3804",
																		"typeString": "enum Marketplace.Stones"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2746:29:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																	"typeString": "struct Marketplace.stoneDetail storage ref"
																}
															},
															"id": 3958,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2776:7:18",
															"memberName": "tokenID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3768,
															"src": "2746:37:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3945,
																	"name": "NFTContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3762,
																	"src": "2693:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3944,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "2686:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 3946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2686:26:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 3947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2713:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "2686:39:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2686:98:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3960,
												"nodeType": "ExpressionStatement",
												"src": "2686:98:18"
											},
											{
												"expression": {
													"id": 3998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3961,
															"name": "listStone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3790,
															"src": "2794:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stoneDetail_$3777_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.stoneDetail storage ref)"
															}
														},
														"id": 3965,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3962,
																	"name": "listedID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3760,
																	"src": "2804:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 3963,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2813:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2218,
																"src": "2804:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 3964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2804:18:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2794:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
															"typeString": "struct Marketplace.stoneDetail storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3967,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3921,
																"src": "2838:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 3970,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2850:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Marketplace_$4087",
																			"typeString": "contract Marketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Marketplace_$4087",
																			"typeString": "contract Marketplace"
																		}
																	],
																	"id": 3969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2842:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2842:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 3971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2842:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3972,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2856:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3974,
																		"indexExpression": {
																			"id": 3973,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3921,
																			"src": "2875:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2856:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3976,
																	"indexExpression": {
																		"id": 3975,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3924,
																		"src": "2880:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2856:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3977,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2886:7:18",
																"memberName": "tokenID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3768,
																"src": "2856:37:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3978,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2894:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3980,
																		"indexExpression": {
																			"id": 3979,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3921,
																			"src": "2913:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2894:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3982,
																	"indexExpression": {
																		"id": 3981,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3924,
																		"src": "2918:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2894:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3983,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2924:9:18",
																"memberName": "capAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3770,
																"src": "2894:39:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3984,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2934:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3986,
																		"indexExpression": {
																			"id": 3985,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3921,
																			"src": "2953:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2934:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3988,
																	"indexExpression": {
																		"id": 3987,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3924,
																		"src": "2958:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2934:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3989,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2964:3:18",
																"memberName": "uri",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3772,
																"src": "2934:33:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3990,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "2968:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 3992,
																		"indexExpression": {
																			"id": 3991,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3921,
																			"src": "2987:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2968:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 3994,
																	"indexExpression": {
																		"id": 3993,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3924,
																		"src": "2992:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2968:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 3995,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2998:6:18",
																"memberName": "points",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3774,
																"src": "2968:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3005:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3966,
															"name": "stoneDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3777,
															"src": "2826:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_stoneDetail_$3777_storage_ptr_$",
																"typeString": "type(struct Marketplace.stoneDetail storage pointer)"
															}
														},
														"id": 3997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2826:184:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stoneDetail_$3777_memory_ptr",
															"typeString": "struct Marketplace.stoneDetail memory"
														}
													},
													"src": "2794:216:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
														"typeString": "struct Marketplace.stoneDetail storage ref"
													}
												},
												"id": 3999,
												"nodeType": "ExpressionStatement",
												"src": "2794:216:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4000,
															"name": "listedID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3760,
															"src": "3020:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4002,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3029:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2232,
														"src": "3020:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2206_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4004,
												"nodeType": "ExpressionStatement",
												"src": "3020:20:18"
											}
										]
									},
									"functionSelector": "6811e177",
									"id": 4006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "list_Stone",
									"nameLocation": "2511:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3921,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2530:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 4006,
												"src": "2522:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3924,
												"mutability": "mutable",
												"name": "_typ",
												"nameLocation": "2541:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 4006,
												"src": "2534:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stones_$3804",
													"typeString": "enum Marketplace.Stones"
												},
												"typeName": {
													"id": 3923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3922,
														"name": "Stones",
														"nameLocations": [
															"2534:6:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3804,
														"src": "2534:6:18"
													},
													"referencedDeclaration": 3804,
													"src": "2534:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stones_$3804",
														"typeString": "enum Marketplace.Stones"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:25:18"
									},
									"returnParameters": {
										"id": 3926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2554:0:18"
									},
									"scope": 4087,
									"src": "2502:545:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4085,
										"nodeType": "Block",
										"src": "3107:452:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 4015,
																	"name": "listStone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3790,
																	"src": "3125:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stoneDetail_$3777_storage_$",
																		"typeString": "mapping(uint256 => struct Marketplace.stoneDetail storage ref)"
																	}
																},
																"id": 4019,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 4016,
																			"name": "listedID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3760,
																			"src": "3135:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$2206_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 4017,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3144:7:18",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2218,
																		"src": "3135:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 4018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3135:18:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3125:29:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																	"typeString": "struct Marketplace.stoneDetail storage ref"
																}
															},
															"id": 4020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3155:8:18",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3776,
															"src": "3125:38:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46697273742046696c6c2053746f6e652043617021",
															"id": 4021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3164:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c",
																"typeString": "literal_string \"First Fill Stone Cap!\""
															},
															"value": "First Fill Stone Cap!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_523857366a4bd035e8761a2c1ddc39d4ceeaa225870beb175459bea67567f11c",
																"typeString": "literal_string \"First Fill Stone Cap!\""
															}
														],
														"id": 4014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3117:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:71:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4023,
												"nodeType": "ExpressionStatement",
												"src": "3117:71:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4028,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4008,
															"src": "3238:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4031,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3251:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$4087",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$4087",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 4030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3243:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4029,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3243:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 4032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3243:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 4033,
																		"name": "getUserStoneDetail",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3785,
																		"src": "3258:18:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																			"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																		}
																	},
																	"id": 4035,
																	"indexExpression": {
																		"id": 4034,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4008,
																		"src": "3277:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3258:23:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																		"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																	}
																},
																"id": 4037,
																"indexExpression": {
																	"id": 4036,
																	"name": "_typ",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4011,
																	"src": "3282:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stones_$3804",
																		"typeString": "enum Marketplace.Stones"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3258:29:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																	"typeString": "struct Marketplace.stoneDetail storage ref"
																}
															},
															"id": 4038,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3288:7:18",
															"memberName": "tokenID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3768,
															"src": "3258:37:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4025,
																	"name": "NFTContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3762,
																	"src": "3205:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4024,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "3198:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1762_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 4026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3198:26:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1762",
																"typeString": "contract ERC721"
															}
														},
														"id": 4027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3225:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1070,
														"src": "3198:39:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 4039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:98:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4040,
												"nodeType": "ExpressionStatement",
												"src": "3198:98:18"
											},
											{
												"expression": {
													"id": 4078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4041,
															"name": "listStone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3790,
															"src": "3306:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_stoneDetail_$3777_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.stoneDetail storage ref)"
															}
														},
														"id": 4045,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 4042,
																	"name": "listedID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3760,
																	"src": "3316:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2206_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 4043,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3325:7:18",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2218,
																"src": "3316:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2206_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 4044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3316:18:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3306:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
															"typeString": "struct Marketplace.stoneDetail storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4047,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4008,
																"src": "3350:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"id": 4050,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3362:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Marketplace_$4087",
																			"typeString": "contract Marketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Marketplace_$4087",
																			"typeString": "contract Marketplace"
																		}
																	],
																	"id": 4049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3354:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4048,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3354:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 4051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3354:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4052,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "3368:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 4054,
																		"indexExpression": {
																			"id": 4053,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4008,
																			"src": "3387:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3368:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 4056,
																	"indexExpression": {
																		"id": 4055,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4011,
																		"src": "3392:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3368:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 4057,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3398:7:18",
																"memberName": "tokenID",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3768,
																"src": "3368:37:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4058,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "3406:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 4060,
																		"indexExpression": {
																			"id": 4059,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4008,
																			"src": "3425:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3406:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 4062,
																	"indexExpression": {
																		"id": 4061,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4011,
																		"src": "3430:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3406:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 4063,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3436:9:18",
																"memberName": "capAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3770,
																"src": "3406:39:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4064,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "3446:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 4066,
																		"indexExpression": {
																			"id": 4065,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4008,
																			"src": "3465:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3446:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 4068,
																	"indexExpression": {
																		"id": 4067,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4011,
																		"src": "3470:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3446:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 4069,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3476:3:18",
																"memberName": "uri",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3772,
																"src": "3446:33:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 4070,
																			"name": "getUserStoneDetail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3785,
																			"src": "3480:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref))"
																			}
																		},
																		"id": 4072,
																		"indexExpression": {
																			"id": 4071,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4008,
																			"src": "3499:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3480:23:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_Stones_$3804_$_t_struct$_stoneDetail_$3777_storage_$",
																			"typeString": "mapping(enum Marketplace.Stones => struct Marketplace.stoneDetail storage ref)"
																		}
																	},
																	"id": 4074,
																	"indexExpression": {
																		"id": 4073,
																		"name": "_typ",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4011,
																		"src": "3504:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stones_$3804",
																			"typeString": "enum Marketplace.Stones"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3480:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
																		"typeString": "struct Marketplace.stoneDetail storage ref"
																	}
																},
																"id": 4075,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3510:6:18",
																"memberName": "points",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3774,
																"src": "3480:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 4076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3517:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 4046,
															"name": "stoneDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3777,
															"src": "3338:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_stoneDetail_$3777_storage_ptr_$",
																"typeString": "type(struct Marketplace.stoneDetail storage pointer)"
															}
														},
														"id": 4077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3338:184:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stoneDetail_$3777_memory_ptr",
															"typeString": "struct Marketplace.stoneDetail memory"
														}
													},
													"src": "3306:216:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stoneDetail_$3777_storage",
														"typeString": "struct Marketplace.stoneDetail storage ref"
													}
												},
												"id": 4079,
												"nodeType": "ExpressionStatement",
												"src": "3306:216:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4080,
															"name": "listedID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3760,
															"src": "3532:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2206_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 4082,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3541:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2232,
														"src": "3532:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2206_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2206_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 4083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3532:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4084,
												"nodeType": "ExpressionStatement",
												"src": "3532:20:18"
											}
										]
									},
									"functionSelector": "aa53d139",
									"id": 4086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy_Stone",
									"nameLocation": "3065:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4008,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3083:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 4086,
												"src": "3075:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4011,
												"mutability": "mutable",
												"name": "_typ",
												"nameLocation": "3094:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 4086,
												"src": "3087:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stones_$3804",
													"typeString": "enum Marketplace.Stones"
												},
												"typeName": {
													"id": 4010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4009,
														"name": "Stones",
														"nameLocations": [
															"3087:6:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3804,
														"src": "3087:6:18"
													},
													"referencedDeclaration": 3804,
													"src": "3087:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stones_$3804",
														"typeString": "enum Marketplace.Stones"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:25:18"
									},
									"returnParameters": {
										"id": 4013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:18"
									},
									"scope": 4087,
									"src": "3056:503:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4088,
							"src": "591:2970:18",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:3529:18"
				},
				"id": 18
			}
		}
	}
}