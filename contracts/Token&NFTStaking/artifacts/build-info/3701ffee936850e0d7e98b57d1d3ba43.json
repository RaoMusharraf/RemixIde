{
	"id": "3701ffee936850e0d7e98b57d1d3ba43",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Token&NFTStaking/TokenNFT1.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Creator: andreitoma8\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\ncontract ERC20Stakeable is Ownable,IERC721Receiver{\n    using SafeERC20 for IERC20;\n    address public ERC721address;\n    address public ERC20Address;\n    uint public TotalToken;\n    uint rate;\n    struct Staker {\n        uint256 deposited;\n        uint256 timestake;\n        bool check; \n    }\n    struct StakerNFT {\n        uint256 userRate;\n        uint256 tokenId;\n        bool check; \n    }\n    mapping (address => Staker) public Details;\n    mapping (address => uint) public Reward;\n    mapping (address => StakerNFT ) public UserRate;\n    /*\n    ~~~~~~~~~~~~~~~Constructor function~~~~~~~~~~~~~~~\n   1. This function is called when contract is first deployed.\n   2. It takes three parameters:\n        a. ER721 Token Address (Address of ER721 Token Contract)\n        b. Rate Percentage (Percentage value of rate i.e., Interest percentage)\n        c. ER720 Token Address (Address of ER720 Token Contract)\n    */\n    constructor(address _ERC721address, uint256 _ratePersentage, address _ERC20Address) {\n        ERC721address = _ERC721address;\n        rate = _ratePersentage;\n        ERC20Address = _ERC20Address;\n    }\n    /*\n    ~~~~~~~~~~~~~Admin Add Token Function~~~~~~~~~~~~~~~\n    1. Owner add tokens into contract with this function\n    2. These tokens are used as rewards for staking\n    3. Only Owner can call this function\n    */\n    function AdminAddToken(uint _amount) public onlyOwner{\n        TotalToken += _amount;\n        IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount);\n    }\n    /*\n    ~~~~~~~~~~~~~Admin WithDraw Token Function~~~~~~~~~~~~~~~\n    1. Admin withdraws his/her desired amount of token from contract.\n    2. Only Owner can call this function\n    */\n    function AdminWithDrawToken(uint amount,address _to) public onlyOwner{\n        IERC20(ERC20Address).safeTransfer(_to, amount);\n    }\n    /*\n    ~~~~~~~~~~~~~Utilization Function~~~~~~~~~~~~~~~\n    1. Owner call this function to check remaining percentage of tokens left in this contract.\n    2. Only Owner can call this function\n    */\n    function Utilization() public view returns(uint256) {\n        uint Persentage = (IERC20(ERC20Address).balanceOf(address(this)) * 100)/TotalToken;\n        return Persentage;\n    }\n    /*   ~~~~~~~~~~~~~Deposit Function~~~~~~~~~~~~~~~\n    1. This function has one parameter.\n    2. This function is used to deposit desired amount of tokens in this contract by user.\n    3. If user already deposited some tokens then he/she must has to withdraw all tokens first.\n    */\n    function Deposit(uint256 _amount) public {\n        if(!Details[msg.sender].check){\n            TotalToken += _amount;\n            Details[msg.sender] = Staker(_amount,block.timestamp,true);\n            IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount);\n        }\n        else{\n            TotalToken += _amount;\n            Reward[msg.sender] +=  calculateIntrest(msg.sender);\n            Details[msg.sender] = Staker(Details[msg.sender].deposited + _amount,block.timestamp,true);\n            IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount);\n        }\n    }\n    /*   ~~~~~~~~~~~~~Withdraw Function~~~~~~~~~~~~~~~\n    1. This function is used to withdraw tokens.\n    2. User will call this function to withdraw all tokens from this contract.\n    */\n    function Withdraw() public {\n        require(Details[msg.sender].check,\"Please First Stake\");\n        if (UserRate[msg.sender].check){\n            uint amount = Details[msg.sender].deposited;\n            uint newval = calculateIntrest(msg.sender);\n            IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,UserRate[msg.sender].tokenId,\"\");\n            IERC20(ERC20Address).transfer(msg.sender, amount + newval + Reward[msg.sender]);\n            delete UserRate[msg.sender];\n            delete Reward[msg.sender];\n            delete Details[msg.sender];\n        }\n        else{\n            uint amount = Details[msg.sender].deposited;\n            uint newval = calculateIntrest(msg.sender);\n            IERC20(ERC20Address).transfer(msg.sender, amount + newval + Reward[msg.sender]);\n            delete Reward[msg.sender];\n            delete Details[msg.sender];\n        }    \n    }\n     /*   ~~~~~~~~~~~~~showReward Function~~~~~~~~~~~~~~~\n    1. This function is used to show rewards.\n    2. User will call this function to check his/her total generated rewards\n    */\n    function showReward(address _to) public view returns(uint result)\n    {\n        if (UserRate[_to].check)\n        {\n            uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            result = TotalReward + Details[_to].deposited;\n            return result/1000000000000000000;\n\n        }\n        else\n        {\n            uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            result = TotalReward + Details[_to].deposited;\n            return result/1000000000000000000;\n        }\n        \n    }\n    /*   ~~~~~~~~~~~~~CalculateIntrest Function~~~~~~~~~~~~~~~\n    1. This function is used to calculate total reward generated.\n    2. Function will decide how much reward is generated after every minute by adding PercentageRate of deposited tokens .\n    */\n    function calculateIntrest(address _to) public view returns(uint256){\n        if (UserRate[_to].check)\n        {\n            uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            return TotalReward;\n        }\n        else\n        {\n            uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            return TotalReward;\n        }\n    }\n    /*   ~~~~~~~~~~~~~UpdateERC721 Function~~~~~~~~~~~~~~~\n    1. This function is used update address of ERC721 token address.\n    2. Only Owner can call this function.\n    */\n    function UpdateERC721(address _ERC721address) public onlyOwner{\n        ERC721address = _ERC721address;\n    }\n    /*~~~~~~~~~~~~~UpdateERC20 Function~~~~~~~~~~~~~~~\n    1. This function is used update address of ERC20 token address.\n    2. Only Owner can call this function.\n    */\n    function UpdateERC20 ( address _ERC20Address) public onlyOwner{\n        ERC20Address = _ERC20Address;\n    }\n    /*~~~~~~~~~~~~~UpdateRatePersentage Function~~~~~~~~~~~~~~~\n    1. This function is used update Percentage Rate of rewards.\n    2. Only Owner can call this function.\n    */\n    function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{\n        rate = _ratePersentage;\n    }\n    /*~~~~~~~~~~~~~DepositNFT Function~~~~~~~~~~~~~~~\n    1. This function is used to deposit new token and boost the current percentage rate\n    2. This function takes two parameters i.e., Token Id and New Boosted Percentage Rate\n    */\n    function DepositNFT(uint256 tokenIds,uint _rate) public {\n        require(Details[msg.sender].check,\"First Deposit Tokens\");\n        require(!UserRate[msg.sender].check,\"Please Unstake your deposited NFT\");\n        UserRate[msg.sender] = StakerNFT(_rate,tokenIds,true); \n        IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),tokenIds,\"\");\n    }\n    /*~~~~~~~~~~~~~WithdrawNFT Function~~~~~~~~~~~~~~~\n    1. This function is used to withdraw token\n    2. This function takes one parameter\n    3. User must have one nft staked before withdrawing.\n    */\n    function withdrawNFT(uint256 tokenIds) public {\n        require(UserRate[msg.sender].check,\"Please First Stake NFTs\");\n        IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,tokenIds,\"\");\n        delete UserRate[msg.sender];\n    }\n    function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xCA CHAINID 0xC7 PUSH10 0x578F662CA8CBF3C19790 MSTORE SWAP12 NUMBER 0xBD GASLIMIT 0xDA CREATE2 DUP1 DIV 0x2F NOT 0xDA EXTCODECOPY 0xE4 0x25 PUSH14 0x4464736F6C634300081300330000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xCA CHAINID 0xC7 PUSH10 0x578F662CA8CBF3C19790 MSTORE SWAP12 NUMBER 0xBD GASLIMIT 0xDA CREATE2 DUP1 DIV 0x2F NOT 0xDA EXTCODECOPY 0xE4 0x25 PUSH14 0x4464736F6C634300081300330000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Token&NFTStaking/TokenNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT COINBASE 0xB8 0xB1 SWAP11 PUSH9 0xDBC2B62EEC3EAA5CB0 CALL PUSH32 0x7CD58275E3E0E89F9B9D791094C83164736F6C63430008130033000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT COINBASE 0xB8 0xB1 SWAP11 PUSH9 0xDBC2B62EEC3EAA5CB0 CALL PUSH32 0x7CD58275E3E0E89F9B9D791094C83164736F6C63430008130033000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Token&NFTStaking/TokenNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Token&NFTStaking/TokenNFT1.sol": {
				"ERC20Stakeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC721address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ratePersentage",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ERC20Address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "AdminAddToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "AdminWithDrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "DepositNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Details",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "deposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestake",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "check",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERC20Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERC721address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Reward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC20Address",
									"type": "address"
								}
							],
							"name": "UpdateERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC721address",
									"type": "address"
								}
							],
							"name": "UpdateERC721",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratePersentage",
									"type": "uint256"
								}
							],
							"name": "UpdateRatePersentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "UserRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "userRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "check",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Utilization",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "calculateIntrest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "showReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIds",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":348:8432  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1269:1470  constructor(address _ERC721address, uint256 _ratePersentage, address _ERC20Address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1379:1393  _ERC721address */\n  dup3\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1363:1376  ERC721address */\n  0x01\n  0x00\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1363:1393  ERC721address = _ERC721address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1410:1425  _ratePersentage */\n  dup2\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1403:1407  rate */\n  0x04\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1403:1425  rate = _ratePersentage */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1450:1463  _ERC20Address */\n  dup1\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1435:1447  ERC20Address */\n  0x02\n  0x00\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1435:1463  ERC20Address = _ERC20Address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1269:1470  constructor(address _ERC721address, uint256 _ratePersentage, address _ERC20Address) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":348:8432  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_39\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_40:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_42\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_45\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1326:1445   */\ntag_44:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_46\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_21\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_47\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_24\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_48\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":348:8432  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":348:8432  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc45af5d8\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc45af5d8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe4458b30\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe88cc2be\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xee0106d2\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf89d832f\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x934ed772\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa6021ace\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb7171a2e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc0cd40ee\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x57488064\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x57488064\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x57ea89b6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7b2f247f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x866e58af\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8b73e331\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x023245d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x275bd33f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f601972\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4d6ce1e5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8005:8254  function withdrawNFT(uint256 tokenIds) public {... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8259:8430  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6788:6895  function UpdateERC20 ( address _ERC20Address) public onlyOwner{... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":503:525  uint public TotalToken */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2873:3482  function Deposit(uint256 _amount) public {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":796:835  mapping (address => uint) public Reward */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3677:4578  function Withdraw() public {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2402:2580  function Utilization() public view returns(uint256) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2062:2194  function AdminWithDrawToken(uint amount,address _to) public onlyOwner{... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5758:6320  function calculateIntrest(address _to) public view returns(uint256){... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7430:7793  function DepositNFT(uint256 tokenIds,uint _rate) public {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":470:497  address public ERC20Address */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":436:464  address public ERC721address */\n    tag_17:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1696:1870  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4771:5494  function showReward(address _to) public view returns(uint result)... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":841:888  mapping (address => StakerNFT ) public UserRate */\n    tag_20:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":748:790  mapping (address => Staker) public Details */\n    tag_21:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6502:6611  function UpdateERC721(address _ERC721address) public onlyOwner{... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7077:7187  function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{... */\n    tag_24:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8005:8254  function withdrawNFT(uint256 tokenIds) public {... */\n    tag_31:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8069:8077  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8069:8089  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8078:8088  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8069:8089  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8069:8095  UserRate[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8061:8122  require(UserRate[msg.sender].check,\"Please First Stake NFTs\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8140:8153  ERC721address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8132:8171  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8180:8184  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8187:8197  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8198:8206  tokenIds */\n      dup5\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8132:8210  IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,tokenIds,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8227:8235  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8227:8247  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8236:8246  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8227:8247  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8220:8247  delete UserRate[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8005:8254  function withdrawNFT(uint256 tokenIds) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8259:8430  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_35:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8357:8363  bytes4 */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8382:8423  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8375:8423  return IERC721Receiver.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":8259:8430  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6788:6895  function UpdateERC20 ( address _ERC20Address) public onlyOwner{... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6875:6888  _ERC20Address */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6860:6872  ERC20Address */\n      0x02\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6860:6888  ERC20Address = _ERC20Address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6788:6895  function UpdateERC20 ( address _ERC20Address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":503:525  uint public TotalToken */\n    tag_43:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2873:3482  function Deposit(uint256 _amount) public {... */\n    tag_48:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2928:2935  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2928:2947  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2936:2946  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2928:2947  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2928:2953  Details[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2924:3476  if(!Details[msg.sender].check){... */\n      tag_122\n      jumpi\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2982:2989  _amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2968:2978  TotalToken */\n      0x03\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2968:2989  TotalToken += _amount */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3025:3061  Staker(_amount,block.timestamp,true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3032:3039  _amount */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3025:3061  Staker(_amount,block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3040:3055  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3025:3061  Staker(_amount,block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3056:3060  true */\n      0x01\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3025:3061  Staker(_amount,block.timestamp,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3003:3010  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3003:3022  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3011:3021  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3003:3022  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3003:3061  Details[msg.sender] = Staker(_amount,block.timestamp,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3075:3149  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount) */\n      tag_125\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3113:3123  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3133:3137  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3141:3148  _amount */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3082:3094  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3075:3112  IERC20(ERC20Address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3075:3149  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2924:3476  if(!Details[msg.sender].check){... */\n      jump(tag_127)\n    tag_122:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3201:3208  _amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3187:3197  TotalToken */\n      0x03\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3187:3208  TotalToken += _amount */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3245:3273  calculateIntrest(msg.sender) */\n      tag_129\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3262:3272  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3245:3261  calculateIntrest */\n      tag_66\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3245:3273  calculateIntrest(msg.sender) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3222:3228  Reward */\n      0x06\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3222:3240  Reward[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3229:3239  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3222:3240  Reward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3222:3273  Reward[msg.sender] +=  calculateIntrest(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3309:3377  Staker(Details[msg.sender].deposited + _amount,block.timestamp,true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3348:3355  _amount */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3316:3323  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3316:3335  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3324:3334  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3316:3335  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3316:3345  Details[msg.sender].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3316:3355  Details[msg.sender].deposited + _amount */\n      tag_131\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_131:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3309:3377  Staker(Details[msg.sender].deposited + _amount,block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3356:3371  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3309:3377  Staker(Details[msg.sender].deposited + _amount,block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3372:3376  true */\n      0x01\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3309:3377  Staker(Details[msg.sender].deposited + _amount,block.timestamp,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3287:3294  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3287:3306  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3295:3305  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3287:3306  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3287:3377  Details[msg.sender] = Staker(Details[msg.sender].deposited + _amount,block.timestamp,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3391:3465  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount) */\n      tag_132\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3429:3439  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3449:3453  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3457:3464  _amount */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3398:3410  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3391:3428  IERC20(ERC20Address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3391:3465  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2924:3476  if(!Details[msg.sender].check){... */\n    tag_127:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2873:3482  function Deposit(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":796:835  mapping (address => uint) public Reward */\n    tag_51:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3677:4578  function Withdraw() public {... */\n    tag_54:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3722:3729  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3722:3741  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3730:3740  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3722:3741  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3722:3747  Details[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3714:3769  require(Details[msg.sender].check,\"Please First Stake\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3783:3791  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3783:3803  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3792:3802  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3783:3803  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3783:3809  UserRate[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3779:4568  if (UserRate[msg.sender].check){... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3824:3835  uint amount */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3838:3845  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3838:3857  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3846:3856  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3838:3857  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3838:3867  Details[msg.sender].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3824:3867  uint amount = Details[msg.sender].deposited */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3881:3892  uint newval */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3895:3923  calculateIntrest(msg.sender) */\n      tag_138\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3912:3922  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3895:3911  calculateIntrest */\n      tag_66\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3895:3923  calculateIntrest(msg.sender) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3881:3923  uint newval = calculateIntrest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3945:3958  ERC721address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3937:3976  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3985:3989  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3992:4002  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4003:4011  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4003:4023  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4012:4022  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4003:4023  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4003:4031  UserRate[msg.sender].tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3937:4035  IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,UserRate[msg.sender].tokenId,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_139:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4056:4068  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4049:4078  IERC20(ERC20Address).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4079:4089  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4109:4115  Reward */\n      0x06\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4109:4127  Reward[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4116:4126  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4109:4127  Reward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4100:4106  newval */\n      dup5\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4091:4097  amount */\n      dup7\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4091:4106  amount + newval */\n      tag_143\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_143:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4091:4127  amount + newval + Reward[msg.sender] */\n      tag_144\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_144:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4049:4128  IERC20(ERC20Address).transfer(msg.sender, amount + newval + Reward[msg.sender]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4149:4157  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4149:4169  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4158:4168  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4149:4169  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4142:4169  delete UserRate[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4190:4196  Reward */\n      0x06\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4190:4208  Reward[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4197:4207  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4190:4208  Reward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4183:4208  delete Reward[msg.sender] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4229:4236  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4229:4248  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4237:4247  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4229:4248  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4222:4248  delete Details[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3810:4259  {... */\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3779:4568  if (UserRate[msg.sender].check){... */\n      jump(tag_151)\n    tag_137:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4286:4297  uint amount */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4300:4307  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4300:4319  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4308:4318  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4300:4319  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4300:4329  Details[msg.sender].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4286:4329  uint amount = Details[msg.sender].deposited */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4343:4354  uint newval */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4357:4385  calculateIntrest(msg.sender) */\n      tag_152\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4374:4384  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4357:4373  calculateIntrest */\n      tag_66\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4357:4385  calculateIntrest(msg.sender) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4343:4385  uint newval = calculateIntrest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4406:4418  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4399:4428  IERC20(ERC20Address).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4429:4439  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4459:4465  Reward */\n      0x06\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4459:4477  Reward[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4466:4476  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4459:4477  Reward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4450:4456  newval */\n      dup5\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4441:4447  amount */\n      dup7\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4441:4456  amount + newval */\n      tag_153\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4441:4477  amount + newval + Reward[msg.sender] */\n      tag_154\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_154:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4399:4478  IERC20(ERC20Address).transfer(msg.sender, amount + newval + Reward[msg.sender]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_158:\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4499:4505  Reward */\n      0x06\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4499:4517  Reward[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4506:4516  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4499:4517  Reward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4492:4517  delete Reward[msg.sender] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4538:4545  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4538:4557  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4546:4556  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4538:4557  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4531:4557  delete Details[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4272:4568  {... */\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3779:4568  if (UserRate[msg.sender].check){... */\n    tag_151:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":3677:4578  function Withdraw() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2402:2580  function Utilization() public view returns(uint256) {... */\n    tag_58:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2445:2452  uint256 */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2464:2479  uint Persentage */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2536:2546  TotalToken */\n      sload(0x03)\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2531:2534  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2490:2502  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2483:2513  IERC20(ERC20Address).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2522:2526  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2483:2528  IERC20(ERC20Address).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2483:2534  IERC20(ERC20Address).balanceOf(address(this)) * 100 */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2482:2546  (IERC20(ERC20Address).balanceOf(address(this)) * 100)/TotalToken */\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2464:2546  uint Persentage = (IERC20(ERC20Address).balanceOf(address(this)) * 100)/TotalToken */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2563:2573  Persentage */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2556:2573  return Persentage */\n      swap2\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2402:2580  function Utilization() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2062:2194  function AdminWithDrawToken(uint amount,address _to) public onlyOwner{... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2141:2187  IERC20(ERC20Address).safeTransfer(_to, amount) */\n      tag_177\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2175:2178  _to */\n      dup2\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2180:2186  amount */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2148:2160  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2141:2174  IERC20(ERC20Address).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_178\n      swap1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2141:2187  IERC20(ERC20Address).safeTransfer(_to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":2062:2194  function AdminWithDrawToken(uint amount,address _to) public onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5758:6320  function calculateIntrest(address _to) public view returns(uint256){... */\n    tag_66:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5817:5824  uint256 */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5839:5847  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5839:5852  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5848:5851  _to */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5839:5852  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5839:5858  UserRate[_to].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5835:6314  if (UserRate[_to].check)... */\n      iszero\n      tag_180\n      jumpi\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5882:5896  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5995:5997  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5971:5978  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5971:5983  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5979:5982  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5971:5983  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5971:5993  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5953:5968  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5953:5993  block.timestamp - Details[_to].timestake */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5952:5997  (block.timestamp - Details[_to].timestake)/60 */\n      tag_183\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_183:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5925:5933  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5925:5938  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5934:5937  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5925:5938  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5925:5947  UserRate[_to].userRate */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5900:5907  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5900:5912  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5908:5911  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5900:5912  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5900:5922  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5900:5947  Details[_to].deposited * UserRate[_to].userRate */\n      tag_184\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_184:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5899:5998  (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_185\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_185:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5882:5998  uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6012:6028  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6043:6046  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6031:6040  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6031:6046  RewardEst / 100 */\n      tag_186\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_186:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6012:6046  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6067:6078  TotalReward */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6060:6078  return TotalReward */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_179)\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5835:6314  if (UserRate[_to].check)... */\n    tag_180:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6125:6139  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6220:6222  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6196:6203  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6196:6208  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6204:6207  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6196:6208  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6196:6218  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6178:6193  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6178:6218  block.timestamp - Details[_to].timestake */\n      tag_188\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_188:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6177:6222  (block.timestamp - Details[_to].timestake)/60 */\n      tag_189\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_189:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6168:6172  rate */\n      sload(0x04)\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6143:6150  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6143:6155  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6151:6154  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6143:6155  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6143:6165  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6143:6172  Details[_to].deposited * rate */\n      tag_190\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_190:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6142:6223  (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_191\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_191:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6125:6223  uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6237:6253  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6268:6271  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6256:6265  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6256:6271  RewardEst / 100 */\n      tag_192\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_192:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6237:6271  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6292:6303  TotalReward */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6285:6303  return TotalReward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5758:6320  function calculateIntrest(address _to) public view returns(uint256){... */\n    tag_179:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7430:7793  function DepositNFT(uint256 tokenIds,uint _rate) public {... */\n    tag_75:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7504:7511  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7504:7523  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7512:7522  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7504:7523  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7504:7529  Details[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7496:7553  require(Details[msg.sender].check,\"First Deposit Tokens\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7572:7580  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7572:7592  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7581:7591  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7572:7592  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7572:7598  UserRate[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7571:7598  !UserRate[msg.sender].check */\n      iszero\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7563:7635  require(!UserRate[msg.sender].check,\"Please Unstake your deposited NFT\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7668:7698  StakerNFT(_rate,tokenIds,true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7678:7683  _rate */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7668:7698  StakerNFT(_rate,tokenIds,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7684:7692  tokenIds */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7668:7698  StakerNFT(_rate,tokenIds,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7693:7697  true */\n      0x01\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7668:7698  StakerNFT(_rate,tokenIds,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7645:7653  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7645:7665  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7654:7664  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7645:7665  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7645:7698  UserRate[msg.sender] = StakerNFT(_rate,tokenIds,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7717:7730  ERC721address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7709:7748  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7749:7759  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7768:7772  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7774:7782  tokenIds */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7709:7786  IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),tokenIds,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_201:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7430:7793  function DepositNFT(uint256 tokenIds,uint _rate) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":470:497  address public ERC20Address */\n    tag_77:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":436:464  address public ERC721address */\n    tag_80:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1696:1870  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1773:1780  _amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1759:1769  TotalToken */\n      0x03\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1759:1780  TotalToken += _amount */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1790:1863  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      tag_209\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1828:1838  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1848:1852  this */\n      address\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1855:1862  _amount */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1797:1809  ERC20Address */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1790:1827  IERC20(ERC20Address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1790:1863  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":1696:1870  function AdminAddToken(uint _amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4771:5494  function showReward(address _to) public view returns(uint result)... */\n    tag_87:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4824:4835  uint result */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4855:4863  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4855:4868  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4864:4867  _to */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4855:4868  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4855:4874  UserRate[_to].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4851:5479  if (UserRate[_to].check)... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4898:4912  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5011:5013  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4987:4994  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4987:4999  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4995:4998  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4987:4999  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4987:5009  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4969:4984  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4969:5009  block.timestamp - Details[_to].timestake */\n      tag_212\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_212:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4968:5013  (block.timestamp - Details[_to].timestake)/60 */\n      tag_213\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_213:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4941:4949  UserRate */\n      0x07\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4941:4954  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4950:4953  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4941:4954  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4941:4963  UserRate[_to].userRate */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4916:4923  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4916:4928  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4924:4927  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4916:4928  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4916:4938  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4916:4963  Details[_to].deposited * UserRate[_to].userRate */\n      tag_214\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_214:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4915:5014  (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_215\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_215:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4898:5014  uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5028:5044  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5059:5062  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5047:5056  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5047:5062  RewardEst / 100 */\n      tag_216\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_216:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5028:5062  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5099:5106  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5099:5111  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5107:5110  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5099:5111  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5099:5121  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5085:5096  TotalReward */\n      dup2\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5085:5121  TotalReward + Details[_to].deposited */\n      tag_217\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_217:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5076:5121  result = TotalReward + Details[_to].deposited */\n      swap3\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5149:5168  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5142:5148  result */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5142:5168  result/1000000000000000000 */\n      tag_218\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_218:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5135:5168  return result/1000000000000000000 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_210)\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4851:5479  if (UserRate[_to].check)... */\n    tag_211:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5216:5230  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5311:5313  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5287:5294  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5287:5299  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5295:5298  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5287:5299  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5287:5309  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5269:5284  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5269:5309  block.timestamp - Details[_to].timestake */\n      tag_220\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_220:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5268:5313  (block.timestamp - Details[_to].timestake)/60 */\n      tag_221\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_221:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5259:5263  rate */\n      sload(0x04)\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5234:5241  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5234:5246  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5242:5245  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5234:5246  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5234:5256  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5234:5263  Details[_to].deposited * rate */\n      tag_222\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_222:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5233:5314  (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_223\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_223:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5216:5314  uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5328:5344  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5359:5362  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5347:5356  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5347:5362  RewardEst / 100 */\n      tag_224\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_224:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5328:5362  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5399:5406  Details */\n      0x05\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5399:5411  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5407:5410  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5399:5411  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5399:5421  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5385:5396  TotalReward */\n      dup2\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5385:5421  TotalReward + Details[_to].deposited */\n      tag_225\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_225:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5376:5421  result = TotalReward + Details[_to].deposited */\n      swap3\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5449:5468  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5442:5448  result */\n      dup4\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5442:5468  result/1000000000000000000 */\n      tag_226\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_226:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":5435:5468  return result/1000000000000000000 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":4771:5494  function showReward(address _to) public view returns(uint result)... */\n    tag_210:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":841:888  mapping (address => StakerNFT ) public UserRate */\n    tag_91:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":748:790  mapping (address => Staker) public Details */\n    tag_96:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6502:6611  function UpdateERC721(address _ERC721address) public onlyOwner{... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6590:6604  _ERC721address */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6574:6587  ERC721address */\n      0x01\n      0x00\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6574:6604  ERC721address = _ERC721address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":6502:6611  function UpdateERC721(address _ERC721address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7077:7187  function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7165:7180  _ratePersentage */\n      dup1\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7158:7162  rate */\n      0x04\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7158:7180  rate = _ratePersentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/TokenNFT1.sol\":7077:7187  function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_249\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_255\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_259\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_276\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_275)\n    tag_276:\n      0x60\n      swap2\n      pop\n    tag_275:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_282\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_279)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_288\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_289\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_279:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_297:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_298:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_299:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_300:\n        /* \"#utility.yul\":490:514   */\n      tag_356\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_299\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_357:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_301:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_359\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_300\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_30:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_362\n      tag_297\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":766:885   */\n    tag_361:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_363\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_301\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_302:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_303:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_366\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_302\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_304:\n        /* \"#utility.yul\":1332:1356   */\n      tag_368\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_303\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_369:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_305:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_371\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_304\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1649   */\n    tag_306:\n        /* \"#utility.yul\":1641:1642   */\n      0x00\n        /* \"#utility.yul\":1638:1639   */\n      dup1\n        /* \"#utility.yul\":1631:1643   */\n      revert\n        /* \"#utility.yul\":1655:1772   */\n    tag_307:\n        /* \"#utility.yul\":1764:1765   */\n      0x00\n        /* \"#utility.yul\":1761:1762   */\n      dup1\n        /* \"#utility.yul\":1754:1766   */\n      revert\n        /* \"#utility.yul\":1778:1895   */\n    tag_308:\n        /* \"#utility.yul\":1887:1888   */\n      0x00\n        /* \"#utility.yul\":1884:1885   */\n      dup1\n        /* \"#utility.yul\":1877:1889   */\n      revert\n        /* \"#utility.yul\":1914:2466   */\n    tag_309:\n        /* \"#utility.yul\":1971:1979   */\n      0x00\n        /* \"#utility.yul\":1981:1987   */\n      dup1\n        /* \"#utility.yul\":2031:2034   */\n      dup4\n        /* \"#utility.yul\":2024:2028   */\n      0x1f\n        /* \"#utility.yul\":2016:2022   */\n      dup5\n        /* \"#utility.yul\":2012:2029   */\n      add\n        /* \"#utility.yul\":2008:2035   */\n      slt\n        /* \"#utility.yul\":1998:2120   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_377\n      tag_306\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1998:2120   */\n    tag_376:\n        /* \"#utility.yul\":2152:2158   */\n      dup3\n        /* \"#utility.yul\":2139:2159   */\n      calldataload\n        /* \"#utility.yul\":2129:2159   */\n      swap1\n      pop\n        /* \"#utility.yul\":2182:2200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2174:2180   */\n      dup2\n        /* \"#utility.yul\":2171:2201   */\n      gt\n        /* \"#utility.yul\":2168:2285   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":2204:2283   */\n      tag_379\n      tag_307\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2168:2285   */\n    tag_378:\n        /* \"#utility.yul\":2318:2322   */\n      0x20\n        /* \"#utility.yul\":2310:2316   */\n      dup4\n        /* \"#utility.yul\":2306:2323   */\n      add\n        /* \"#utility.yul\":2294:2323   */\n      swap2\n      pop\n        /* \"#utility.yul\":2372:2375   */\n      dup4\n        /* \"#utility.yul\":2364:2368   */\n      0x01\n        /* \"#utility.yul\":2356:2362   */\n      dup3\n        /* \"#utility.yul\":2352:2369   */\n      mul\n        /* \"#utility.yul\":2342:2350   */\n      dup4\n        /* \"#utility.yul\":2338:2370   */\n      add\n        /* \"#utility.yul\":2335:2376   */\n      gt\n        /* \"#utility.yul\":2332:2460   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":2379:2458   */\n      tag_381\n      tag_308\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2332:2460   */\n    tag_380:\n        /* \"#utility.yul\":1914:2466   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:3435   */\n    tag_34:\n        /* \"#utility.yul\":2569:2575   */\n      0x00\n        /* \"#utility.yul\":2577:2583   */\n      dup1\n        /* \"#utility.yul\":2585:2591   */\n      0x00\n        /* \"#utility.yul\":2593:2599   */\n      dup1\n        /* \"#utility.yul\":2601:2607   */\n      0x00\n        /* \"#utility.yul\":2650:2653   */\n      0x80\n        /* \"#utility.yul\":2638:2647   */\n      dup7\n        /* \"#utility.yul\":2629:2636   */\n      dup9\n        /* \"#utility.yul\":2625:2648   */\n      sub\n        /* \"#utility.yul\":2621:2654   */\n      slt\n        /* \"#utility.yul\":2618:2738   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2657:2736   */\n      tag_384\n      tag_297\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2618:2738   */\n    tag_383:\n        /* \"#utility.yul\":2777:2778   */\n      0x00\n        /* \"#utility.yul\":2802:2855   */\n      tag_385\n        /* \"#utility.yul\":2847:2854   */\n      dup9\n        /* \"#utility.yul\":2838:2844   */\n      dup3\n        /* \"#utility.yul\":2827:2836   */\n      dup10\n        /* \"#utility.yul\":2823:2845   */\n      add\n        /* \"#utility.yul\":2802:2855   */\n      tag_305\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2792:2855   */\n      swap6\n      pop\n        /* \"#utility.yul\":2748:2865   */\n      pop\n        /* \"#utility.yul\":2904:2906   */\n      0x20\n        /* \"#utility.yul\":2930:2983   */\n      tag_386\n        /* \"#utility.yul\":2975:2982   */\n      dup9\n        /* \"#utility.yul\":2966:2972   */\n      dup3\n        /* \"#utility.yul\":2955:2964   */\n      dup10\n        /* \"#utility.yul\":2951:2973   */\n      add\n        /* \"#utility.yul\":2930:2983   */\n      tag_305\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2920:2983   */\n      swap5\n      pop\n        /* \"#utility.yul\":2875:2993   */\n      pop\n        /* \"#utility.yul\":3032:3034   */\n      0x40\n        /* \"#utility.yul\":3058:3111   */\n      tag_387\n        /* \"#utility.yul\":3103:3110   */\n      dup9\n        /* \"#utility.yul\":3094:3100   */\n      dup3\n        /* \"#utility.yul\":3083:3092   */\n      dup10\n        /* \"#utility.yul\":3079:3101   */\n      add\n        /* \"#utility.yul\":3058:3111   */\n      tag_301\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3048:3111   */\n      swap4\n      pop\n        /* \"#utility.yul\":3003:3121   */\n      pop\n        /* \"#utility.yul\":3188:3190   */\n      0x60\n        /* \"#utility.yul\":3177:3186   */\n      dup7\n        /* \"#utility.yul\":3173:3191   */\n      add\n        /* \"#utility.yul\":3160:3192   */\n      calldataload\n        /* \"#utility.yul\":3219:3237   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3211:3217   */\n      dup2\n        /* \"#utility.yul\":3208:3238   */\n      gt\n        /* \"#utility.yul\":3205:3322   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3241:3320   */\n      tag_389\n      tag_298\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3205:3322   */\n    tag_388:\n        /* \"#utility.yul\":3354:3418   */\n      tag_390\n        /* \"#utility.yul\":3410:3417   */\n      dup9\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3390:3399   */\n      dup10\n        /* \"#utility.yul\":3386:3408   */\n      add\n        /* \"#utility.yul\":3354:3418   */\n      tag_309\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3336:3418   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3131:3428   */\n      pop\n        /* \"#utility.yul\":2472:3435   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3441:3590   */\n    tag_310:\n        /* \"#utility.yul\":3477:3484   */\n      0x00\n        /* \"#utility.yul\":3517:3583   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3510:3515   */\n      dup3\n        /* \"#utility.yul\":3506:3584   */\n      and\n        /* \"#utility.yul\":3495:3584   */\n      swap1\n      pop\n        /* \"#utility.yul\":3441:3590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3711   */\n    tag_311:\n        /* \"#utility.yul\":3681:3704   */\n      tag_393\n        /* \"#utility.yul\":3698:3703   */\n      dup2\n        /* \"#utility.yul\":3681:3704   */\n      tag_310\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3676:3679   */\n      dup3\n        /* \"#utility.yul\":3669:3705   */\n      mstore\n        /* \"#utility.yul\":3596:3711   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3717:3935   */\n    tag_37:\n        /* \"#utility.yul\":3808:3812   */\n      0x00\n        /* \"#utility.yul\":3846:3848   */\n      0x20\n        /* \"#utility.yul\":3835:3844   */\n      dup3\n        /* \"#utility.yul\":3831:3849   */\n      add\n        /* \"#utility.yul\":3823:3849   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:3928   */\n      tag_395\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3914:3923   */\n      dup4\n        /* \"#utility.yul\":3910:3927   */\n      add\n        /* \"#utility.yul\":3901:3907   */\n      dup5\n        /* \"#utility.yul\":3859:3928   */\n      tag_311\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3717:3935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3941:4270   */\n    tag_40:\n        /* \"#utility.yul\":4000:4006   */\n      0x00\n        /* \"#utility.yul\":4049:4051   */\n      0x20\n        /* \"#utility.yul\":4037:4046   */\n      dup3\n        /* \"#utility.yul\":4028:4035   */\n      dup5\n        /* \"#utility.yul\":4024:4047   */\n      sub\n        /* \"#utility.yul\":4020:4052   */\n      slt\n        /* \"#utility.yul\":4017:4136   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4055:4134   */\n      tag_398\n      tag_297\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4017:4136   */\n    tag_397:\n        /* \"#utility.yul\":4175:4176   */\n      0x00\n        /* \"#utility.yul\":4200:4253   */\n      tag_399\n        /* \"#utility.yul\":4245:4252   */\n      dup5\n        /* \"#utility.yul\":4236:4242   */\n      dup3\n        /* \"#utility.yul\":4225:4234   */\n      dup6\n        /* \"#utility.yul\":4221:4243   */\n      add\n        /* \"#utility.yul\":4200:4253   */\n      tag_305\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4190:4253   */\n      swap2\n      pop\n        /* \"#utility.yul\":4146:4263   */\n      pop\n        /* \"#utility.yul\":3941:4270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4276:4394   */\n    tag_312:\n        /* \"#utility.yul\":4363:4387   */\n      tag_401\n        /* \"#utility.yul\":4381:4386   */\n      dup2\n        /* \"#utility.yul\":4363:4387   */\n      tag_299\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4358:4361   */\n      dup3\n        /* \"#utility.yul\":4351:4388   */\n      mstore\n        /* \"#utility.yul\":4276:4394   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4400:4622   */\n    tag_45:\n        /* \"#utility.yul\":4493:4497   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4520:4529   */\n      dup3\n        /* \"#utility.yul\":4516:4534   */\n      add\n        /* \"#utility.yul\":4508:4534   */\n      swap1\n      pop\n        /* \"#utility.yul\":4544:4615   */\n      tag_403\n        /* \"#utility.yul\":4612:4613   */\n      0x00\n        /* \"#utility.yul\":4601:4610   */\n      dup4\n        /* \"#utility.yul\":4597:4614   */\n      add\n        /* \"#utility.yul\":4588:4594   */\n      dup5\n        /* \"#utility.yul\":4544:4615   */\n      tag_312\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4400:4622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4628:5102   */\n    tag_62:\n        /* \"#utility.yul\":4696:4702   */\n      0x00\n        /* \"#utility.yul\":4704:4710   */\n      dup1\n        /* \"#utility.yul\":4753:4755   */\n      0x40\n        /* \"#utility.yul\":4741:4750   */\n      dup4\n        /* \"#utility.yul\":4732:4739   */\n      dup6\n        /* \"#utility.yul\":4728:4751   */\n      sub\n        /* \"#utility.yul\":4724:4756   */\n      slt\n        /* \"#utility.yul\":4721:4840   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":4759:4838   */\n      tag_406\n      tag_297\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4721:4840   */\n    tag_405:\n        /* \"#utility.yul\":4879:4880   */\n      0x00\n        /* \"#utility.yul\":4904:4957   */\n      tag_407\n        /* \"#utility.yul\":4949:4956   */\n      dup6\n        /* \"#utility.yul\":4940:4946   */\n      dup3\n        /* \"#utility.yul\":4929:4938   */\n      dup7\n        /* \"#utility.yul\":4925:4947   */\n      add\n        /* \"#utility.yul\":4904:4957   */\n      tag_301\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4894:4957   */\n      swap3\n      pop\n        /* \"#utility.yul\":4850:4967   */\n      pop\n        /* \"#utility.yul\":5006:5008   */\n      0x20\n        /* \"#utility.yul\":5032:5085   */\n      tag_408\n        /* \"#utility.yul\":5077:5084   */\n      dup6\n        /* \"#utility.yul\":5068:5074   */\n      dup3\n        /* \"#utility.yul\":5057:5066   */\n      dup7\n        /* \"#utility.yul\":5053:5075   */\n      add\n        /* \"#utility.yul\":5032:5085   */\n      tag_305\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5022:5085   */\n      swap2\n      pop\n        /* \"#utility.yul\":4977:5095   */\n      pop\n        /* \"#utility.yul\":4628:5102   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5108:5226   */\n    tag_313:\n        /* \"#utility.yul\":5195:5219   */\n      tag_410\n        /* \"#utility.yul\":5213:5218   */\n      dup2\n        /* \"#utility.yul\":5195:5219   */\n      tag_303\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5190:5193   */\n      dup3\n        /* \"#utility.yul\":5183:5220   */\n      mstore\n        /* \"#utility.yul\":5108:5226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5232:5454   */\n    tag_71:\n        /* \"#utility.yul\":5325:5329   */\n      0x00\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"#utility.yul\":5352:5361   */\n      dup3\n        /* \"#utility.yul\":5348:5366   */\n      add\n        /* \"#utility.yul\":5340:5366   */\n      swap1\n      pop\n        /* \"#utility.yul\":5376:5447   */\n      tag_412\n        /* \"#utility.yul\":5444:5445   */\n      0x00\n        /* \"#utility.yul\":5433:5442   */\n      dup4\n        /* \"#utility.yul\":5429:5446   */\n      add\n        /* \"#utility.yul\":5420:5426   */\n      dup5\n        /* \"#utility.yul\":5376:5447   */\n      tag_313\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5232:5454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5460:5934   */\n    tag_74:\n        /* \"#utility.yul\":5528:5534   */\n      0x00\n        /* \"#utility.yul\":5536:5542   */\n      dup1\n        /* \"#utility.yul\":5585:5587   */\n      0x40\n        /* \"#utility.yul\":5573:5582   */\n      dup4\n        /* \"#utility.yul\":5564:5571   */\n      dup6\n        /* \"#utility.yul\":5560:5583   */\n      sub\n        /* \"#utility.yul\":5556:5588   */\n      slt\n        /* \"#utility.yul\":5553:5672   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5591:5670   */\n      tag_415\n      tag_297\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5553:5672   */\n    tag_414:\n        /* \"#utility.yul\":5711:5712   */\n      0x00\n        /* \"#utility.yul\":5736:5789   */\n      tag_416\n        /* \"#utility.yul\":5781:5788   */\n      dup6\n        /* \"#utility.yul\":5772:5778   */\n      dup3\n        /* \"#utility.yul\":5761:5770   */\n      dup7\n        /* \"#utility.yul\":5757:5779   */\n      add\n        /* \"#utility.yul\":5736:5789   */\n      tag_301\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5726:5789   */\n      swap3\n      pop\n        /* \"#utility.yul\":5682:5799   */\n      pop\n        /* \"#utility.yul\":5838:5840   */\n      0x20\n        /* \"#utility.yul\":5864:5917   */\n      tag_417\n        /* \"#utility.yul\":5909:5916   */\n      dup6\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5889:5898   */\n      dup7\n        /* \"#utility.yul\":5885:5907   */\n      add\n        /* \"#utility.yul\":5864:5917   */\n      tag_301\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5854:5917   */\n      swap2\n      pop\n        /* \"#utility.yul\":5809:5927   */\n      pop\n        /* \"#utility.yul\":5460:5934   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5940:6030   */\n    tag_314:\n        /* \"#utility.yul\":5974:5981   */\n      0x00\n        /* \"#utility.yul\":6017:6022   */\n      dup2\n        /* \"#utility.yul\":6010:6023   */\n      iszero\n        /* \"#utility.yul\":6003:6024   */\n      iszero\n        /* \"#utility.yul\":5992:6024   */\n      swap1\n      pop\n        /* \"#utility.yul\":5940:6030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6036:6145   */\n    tag_315:\n        /* \"#utility.yul\":6117:6138   */\n      tag_420\n        /* \"#utility.yul\":6132:6137   */\n      dup2\n        /* \"#utility.yul\":6117:6138   */\n      tag_314\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6112:6115   */\n      dup3\n        /* \"#utility.yul\":6105:6139   */\n      mstore\n        /* \"#utility.yul\":6036:6145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6151:6581   */\n    tag_93:\n        /* \"#utility.yul\":6294:6298   */\n      0x00\n        /* \"#utility.yul\":6332:6334   */\n      0x60\n        /* \"#utility.yul\":6321:6330   */\n      dup3\n        /* \"#utility.yul\":6317:6335   */\n      add\n        /* \"#utility.yul\":6309:6335   */\n      swap1\n      pop\n        /* \"#utility.yul\":6345:6416   */\n      tag_422\n        /* \"#utility.yul\":6413:6414   */\n      0x00\n        /* \"#utility.yul\":6402:6411   */\n      dup4\n        /* \"#utility.yul\":6398:6415   */\n      add\n        /* \"#utility.yul\":6389:6395   */\n      dup7\n        /* \"#utility.yul\":6345:6416   */\n      tag_312\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6426:6498   */\n      tag_423\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6483:6492   */\n      dup4\n        /* \"#utility.yul\":6479:6497   */\n      add\n        /* \"#utility.yul\":6470:6476   */\n      dup6\n        /* \"#utility.yul\":6426:6498   */\n      tag_312\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6508:6574   */\n      tag_424\n        /* \"#utility.yul\":6570:6572   */\n      0x40\n        /* \"#utility.yul\":6559:6568   */\n      dup4\n        /* \"#utility.yul\":6555:6573   */\n      add\n        /* \"#utility.yul\":6546:6552   */\n      dup5\n        /* \"#utility.yul\":6508:6574   */\n      tag_315\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6151:6581   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6587:6756   */\n    tag_316:\n        /* \"#utility.yul\":6671:6682   */\n      0x00\n        /* \"#utility.yul\":6705:6711   */\n      dup3\n        /* \"#utility.yul\":6700:6703   */\n      dup3\n        /* \"#utility.yul\":6693:6712   */\n      mstore\n        /* \"#utility.yul\":6745:6749   */\n      0x20\n        /* \"#utility.yul\":6740:6743   */\n      dup3\n        /* \"#utility.yul\":6736:6750   */\n      add\n        /* \"#utility.yul\":6721:6750   */\n      swap1\n      pop\n        /* \"#utility.yul\":6587:6756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6762:6935   */\n    tag_317:\n        /* \"#utility.yul\":6902:6927   */\n      0x506c65617365204669727374205374616b65204e465473000000000000000000\n        /* \"#utility.yul\":6898:6899   */\n      0x00\n        /* \"#utility.yul\":6890:6896   */\n      dup3\n        /* \"#utility.yul\":6886:6900   */\n      add\n        /* \"#utility.yul\":6879:6928   */\n      mstore\n        /* \"#utility.yul\":6762:6935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7307   */\n    tag_318:\n        /* \"#utility.yul\":7083:7086   */\n      0x00\n        /* \"#utility.yul\":7104:7171   */\n      tag_428\n        /* \"#utility.yul\":7168:7170   */\n      0x17\n        /* \"#utility.yul\":7163:7166   */\n      dup4\n        /* \"#utility.yul\":7104:7171   */\n      tag_316\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7097:7171   */\n      swap2\n      pop\n        /* \"#utility.yul\":7180:7273   */\n      tag_429\n        /* \"#utility.yul\":7269:7272   */\n      dup3\n        /* \"#utility.yul\":7180:7273   */\n      tag_317\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7298:7300   */\n      0x20\n        /* \"#utility.yul\":7293:7296   */\n      dup3\n        /* \"#utility.yul\":7289:7301   */\n      add\n        /* \"#utility.yul\":7282:7301   */\n      swap1\n      pop\n        /* \"#utility.yul\":6941:7307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7313:7732   */\n    tag_110:\n        /* \"#utility.yul\":7479:7483   */\n      0x00\n        /* \"#utility.yul\":7517:7519   */\n      0x20\n        /* \"#utility.yul\":7506:7515   */\n      dup3\n        /* \"#utility.yul\":7502:7520   */\n      add\n        /* \"#utility.yul\":7494:7520   */\n      swap1\n      pop\n        /* \"#utility.yul\":7566:7575   */\n      dup2\n        /* \"#utility.yul\":7560:7564   */\n      dup2\n        /* \"#utility.yul\":7556:7576   */\n      sub\n        /* \"#utility.yul\":7552:7553   */\n      0x00\n        /* \"#utility.yul\":7541:7550   */\n      dup4\n        /* \"#utility.yul\":7537:7554   */\n      add\n        /* \"#utility.yul\":7530:7577   */\n      mstore\n        /* \"#utility.yul\":7594:7725   */\n      tag_431\n        /* \"#utility.yul\":7720:7724   */\n      dup2\n        /* \"#utility.yul\":7594:7725   */\n      tag_318\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7586:7725   */\n      swap1\n      pop\n        /* \"#utility.yul\":7313:7732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7738:7906   */\n    tag_319:\n        /* \"#utility.yul\":7821:7832   */\n      0x00\n        /* \"#utility.yul\":7855:7861   */\n      dup3\n        /* \"#utility.yul\":7850:7853   */\n      dup3\n        /* \"#utility.yul\":7843:7862   */\n      mstore\n        /* \"#utility.yul\":7895:7899   */\n      0x20\n        /* \"#utility.yul\":7890:7893   */\n      dup3\n        /* \"#utility.yul\":7886:7900   */\n      add\n        /* \"#utility.yul\":7871:7900   */\n      swap1\n      pop\n        /* \"#utility.yul\":7738:7906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7912:8026   */\n    tag_320:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8032:8394   */\n    tag_321:\n        /* \"#utility.yul\":8173:8176   */\n      0x00\n        /* \"#utility.yul\":8194:8259   */\n      tag_435\n        /* \"#utility.yul\":8257:8258   */\n      0x00\n        /* \"#utility.yul\":8252:8255   */\n      dup4\n        /* \"#utility.yul\":8194:8259   */\n      tag_319\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8187:8259   */\n      swap2\n      pop\n        /* \"#utility.yul\":8268:8361   */\n      tag_436\n        /* \"#utility.yul\":8357:8360   */\n      dup3\n        /* \"#utility.yul\":8268:8361   */\n      tag_320\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8386:8387   */\n      0x00\n        /* \"#utility.yul\":8381:8384   */\n      dup3\n        /* \"#utility.yul\":8377:8388   */\n      add\n        /* \"#utility.yul\":8370:8388   */\n      swap1\n      pop\n        /* \"#utility.yul\":8032:8394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8400:9148   */\n    tag_112:\n        /* \"#utility.yul\":8649:8653   */\n      0x00\n        /* \"#utility.yul\":8687:8690   */\n      0x80\n        /* \"#utility.yul\":8676:8685   */\n      dup3\n        /* \"#utility.yul\":8672:8691   */\n      add\n        /* \"#utility.yul\":8664:8691   */\n      swap1\n      pop\n        /* \"#utility.yul\":8701:8772   */\n      tag_438\n        /* \"#utility.yul\":8769:8770   */\n      0x00\n        /* \"#utility.yul\":8758:8767   */\n      dup4\n        /* \"#utility.yul\":8754:8771   */\n      add\n        /* \"#utility.yul\":8745:8751   */\n      dup7\n        /* \"#utility.yul\":8701:8772   */\n      tag_313\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8782:8854   */\n      tag_439\n        /* \"#utility.yul\":8850:8852   */\n      0x20\n        /* \"#utility.yul\":8839:8848   */\n      dup4\n        /* \"#utility.yul\":8835:8853   */\n      add\n        /* \"#utility.yul\":8826:8832   */\n      dup6\n        /* \"#utility.yul\":8782:8854   */\n      tag_313\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8864:8936   */\n      tag_440\n        /* \"#utility.yul\":8932:8934   */\n      0x40\n        /* \"#utility.yul\":8921:8930   */\n      dup4\n        /* \"#utility.yul\":8917:8935   */\n      add\n        /* \"#utility.yul\":8908:8914   */\n      dup5\n        /* \"#utility.yul\":8864:8936   */\n      tag_312\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8983:8992   */\n      dup2\n        /* \"#utility.yul\":8977:8981   */\n      dup2\n        /* \"#utility.yul\":8973:8993   */\n      sub\n        /* \"#utility.yul\":8968:8970   */\n      0x60\n        /* \"#utility.yul\":8957:8966   */\n      dup4\n        /* \"#utility.yul\":8953:8971   */\n      add\n        /* \"#utility.yul\":8946:8994   */\n      mstore\n        /* \"#utility.yul\":9011:9141   */\n      tag_441\n        /* \"#utility.yul\":9136:9140   */\n      dup2\n        /* \"#utility.yul\":9011:9141   */\n      tag_321\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9003:9141   */\n      swap1\n      pop\n        /* \"#utility.yul\":8400:9148   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9154:9334   */\n    tag_322:\n        /* \"#utility.yul\":9202:9279   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9192:9280   */\n      mstore\n        /* \"#utility.yul\":9299:9303   */\n      0x11\n        /* \"#utility.yul\":9296:9297   */\n      0x04\n        /* \"#utility.yul\":9289:9304   */\n      mstore\n        /* \"#utility.yul\":9323:9327   */\n      0x24\n        /* \"#utility.yul\":9320:9321   */\n      0x00\n        /* \"#utility.yul\":9313:9328   */\n      revert\n        /* \"#utility.yul\":9340:9531   */\n    tag_124:\n        /* \"#utility.yul\":9380:9383   */\n      0x00\n        /* \"#utility.yul\":9399:9419   */\n      tag_444\n        /* \"#utility.yul\":9417:9418   */\n      dup3\n        /* \"#utility.yul\":9399:9419   */\n      tag_299\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9394:9419   */\n      swap2\n      pop\n        /* \"#utility.yul\":9433:9453   */\n      tag_445\n        /* \"#utility.yul\":9451:9452   */\n      dup4\n        /* \"#utility.yul\":9433:9453   */\n      tag_299\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9428:9453   */\n      swap3\n      pop\n        /* \"#utility.yul\":9476:9477   */\n      dup3\n        /* \"#utility.yul\":9473:9474   */\n      dup3\n        /* \"#utility.yul\":9469:9478   */\n      add\n        /* \"#utility.yul\":9462:9478   */\n      swap1\n      pop\n        /* \"#utility.yul\":9497:9500   */\n      dup1\n        /* \"#utility.yul\":9494:9495   */\n      dup3\n        /* \"#utility.yul\":9491:9501   */\n      gt\n        /* \"#utility.yul\":9488:9524   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":9504:9522   */\n      tag_447\n      tag_322\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9488:9524   */\n    tag_446:\n        /* \"#utility.yul\":9340:9531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:9705   */\n    tag_323:\n        /* \"#utility.yul\":9677:9697   */\n      0x506c65617365204669727374205374616b650000000000000000000000000000\n        /* \"#utility.yul\":9673:9674   */\n      0x00\n        /* \"#utility.yul\":9665:9671   */\n      dup3\n        /* \"#utility.yul\":9661:9675   */\n      add\n        /* \"#utility.yul\":9654:9698   */\n      mstore\n        /* \"#utility.yul\":9537:9705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9711:10077   */\n    tag_324:\n        /* \"#utility.yul\":9853:9856   */\n      0x00\n        /* \"#utility.yul\":9874:9941   */\n      tag_450\n        /* \"#utility.yul\":9938:9940   */\n      0x12\n        /* \"#utility.yul\":9933:9936   */\n      dup4\n        /* \"#utility.yul\":9874:9941   */\n      tag_316\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9867:9941   */\n      swap2\n      pop\n        /* \"#utility.yul\":9950:10043   */\n      tag_451\n        /* \"#utility.yul\":10039:10042   */\n      dup3\n        /* \"#utility.yul\":9950:10043   */\n      tag_323\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10068:10070   */\n      0x20\n        /* \"#utility.yul\":10063:10066   */\n      dup3\n        /* \"#utility.yul\":10059:10071   */\n      add\n        /* \"#utility.yul\":10052:10071   */\n      swap1\n      pop\n        /* \"#utility.yul\":9711:10077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10083:10502   */\n    tag_136:\n        /* \"#utility.yul\":10249:10253   */\n      0x00\n        /* \"#utility.yul\":10287:10289   */\n      0x20\n        /* \"#utility.yul\":10276:10285   */\n      dup3\n        /* \"#utility.yul\":10272:10290   */\n      add\n        /* \"#utility.yul\":10264:10290   */\n      swap1\n      pop\n        /* \"#utility.yul\":10336:10345   */\n      dup2\n        /* \"#utility.yul\":10330:10334   */\n      dup2\n        /* \"#utility.yul\":10326:10346   */\n      sub\n        /* \"#utility.yul\":10322:10323   */\n      0x00\n        /* \"#utility.yul\":10311:10320   */\n      dup4\n        /* \"#utility.yul\":10307:10324   */\n      add\n        /* \"#utility.yul\":10300:10347   */\n      mstore\n        /* \"#utility.yul\":10364:10495   */\n      tag_453\n        /* \"#utility.yul\":10490:10494   */\n      dup2\n        /* \"#utility.yul\":10364:10495   */\n      tag_324\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10356:10495   */\n      swap1\n      pop\n        /* \"#utility.yul\":10083:10502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10508:10840   */\n    tag_146:\n        /* \"#utility.yul\":10629:10633   */\n      0x00\n        /* \"#utility.yul\":10667:10669   */\n      0x40\n        /* \"#utility.yul\":10656:10665   */\n      dup3\n        /* \"#utility.yul\":10652:10670   */\n      add\n        /* \"#utility.yul\":10644:10670   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10751   */\n      tag_455\n        /* \"#utility.yul\":10748:10749   */\n      0x00\n        /* \"#utility.yul\":10737:10746   */\n      dup4\n        /* \"#utility.yul\":10733:10750   */\n      add\n        /* \"#utility.yul\":10724:10730   */\n      dup6\n        /* \"#utility.yul\":10680:10751   */\n      tag_313\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10761:10833   */\n      tag_456\n        /* \"#utility.yul\":10829:10831   */\n      0x20\n        /* \"#utility.yul\":10818:10827   */\n      dup4\n        /* \"#utility.yul\":10814:10832   */\n      add\n        /* \"#utility.yul\":10805:10811   */\n      dup5\n        /* \"#utility.yul\":10761:10833   */\n      tag_312\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10508:10840   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10846:10962   */\n    tag_325:\n        /* \"#utility.yul\":10916:10937   */\n      tag_458\n        /* \"#utility.yul\":10931:10936   */\n      dup2\n        /* \"#utility.yul\":10916:10937   */\n      tag_314\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10909:10914   */\n      dup2\n        /* \"#utility.yul\":10906:10938   */\n      eq\n        /* \"#utility.yul\":10896:10956   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":10952:10953   */\n      0x00\n        /* \"#utility.yul\":10949:10950   */\n      dup1\n        /* \"#utility.yul\":10942:10954   */\n      revert\n        /* \"#utility.yul\":10896:10956   */\n    tag_459:\n        /* \"#utility.yul\":10846:10962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10968:11105   */\n    tag_326:\n        /* \"#utility.yul\":11022:11027   */\n      0x00\n        /* \"#utility.yul\":11053:11059   */\n      dup2\n        /* \"#utility.yul\":11047:11060   */\n      mload\n        /* \"#utility.yul\":11038:11060   */\n      swap1\n      pop\n        /* \"#utility.yul\":11069:11099   */\n      tag_461\n        /* \"#utility.yul\":11093:11098   */\n      dup2\n        /* \"#utility.yul\":11069:11099   */\n      tag_325\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10968:11105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11111:11456   */\n    tag_150:\n        /* \"#utility.yul\":11178:11184   */\n      0x00\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11215:11224   */\n      dup3\n        /* \"#utility.yul\":11206:11213   */\n      dup5\n        /* \"#utility.yul\":11202:11225   */\n      sub\n        /* \"#utility.yul\":11198:11230   */\n      slt\n        /* \"#utility.yul\":11195:11314   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":11233:11312   */\n      tag_464\n      tag_297\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11195:11314   */\n    tag_463:\n        /* \"#utility.yul\":11353:11354   */\n      0x00\n        /* \"#utility.yul\":11378:11439   */\n      tag_465\n        /* \"#utility.yul\":11431:11438   */\n      dup5\n        /* \"#utility.yul\":11422:11428   */\n      dup3\n        /* \"#utility.yul\":11411:11420   */\n      dup6\n        /* \"#utility.yul\":11407:11429   */\n      add\n        /* \"#utility.yul\":11378:11439   */\n      tag_326\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11368:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11324:11449   */\n      pop\n        /* \"#utility.yul\":11111:11456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11462:11605   */\n    tag_327:\n        /* \"#utility.yul\":11519:11524   */\n      0x00\n        /* \"#utility.yul\":11550:11556   */\n      dup2\n        /* \"#utility.yul\":11544:11557   */\n      mload\n        /* \"#utility.yul\":11535:11557   */\n      swap1\n      pop\n        /* \"#utility.yul\":11566:11599   */\n      tag_467\n        /* \"#utility.yul\":11593:11598   */\n      dup2\n        /* \"#utility.yul\":11566:11599   */\n      tag_300\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11462:11605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:11962   */\n    tag_169:\n        /* \"#utility.yul\":11681:11687   */\n      0x00\n        /* \"#utility.yul\":11730:11732   */\n      0x20\n        /* \"#utility.yul\":11718:11727   */\n      dup3\n        /* \"#utility.yul\":11709:11716   */\n      dup5\n        /* \"#utility.yul\":11705:11728   */\n      sub\n        /* \"#utility.yul\":11701:11733   */\n      slt\n        /* \"#utility.yul\":11698:11817   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":11736:11815   */\n      tag_470\n      tag_297\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11698:11817   */\n    tag_469:\n        /* \"#utility.yul\":11856:11857   */\n      0x00\n        /* \"#utility.yul\":11881:11945   */\n      tag_471\n        /* \"#utility.yul\":11937:11944   */\n      dup5\n        /* \"#utility.yul\":11928:11934   */\n      dup3\n        /* \"#utility.yul\":11917:11926   */\n      dup6\n        /* \"#utility.yul\":11913:11935   */\n      add\n        /* \"#utility.yul\":11881:11945   */\n      tag_327\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11871:11945   */\n      swap2\n      pop\n        /* \"#utility.yul\":11827:11955   */\n      pop\n        /* \"#utility.yul\":11611:11962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11968:12378   */\n    tag_171:\n        /* \"#utility.yul\":12008:12015   */\n      0x00\n        /* \"#utility.yul\":12031:12051   */\n      tag_473\n        /* \"#utility.yul\":12049:12050   */\n      dup3\n        /* \"#utility.yul\":12031:12051   */\n      tag_299\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12026:12051   */\n      swap2\n      pop\n        /* \"#utility.yul\":12065:12085   */\n      tag_474\n        /* \"#utility.yul\":12083:12084   */\n      dup4\n        /* \"#utility.yul\":12065:12085   */\n      tag_299\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12060:12085   */\n      swap3\n      pop\n        /* \"#utility.yul\":12120:12121   */\n      dup3\n        /* \"#utility.yul\":12117:12118   */\n      dup3\n        /* \"#utility.yul\":12113:12122   */\n      mul\n        /* \"#utility.yul\":12142:12172   */\n      tag_475\n        /* \"#utility.yul\":12160:12171   */\n      dup2\n        /* \"#utility.yul\":12142:12172   */\n      tag_299\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12131:12172   */\n      swap2\n      pop\n        /* \"#utility.yul\":12321:12322   */\n      dup3\n        /* \"#utility.yul\":12312:12319   */\n      dup3\n        /* \"#utility.yul\":12308:12323   */\n      div\n        /* \"#utility.yul\":12305:12306   */\n      dup5\n        /* \"#utility.yul\":12302:12324   */\n      eq\n        /* \"#utility.yul\":12282:12283   */\n      dup4\n        /* \"#utility.yul\":12275:12284   */\n      iszero\n        /* \"#utility.yul\":12255:12338   */\n      or\n        /* \"#utility.yul\":12232:12371   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":12351:12369   */\n      tag_477\n      tag_322\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12232:12371   */\n    tag_476:\n        /* \"#utility.yul\":12016:12378   */\n      pop\n        /* \"#utility.yul\":11968:12378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12384:12564   */\n    tag_328:\n        /* \"#utility.yul\":12432:12509   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12429:12430   */\n      0x00\n        /* \"#utility.yul\":12422:12510   */\n      mstore\n        /* \"#utility.yul\":12529:12533   */\n      0x12\n        /* \"#utility.yul\":12526:12527   */\n      0x04\n        /* \"#utility.yul\":12519:12534   */\n      mstore\n        /* \"#utility.yul\":12553:12557   */\n      0x24\n        /* \"#utility.yul\":12550:12551   */\n      0x00\n        /* \"#utility.yul\":12543:12558   */\n      revert\n        /* \"#utility.yul\":12570:12755   */\n    tag_173:\n        /* \"#utility.yul\":12610:12611   */\n      0x00\n        /* \"#utility.yul\":12627:12647   */\n      tag_480\n        /* \"#utility.yul\":12645:12646   */\n      dup3\n        /* \"#utility.yul\":12627:12647   */\n      tag_299\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12622:12647   */\n      swap2\n      pop\n        /* \"#utility.yul\":12661:12681   */\n      tag_481\n        /* \"#utility.yul\":12679:12680   */\n      dup4\n        /* \"#utility.yul\":12661:12681   */\n      tag_299\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12656:12681   */\n      swap3\n      pop\n        /* \"#utility.yul\":12700:12701   */\n      dup3\n        /* \"#utility.yul\":12690:12725   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12705:12723   */\n      tag_483\n      tag_328\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12690:12725   */\n    tag_482:\n        /* \"#utility.yul\":12747:12748   */\n      dup3\n        /* \"#utility.yul\":12744:12745   */\n      dup3\n        /* \"#utility.yul\":12740:12749   */\n      div\n        /* \"#utility.yul\":12735:12749   */\n      swap1\n      pop\n        /* \"#utility.yul\":12570:12755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12761:12955   */\n    tag_182:\n        /* \"#utility.yul\":12801:12805   */\n      0x00\n        /* \"#utility.yul\":12821:12841   */\n      tag_485\n        /* \"#utility.yul\":12839:12840   */\n      dup3\n        /* \"#utility.yul\":12821:12841   */\n      tag_299\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12816:12841   */\n      swap2\n      pop\n        /* \"#utility.yul\":12855:12875   */\n      tag_486\n        /* \"#utility.yul\":12873:12874   */\n      dup4\n        /* \"#utility.yul\":12855:12875   */\n      tag_299\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12850:12875   */\n      swap3\n      pop\n        /* \"#utility.yul\":12899:12900   */\n      dup3\n        /* \"#utility.yul\":12896:12897   */\n      dup3\n        /* \"#utility.yul\":12892:12901   */\n      sub\n        /* \"#utility.yul\":12884:12901   */\n      swap1\n      pop\n        /* \"#utility.yul\":12923:12924   */\n      dup2\n        /* \"#utility.yul\":12917:12921   */\n      dup2\n        /* \"#utility.yul\":12914:12925   */\n      gt\n        /* \"#utility.yul\":12911:12948   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12928:12946   */\n      tag_488\n      tag_322\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12911:12948   */\n    tag_487:\n        /* \"#utility.yul\":12761:12955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12961:13131   */\n    tag_329:\n        /* \"#utility.yul\":13101:13123   */\n      0x4669727374204465706f73697420546f6b656e73000000000000000000000000\n        /* \"#utility.yul\":13097:13098   */\n      0x00\n        /* \"#utility.yul\":13089:13095   */\n      dup3\n        /* \"#utility.yul\":13085:13099   */\n      add\n        /* \"#utility.yul\":13078:13124   */\n      mstore\n        /* \"#utility.yul\":12961:13131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13137:13503   */\n    tag_330:\n        /* \"#utility.yul\":13279:13282   */\n      0x00\n        /* \"#utility.yul\":13300:13367   */\n      tag_491\n        /* \"#utility.yul\":13364:13366   */\n      0x14\n        /* \"#utility.yul\":13359:13362   */\n      dup4\n        /* \"#utility.yul\":13300:13367   */\n      tag_316\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13293:13367   */\n      swap2\n      pop\n        /* \"#utility.yul\":13376:13469   */\n      tag_492\n        /* \"#utility.yul\":13465:13468   */\n      dup3\n        /* \"#utility.yul\":13376:13469   */\n      tag_329\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":13494:13496   */\n      0x20\n        /* \"#utility.yul\":13489:13492   */\n      dup3\n        /* \"#utility.yul\":13485:13497   */\n      add\n        /* \"#utility.yul\":13478:13497   */\n      swap1\n      pop\n        /* \"#utility.yul\":13137:13503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13509:13928   */\n    tag_197:\n        /* \"#utility.yul\":13675:13679   */\n      0x00\n        /* \"#utility.yul\":13713:13715   */\n      0x20\n        /* \"#utility.yul\":13702:13711   */\n      dup3\n        /* \"#utility.yul\":13698:13716   */\n      add\n        /* \"#utility.yul\":13690:13716   */\n      swap1\n      pop\n        /* \"#utility.yul\":13762:13771   */\n      dup2\n        /* \"#utility.yul\":13756:13760   */\n      dup2\n        /* \"#utility.yul\":13752:13772   */\n      sub\n        /* \"#utility.yul\":13748:13749   */\n      0x00\n        /* \"#utility.yul\":13737:13746   */\n      dup4\n        /* \"#utility.yul\":13733:13750   */\n      add\n        /* \"#utility.yul\":13726:13773   */\n      mstore\n        /* \"#utility.yul\":13790:13921   */\n      tag_494\n        /* \"#utility.yul\":13916:13920   */\n      dup2\n        /* \"#utility.yul\":13790:13921   */\n      tag_330\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13782:13921   */\n      swap1\n      pop\n        /* \"#utility.yul\":13509:13928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13934:14154   */\n    tag_331:\n        /* \"#utility.yul\":14074:14108   */\n      0x506c6561736520556e7374616b6520796f7572206465706f7369746564204e46\n        /* \"#utility.yul\":14070:14071   */\n      0x00\n        /* \"#utility.yul\":14062:14068   */\n      dup3\n        /* \"#utility.yul\":14058:14072   */\n      add\n        /* \"#utility.yul\":14051:14109   */\n      mstore\n        /* \"#utility.yul\":14143:14146   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14138:14140   */\n      0x20\n        /* \"#utility.yul\":14130:14136   */\n      dup3\n        /* \"#utility.yul\":14126:14141   */\n      add\n        /* \"#utility.yul\":14119:14147   */\n      mstore\n        /* \"#utility.yul\":13934:14154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14160:14526   */\n    tag_332:\n        /* \"#utility.yul\":14302:14305   */\n      0x00\n        /* \"#utility.yul\":14323:14390   */\n      tag_497\n        /* \"#utility.yul\":14387:14389   */\n      0x21\n        /* \"#utility.yul\":14382:14385   */\n      dup4\n        /* \"#utility.yul\":14323:14390   */\n      tag_316\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14316:14390   */\n      swap2\n      pop\n        /* \"#utility.yul\":14399:14492   */\n      tag_498\n        /* \"#utility.yul\":14488:14491   */\n      dup3\n        /* \"#utility.yul\":14399:14492   */\n      tag_331\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14517:14519   */\n      0x40\n        /* \"#utility.yul\":14512:14515   */\n      dup3\n        /* \"#utility.yul\":14508:14520   */\n      add\n        /* \"#utility.yul\":14501:14520   */\n      swap1\n      pop\n        /* \"#utility.yul\":14160:14526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14532:14951   */\n    tag_200:\n        /* \"#utility.yul\":14698:14702   */\n      0x00\n        /* \"#utility.yul\":14736:14738   */\n      0x20\n        /* \"#utility.yul\":14725:14734   */\n      dup3\n        /* \"#utility.yul\":14721:14739   */\n      add\n        /* \"#utility.yul\":14713:14739   */\n      swap1\n      pop\n        /* \"#utility.yul\":14785:14794   */\n      dup2\n        /* \"#utility.yul\":14779:14783   */\n      dup2\n        /* \"#utility.yul\":14775:14795   */\n      sub\n        /* \"#utility.yul\":14771:14772   */\n      0x00\n        /* \"#utility.yul\":14760:14769   */\n      dup4\n        /* \"#utility.yul\":14756:14773   */\n      add\n        /* \"#utility.yul\":14749:14796   */\n      mstore\n        /* \"#utility.yul\":14813:14944   */\n      tag_500\n        /* \"#utility.yul\":14939:14943   */\n      dup2\n        /* \"#utility.yul\":14813:14944   */\n      tag_332\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14805:14944   */\n      swap1\n      pop\n        /* \"#utility.yul\":14532:14951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14957:15182   */\n    tag_333:\n        /* \"#utility.yul\":15097:15131   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15093:15094   */\n      0x00\n        /* \"#utility.yul\":15085:15091   */\n      dup3\n        /* \"#utility.yul\":15081:15095   */\n      add\n        /* \"#utility.yul\":15074:15132   */\n      mstore\n        /* \"#utility.yul\":15166:15174   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15161:15163   */\n      0x20\n        /* \"#utility.yul\":15153:15159   */\n      dup3\n        /* \"#utility.yul\":15149:15164   */\n      add\n        /* \"#utility.yul\":15142:15175   */\n      mstore\n        /* \"#utility.yul\":14957:15182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15188:15554   */\n    tag_334:\n        /* \"#utility.yul\":15330:15333   */\n      0x00\n        /* \"#utility.yul\":15351:15418   */\n      tag_503\n        /* \"#utility.yul\":15415:15417   */\n      0x26\n        /* \"#utility.yul\":15410:15413   */\n      dup4\n        /* \"#utility.yul\":15351:15418   */\n      tag_316\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":15344:15418   */\n      swap2\n      pop\n        /* \"#utility.yul\":15427:15520   */\n      tag_504\n        /* \"#utility.yul\":15516:15519   */\n      dup3\n        /* \"#utility.yul\":15427:15520   */\n      tag_333\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":15545:15547   */\n      0x40\n        /* \"#utility.yul\":15540:15543   */\n      dup3\n        /* \"#utility.yul\":15536:15548   */\n      add\n        /* \"#utility.yul\":15529:15548   */\n      swap1\n      pop\n        /* \"#utility.yul\":15188:15554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15560:15979   */\n    tag_235:\n        /* \"#utility.yul\":15726:15730   */\n      0x00\n        /* \"#utility.yul\":15764:15766   */\n      0x20\n        /* \"#utility.yul\":15753:15762   */\n      dup3\n        /* \"#utility.yul\":15749:15767   */\n      add\n        /* \"#utility.yul\":15741:15767   */\n      swap1\n      pop\n        /* \"#utility.yul\":15813:15822   */\n      dup2\n        /* \"#utility.yul\":15807:15811   */\n      dup2\n        /* \"#utility.yul\":15803:15823   */\n      sub\n        /* \"#utility.yul\":15799:15800   */\n      0x00\n        /* \"#utility.yul\":15788:15797   */\n      dup4\n        /* \"#utility.yul\":15784:15801   */\n      add\n        /* \"#utility.yul\":15777:15824   */\n      mstore\n        /* \"#utility.yul\":15841:15972   */\n      tag_506\n        /* \"#utility.yul\":15967:15971   */\n      dup2\n        /* \"#utility.yul\":15841:15972   */\n      tag_334\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15833:15972   */\n      swap1\n      pop\n        /* \"#utility.yul\":15560:15979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15985:16167   */\n    tag_335:\n        /* \"#utility.yul\":16125:16159   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16121:16122   */\n      0x00\n        /* \"#utility.yul\":16113:16119   */\n      dup3\n        /* \"#utility.yul\":16109:16123   */\n      add\n        /* \"#utility.yul\":16102:16160   */\n      mstore\n        /* \"#utility.yul\":15985:16167   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16173:16539   */\n    tag_336:\n        /* \"#utility.yul\":16315:16318   */\n      0x00\n        /* \"#utility.yul\":16336:16403   */\n      tag_509\n        /* \"#utility.yul\":16400:16402   */\n      0x20\n        /* \"#utility.yul\":16395:16398   */\n      dup4\n        /* \"#utility.yul\":16336:16403   */\n      tag_316\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16329:16403   */\n      swap2\n      pop\n        /* \"#utility.yul\":16412:16505   */\n      tag_510\n        /* \"#utility.yul\":16501:16504   */\n      dup3\n        /* \"#utility.yul\":16412:16505   */\n      tag_335\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16530:16532   */\n      0x20\n        /* \"#utility.yul\":16525:16528   */\n      dup3\n        /* \"#utility.yul\":16521:16533   */\n      add\n        /* \"#utility.yul\":16514:16533   */\n      swap1\n      pop\n        /* \"#utility.yul\":16173:16539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16545:16964   */\n    tag_246:\n        /* \"#utility.yul\":16711:16715   */\n      0x00\n        /* \"#utility.yul\":16749:16751   */\n      0x20\n        /* \"#utility.yul\":16738:16747   */\n      dup3\n        /* \"#utility.yul\":16734:16752   */\n      add\n        /* \"#utility.yul\":16726:16752   */\n      swap1\n      pop\n        /* \"#utility.yul\":16798:16807   */\n      dup2\n        /* \"#utility.yul\":16792:16796   */\n      dup2\n        /* \"#utility.yul\":16788:16808   */\n      sub\n        /* \"#utility.yul\":16784:16785   */\n      0x00\n        /* \"#utility.yul\":16773:16782   */\n      dup4\n        /* \"#utility.yul\":16769:16786   */\n      add\n        /* \"#utility.yul\":16762:16809   */\n      mstore\n        /* \"#utility.yul\":16826:16957   */\n      tag_512\n        /* \"#utility.yul\":16952:16956   */\n      dup2\n        /* \"#utility.yul\":16826:16957   */\n      tag_336\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16818:16957   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16970:17412   */\n    tag_250:\n        /* \"#utility.yul\":17119:17123   */\n      0x00\n        /* \"#utility.yul\":17157:17159   */\n      0x60\n        /* \"#utility.yul\":17146:17155   */\n      dup3\n        /* \"#utility.yul\":17142:17160   */\n      add\n        /* \"#utility.yul\":17134:17160   */\n      swap1\n      pop\n        /* \"#utility.yul\":17170:17241   */\n      tag_514\n        /* \"#utility.yul\":17238:17239   */\n      0x00\n        /* \"#utility.yul\":17227:17236   */\n      dup4\n        /* \"#utility.yul\":17223:17240   */\n      add\n        /* \"#utility.yul\":17214:17220   */\n      dup7\n        /* \"#utility.yul\":17170:17241   */\n      tag_313\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17251:17323   */\n      tag_515\n        /* \"#utility.yul\":17319:17321   */\n      0x20\n        /* \"#utility.yul\":17308:17317   */\n      dup4\n        /* \"#utility.yul\":17304:17322   */\n      add\n        /* \"#utility.yul\":17295:17301   */\n      dup6\n        /* \"#utility.yul\":17251:17323   */\n      tag_313\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17333:17405   */\n      tag_516\n        /* \"#utility.yul\":17401:17403   */\n      0x40\n        /* \"#utility.yul\":17390:17399   */\n      dup4\n        /* \"#utility.yul\":17386:17404   */\n      add\n        /* \"#utility.yul\":17377:17383   */\n      dup5\n        /* \"#utility.yul\":17333:17405   */\n      tag_312\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16970:17412   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17418:17647   */\n    tag_337:\n        /* \"#utility.yul\":17558:17592   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":17554:17555   */\n      0x00\n        /* \"#utility.yul\":17546:17552   */\n      dup3\n        /* \"#utility.yul\":17542:17556   */\n      add\n        /* \"#utility.yul\":17535:17593   */\n      mstore\n        /* \"#utility.yul\":17627:17639   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17622:17624   */\n      0x20\n        /* \"#utility.yul\":17614:17620   */\n      dup3\n        /* \"#utility.yul\":17610:17625   */\n      add\n        /* \"#utility.yul\":17603:17640   */\n      mstore\n        /* \"#utility.yul\":17418:17647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17653:18019   */\n    tag_338:\n        /* \"#utility.yul\":17795:17798   */\n      0x00\n        /* \"#utility.yul\":17816:17883   */\n      tag_519\n        /* \"#utility.yul\":17880:17882   */\n      0x2a\n        /* \"#utility.yul\":17875:17878   */\n      dup4\n        /* \"#utility.yul\":17816:17883   */\n      tag_316\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17809:17883   */\n      swap2\n      pop\n        /* \"#utility.yul\":17892:17985   */\n      tag_520\n        /* \"#utility.yul\":17981:17984   */\n      dup3\n        /* \"#utility.yul\":17892:17985   */\n      tag_337\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18010:18012   */\n      0x40\n        /* \"#utility.yul\":18005:18008   */\n      dup3\n        /* \"#utility.yul\":18001:18013   */\n      add\n        /* \"#utility.yul\":17994:18013   */\n      swap1\n      pop\n        /* \"#utility.yul\":17653:18019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18025:18444   */\n    tag_264:\n        /* \"#utility.yul\":18191:18195   */\n      0x00\n        /* \"#utility.yul\":18229:18231   */\n      0x20\n        /* \"#utility.yul\":18218:18227   */\n      dup3\n        /* \"#utility.yul\":18214:18232   */\n      add\n        /* \"#utility.yul\":18206:18232   */\n      swap1\n      pop\n        /* \"#utility.yul\":18278:18287   */\n      dup2\n        /* \"#utility.yul\":18272:18276   */\n      dup2\n        /* \"#utility.yul\":18268:18288   */\n      sub\n        /* \"#utility.yul\":18264:18265   */\n      0x00\n        /* \"#utility.yul\":18253:18262   */\n      dup4\n        /* \"#utility.yul\":18249:18266   */\n      add\n        /* \"#utility.yul\":18242:18289   */\n      mstore\n        /* \"#utility.yul\":18306:18437   */\n      tag_522\n        /* \"#utility.yul\":18432:18436   */\n      dup2\n        /* \"#utility.yul\":18306:18437   */\n      tag_338\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18298:18437   */\n      swap1\n      pop\n        /* \"#utility.yul\":18025:18444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18450:18675   */\n    tag_339:\n        /* \"#utility.yul\":18590:18624   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":18586:18587   */\n      0x00\n        /* \"#utility.yul\":18578:18584   */\n      dup3\n        /* \"#utility.yul\":18574:18588   */\n      add\n        /* \"#utility.yul\":18567:18625   */\n      mstore\n        /* \"#utility.yul\":18659:18667   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18654:18656   */\n      0x20\n        /* \"#utility.yul\":18646:18652   */\n      dup3\n        /* \"#utility.yul\":18642:18657   */\n      add\n        /* \"#utility.yul\":18635:18668   */\n      mstore\n        /* \"#utility.yul\":18450:18675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18681:19047   */\n    tag_340:\n        /* \"#utility.yul\":18823:18826   */\n      0x00\n        /* \"#utility.yul\":18844:18911   */\n      tag_525\n        /* \"#utility.yul\":18908:18910   */\n      0x26\n        /* \"#utility.yul\":18903:18906   */\n      dup4\n        /* \"#utility.yul\":18844:18911   */\n      tag_316\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":18837:18911   */\n      swap2\n      pop\n        /* \"#utility.yul\":18920:19013   */\n      tag_526\n        /* \"#utility.yul\":19009:19012   */\n      dup3\n        /* \"#utility.yul\":18920:19013   */\n      tag_339\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":19038:19040   */\n      0x40\n        /* \"#utility.yul\":19033:19036   */\n      dup3\n        /* \"#utility.yul\":19029:19041   */\n      add\n        /* \"#utility.yul\":19022:19041   */\n      swap1\n      pop\n        /* \"#utility.yul\":18681:19047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19053:19472   */\n    tag_271:\n        /* \"#utility.yul\":19219:19223   */\n      0x00\n        /* \"#utility.yul\":19257:19259   */\n      0x20\n        /* \"#utility.yul\":19246:19255   */\n      dup3\n        /* \"#utility.yul\":19242:19260   */\n      add\n        /* \"#utility.yul\":19234:19260   */\n      swap1\n      pop\n        /* \"#utility.yul\":19306:19315   */\n      dup2\n        /* \"#utility.yul\":19300:19304   */\n      dup2\n        /* \"#utility.yul\":19296:19316   */\n      sub\n        /* \"#utility.yul\":19292:19293   */\n      0x00\n        /* \"#utility.yul\":19281:19290   */\n      dup4\n        /* \"#utility.yul\":19277:19294   */\n      add\n        /* \"#utility.yul\":19270:19317   */\n      mstore\n        /* \"#utility.yul\":19334:19465   */\n      tag_528\n        /* \"#utility.yul\":19460:19464   */\n      dup2\n        /* \"#utility.yul\":19334:19465   */\n      tag_340\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19326:19465   */\n      swap1\n      pop\n        /* \"#utility.yul\":19053:19472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19478:19576   */\n    tag_341:\n        /* \"#utility.yul\":19529:19535   */\n      0x00\n        /* \"#utility.yul\":19563:19568   */\n      dup2\n        /* \"#utility.yul\":19557:19569   */\n      mload\n        /* \"#utility.yul\":19547:19569   */\n      swap1\n      pop\n        /* \"#utility.yul\":19478:19576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19582:19729   */\n    tag_342:\n        /* \"#utility.yul\":19683:19694   */\n      0x00\n        /* \"#utility.yul\":19720:19723   */\n      dup2\n        /* \"#utility.yul\":19705:19723   */\n      swap1\n      pop\n        /* \"#utility.yul\":19582:19729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19735:19981   */\n    tag_343:\n        /* \"#utility.yul\":19816:19817   */\n      0x00\n        /* \"#utility.yul\":19826:19939   */\n    tag_532:\n        /* \"#utility.yul\":19840:19846   */\n      dup4\n        /* \"#utility.yul\":19837:19838   */\n      dup2\n        /* \"#utility.yul\":19834:19847   */\n      lt\n        /* \"#utility.yul\":19826:19939   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":19925:19926   */\n      dup1\n        /* \"#utility.yul\":19920:19923   */\n      dup3\n        /* \"#utility.yul\":19916:19927   */\n      add\n        /* \"#utility.yul\":19910:19928   */\n      mload\n        /* \"#utility.yul\":19906:19907   */\n      dup2\n        /* \"#utility.yul\":19901:19904   */\n      dup5\n        /* \"#utility.yul\":19897:19908   */\n      add\n        /* \"#utility.yul\":19890:19929   */\n      mstore\n        /* \"#utility.yul\":19862:19864   */\n      0x20\n        /* \"#utility.yul\":19859:19860   */\n      dup2\n        /* \"#utility.yul\":19855:19865   */\n      add\n        /* \"#utility.yul\":19850:19865   */\n      swap1\n      pop\n        /* \"#utility.yul\":19826:19939   */\n      jump(tag_532)\n    tag_534:\n        /* \"#utility.yul\":19973:19974   */\n      0x00\n        /* \"#utility.yul\":19964:19970   */\n      dup5\n        /* \"#utility.yul\":19959:19962   */\n      dup5\n        /* \"#utility.yul\":19955:19971   */\n      add\n        /* \"#utility.yul\":19948:19975   */\n      mstore\n        /* \"#utility.yul\":19797:19981   */\n      pop\n        /* \"#utility.yul\":19735:19981   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19987:20373   */\n    tag_344:\n        /* \"#utility.yul\":20091:20094   */\n      0x00\n        /* \"#utility.yul\":20119:20157   */\n      tag_536\n        /* \"#utility.yul\":20151:20156   */\n      dup3\n        /* \"#utility.yul\":20119:20157   */\n      tag_341\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20173:20261   */\n      tag_537\n        /* \"#utility.yul\":20254:20260   */\n      dup2\n        /* \"#utility.yul\":20249:20252   */\n      dup6\n        /* \"#utility.yul\":20173:20261   */\n      tag_342\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20166:20261   */\n      swap4\n      pop\n        /* \"#utility.yul\":20270:20335   */\n      tag_538\n        /* \"#utility.yul\":20328:20334   */\n      dup2\n        /* \"#utility.yul\":20323:20326   */\n      dup6\n        /* \"#utility.yul\":20316:20320   */\n      0x20\n        /* \"#utility.yul\":20309:20314   */\n      dup7\n        /* \"#utility.yul\":20305:20321   */\n      add\n        /* \"#utility.yul\":20270:20335   */\n      tag_343\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":20360:20366   */\n      dup1\n        /* \"#utility.yul\":20355:20358   */\n      dup5\n        /* \"#utility.yul\":20351:20367   */\n      add\n        /* \"#utility.yul\":20344:20367   */\n      swap2\n      pop\n        /* \"#utility.yul\":20095:20373   */\n      pop\n        /* \"#utility.yul\":19987:20373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20379:20650   */\n    tag_273:\n        /* \"#utility.yul\":20509:20512   */\n      0x00\n        /* \"#utility.yul\":20531:20624   */\n      tag_540\n        /* \"#utility.yul\":20620:20623   */\n      dup3\n        /* \"#utility.yul\":20611:20617   */\n      dup5\n        /* \"#utility.yul\":20531:20624   */\n      tag_344\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20524:20624   */\n      swap2\n      pop\n        /* \"#utility.yul\":20641:20644   */\n      dup2\n        /* \"#utility.yul\":20634:20644   */\n      swap1\n      pop\n        /* \"#utility.yul\":20379:20650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20656:20835   */\n    tag_345:\n        /* \"#utility.yul\":20796:20827   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":20792:20793   */\n      0x00\n        /* \"#utility.yul\":20784:20790   */\n      dup3\n        /* \"#utility.yul\":20780:20794   */\n      add\n        /* \"#utility.yul\":20773:20828   */\n      mstore\n        /* \"#utility.yul\":20656:20835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20841:21207   */\n    tag_346:\n        /* \"#utility.yul\":20983:20986   */\n      0x00\n        /* \"#utility.yul\":21004:21071   */\n      tag_543\n        /* \"#utility.yul\":21068:21070   */\n      0x1d\n        /* \"#utility.yul\":21063:21066   */\n      dup4\n        /* \"#utility.yul\":21004:21071   */\n      tag_316\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20997:21071   */\n      swap2\n      pop\n        /* \"#utility.yul\":21080:21173   */\n      tag_544\n        /* \"#utility.yul\":21169:21172   */\n      dup3\n        /* \"#utility.yul\":21080:21173   */\n      tag_345\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":21198:21200   */\n      0x20\n        /* \"#utility.yul\":21193:21196   */\n      dup3\n        /* \"#utility.yul\":21189:21201   */\n      add\n        /* \"#utility.yul\":21182:21201   */\n      swap1\n      pop\n        /* \"#utility.yul\":20841:21207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21213:21632   */\n    tag_286:\n        /* \"#utility.yul\":21379:21383   */\n      0x00\n        /* \"#utility.yul\":21417:21419   */\n      0x20\n        /* \"#utility.yul\":21406:21415   */\n      dup3\n        /* \"#utility.yul\":21402:21420   */\n      add\n        /* \"#utility.yul\":21394:21420   */\n      swap1\n      pop\n        /* \"#utility.yul\":21466:21475   */\n      dup2\n        /* \"#utility.yul\":21460:21464   */\n      dup2\n        /* \"#utility.yul\":21456:21476   */\n      sub\n        /* \"#utility.yul\":21452:21453   */\n      0x00\n        /* \"#utility.yul\":21441:21450   */\n      dup4\n        /* \"#utility.yul\":21437:21454   */\n      add\n        /* \"#utility.yul\":21430:21477   */\n      mstore\n        /* \"#utility.yul\":21494:21625   */\n      tag_546\n        /* \"#utility.yul\":21620:21624   */\n      dup2\n        /* \"#utility.yul\":21494:21625   */\n      tag_346\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":21486:21625   */\n      swap1\n      pop\n        /* \"#utility.yul\":21213:21632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21638:21737   */\n    tag_347:\n        /* \"#utility.yul\":21690:21696   */\n      0x00\n        /* \"#utility.yul\":21724:21729   */\n      dup2\n        /* \"#utility.yul\":21718:21730   */\n      mload\n        /* \"#utility.yul\":21708:21730   */\n      swap1\n      pop\n        /* \"#utility.yul\":21638:21737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21743:21845   */\n    tag_348:\n        /* \"#utility.yul\":21784:21790   */\n      0x00\n        /* \"#utility.yul\":21835:21837   */\n      0x1f\n        /* \"#utility.yul\":21831:21838   */\n      not\n        /* \"#utility.yul\":21826:21828   */\n      0x1f\n        /* \"#utility.yul\":21819:21824   */\n      dup4\n        /* \"#utility.yul\":21815:21829   */\n      add\n        /* \"#utility.yul\":21811:21839   */\n      and\n        /* \"#utility.yul\":21801:21839   */\n      swap1\n      pop\n        /* \"#utility.yul\":21743:21845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21851:22228   */\n    tag_349:\n        /* \"#utility.yul\":21939:21942   */\n      0x00\n        /* \"#utility.yul\":21967:22006   */\n      tag_550\n        /* \"#utility.yul\":22000:22005   */\n      dup3\n        /* \"#utility.yul\":21967:22006   */\n      tag_347\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":22022:22093   */\n      tag_551\n        /* \"#utility.yul\":22086:22092   */\n      dup2\n        /* \"#utility.yul\":22081:22084   */\n      dup6\n        /* \"#utility.yul\":22022:22093   */\n      tag_316\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":22015:22093   */\n      swap4\n      pop\n        /* \"#utility.yul\":22102:22167   */\n      tag_552\n        /* \"#utility.yul\":22160:22166   */\n      dup2\n        /* \"#utility.yul\":22155:22158   */\n      dup6\n        /* \"#utility.yul\":22148:22152   */\n      0x20\n        /* \"#utility.yul\":22141:22146   */\n      dup7\n        /* \"#utility.yul\":22137:22153   */\n      add\n        /* \"#utility.yul\":22102:22167   */\n      tag_343\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":22192:22221   */\n      tag_553\n        /* \"#utility.yul\":22214:22220   */\n      dup2\n        /* \"#utility.yul\":22192:22221   */\n      tag_348\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":22187:22190   */\n      dup5\n        /* \"#utility.yul\":22183:22222   */\n      add\n        /* \"#utility.yul\":22176:22222   */\n      swap2\n      pop\n        /* \"#utility.yul\":21943:22228   */\n      pop\n        /* \"#utility.yul\":21851:22228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22234:22547   */\n    tag_295:\n        /* \"#utility.yul\":22347:22351   */\n      0x00\n        /* \"#utility.yul\":22385:22387   */\n      0x20\n        /* \"#utility.yul\":22374:22383   */\n      dup3\n        /* \"#utility.yul\":22370:22388   */\n      add\n        /* \"#utility.yul\":22362:22388   */\n      swap1\n      pop\n        /* \"#utility.yul\":22434:22443   */\n      dup2\n        /* \"#utility.yul\":22428:22432   */\n      dup2\n        /* \"#utility.yul\":22424:22444   */\n      sub\n        /* \"#utility.yul\":22420:22421   */\n      0x00\n        /* \"#utility.yul\":22409:22418   */\n      dup4\n        /* \"#utility.yul\":22405:22422   */\n      add\n        /* \"#utility.yul\":22398:22445   */\n      mstore\n        /* \"#utility.yul\":22462:22540   */\n      tag_555\n        /* \"#utility.yul\":22535:22539   */\n      dup2\n        /* \"#utility.yul\":22526:22532   */\n      dup5\n        /* \"#utility.yul\":22462:22540   */\n      tag_349\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":22454:22540   */\n      swap1\n      pop\n        /* \"#utility.yul\":22234:22547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206c81ab5d20856bfdda126e5ea253c7651e1afb03338f0c3ec4d00dc7b0e84a1864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1108": {
									"entryPoint": null,
									"id": 1108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1014": {
									"entryPoint": 233,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 241,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1871:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:11",
														"type": ""
													}
												],
												"src": "845:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:11"
															},
															"nodeType": "YulIf",
															"src": "981:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:11",
														"type": ""
													}
												],
												"src": "928:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:11",
														"type": ""
													}
												],
												"src": "1056:143:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:552:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:32:11"
															},
															"nodeType": "YulIf",
															"src": "1326:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:128:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:129:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1732:129:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1777:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1309:6:11",
														"type": ""
													}
												],
												"src": "1205:663:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002d8a38038062002d8a83398181016040528101906200003791906200025a565b620000576200004b620000e960201b60201c565b620000f160201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160048190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620002b6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e782620001ba565b9050919050565b620001f981620001da565b81146200020557600080fd5b50565b6000815190506200021981620001ee565b92915050565b6000819050919050565b62000234816200021f565b81146200024057600080fd5b50565b600081519050620002548162000229565b92915050565b600080600060608486031215620002765762000275620001b5565b5b6000620002868682870162000208565b9350506020620002998682870162000243565b9250506040620002ac8682870162000208565b9150509250925092565b612ac480620002c66000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063c45af5d81161007c578063c45af5d814610329578063e4458b3014610359578063e88cc2be1461038b578063ee0106d2146103bd578063f2fde38b146103d9578063f89d832f146103f557610142565b80638da5cb5b14610297578063934ed772146102b5578063a6021ace146102d1578063b7171a2e146102ef578063c0cd40ee1461030d57610142565b8063574880641161010a57806357488064146101e957806357ea89b614610219578063715018a6146102235780637b2f247f1461022d578063866e58af1461024b5780638b73e3311461026757610142565b8063023245d714610147578063150b7a0214610163578063275bd33f146101935780633f601972146101af5780634d6ce1e5146101cd575b600080fd5b610161600480360381019061015c9190611f44565b610411565b005b61017d60048036038101906101789190612034565b61059a565b60405161018a91906120f7565b60405180910390f35b6101ad60048036038101906101a89190612112565b6105af565b005b6101b76105fb565b6040516101c4919061214e565b60405180910390f35b6101e760048036038101906101e29190611f44565b610601565b005b61020360048036038101906101fe9190612112565b610901565b604051610210919061214e565b60405180910390f35b610221610919565b005b61022b610f28565b005b610235610f3c565b604051610242919061214e565b60405180910390f35b61026560048036038101906102609190612169565b610ffd565b005b610281600480360381019061027c9190612112565b611056565b60405161028e919061214e565b60405180910390f35b61029f611294565b6040516102ac91906121b8565b60405180910390f35b6102cf60048036038101906102ca91906121d3565b6112bd565b005b6102d9611505565b6040516102e691906121b8565b60405180910390f35b6102f761152b565b60405161030491906121b8565b60405180910390f35b61032760048036038101906103229190611f44565b611551565b005b610343600480360381019061033e9190612112565b6115c4565b604051610350919061214e565b60405180910390f35b610373600480360381019061036e9190612112565b6118c8565b6040516103829392919061222e565b60405180910390f35b6103a560048036038101906103a09190612112565b6118ff565b6040516103b49392919061222e565b60405180910390f35b6103d760048036038101906103d29190612112565b611936565b005b6103f360048036038101906103ee9190612112565b611982565b005b61040f600480360381019061040a9190611f44565b611a05565b005b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166104a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610497906122c2565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033846040518463ffffffff1660e01b81526004016104ff93929190612319565b600060405180830381600087803b15801561051957600080fd5b505af115801561052d573d6000803e3d6000fd5b50505050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055505050565b600063150b7a0260e01b905095945050505050565b6105b7611a17565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166107565780600360008282546106679190612392565b92505081905550604051806060016040528082815260200142815260200160011515815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050610751333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a95909392919063ffffffff16565b6108fe565b80600360008282546107689190612392565b9250508190555061077833611056565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c69190612392565b92505081905550604051806060016040528082600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546108269190612392565b815260200142815260200160011515815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506108fd333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a95909392919063ffffffff16565b5b50565b60066020528060005260406000206000915090505481565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f90612412565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610d30576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610a4f33611056565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610af293929190612319565b600060405180830381600087803b158015610b0c57600080fd5b505af1158015610b20573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548486610baf9190612392565b610bb99190612392565b6040518363ffffffff1660e01b8152600401610bd6929190612432565b6020604051808303816000875af1158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c199190612487565b50600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff02191690555050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff021916905550505050610f26565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610d8233611056565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548486610e0f9190612392565b610e199190612392565b6040518363ffffffff1660e01b8152600401610e36929190612432565b6020604051808303816000875af1158015610e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e799190612487565b50600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055505050505b565b610f30611a17565b610f3a6000611b1e565b565b6000806003546064600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f9f91906121b8565b602060405180830381865afa158015610fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe091906124c9565b610fea91906124f6565b610ff49190612567565b90508091505090565b611005611a17565b6110528183600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611be29092919063ffffffff16565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156111c0576000603c600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426110ff9190612598565b6111099190612567565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461119991906124f6565b6111a391906124f6565b905060006064826111b49190612567565b9050809250505061128f565b6000603c600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426112129190612598565b61121c9190612567565b600454600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461126c91906124f6565b61127691906124f6565b905060006064826112879190612567565b905080925050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1661134c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134390612618565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16156113dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d3906126aa565b60405180910390fd5b604051806060016040528082815260200183815260200160011515815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b81526004016114cf93929190612319565b600060405180830381600087803b1580156114e957600080fd5b505af11580156114fd573d6000803e3d6000fd5b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611559611a17565b806003600082825461156b9190612392565b925050819055506115c1333083600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a95909392919063ffffffff16565b50565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615611791576000603c600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261166d9190612598565b6116779190612567565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461170791906124f6565b61171191906124f6565b905060006064826117229190612567565b9050600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154816117729190612392565b9250670de0b6b3a7640000836117889190612567565b925050506118c3565b6000603c600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117e39190612598565b6117ed9190612567565b600454600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461183d91906124f6565b61184791906124f6565b905060006064826118589190612567565b9050600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154816118a89190612392565b9250670de0b6b3a7640000836118be9190612567565b925050505b919050565b60076020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60056020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b61193e611a17565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61198a611a17565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f09061273c565b60405180910390fd5b611a0281611b1e565b50565b611a0d611a17565b8060048190555050565b611a1f611c68565b73ffffffffffffffffffffffffffffffffffffffff16611a3d611294565b73ffffffffffffffffffffffffffffffffffffffff1614611a93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8a906127a8565b60405180910390fd5b565b611b18846323b872dd60e01b858585604051602401611ab6939291906127c8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c70565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c638363a9059cbb60e01b8484604051602401611c01929190612432565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c70565b505050565b600033905090565b6000611cd2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d379092919063ffffffff16565b9050600081511115611d325780806020019051810190611cf29190612487565b611d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2890612871565b60405180910390fd5b5b505050565b6060611d468484600085611d4f565b90509392505050565b606082471015611d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8b90612903565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611dbd9190612994565b60006040518083038185875af1925050503d8060008114611dfa576040519150601f19603f3d011682016040523d82523d6000602084013e611dff565b606091505b5091509150611e1087838387611e1c565b92505050949350505050565b60608315611e7e576000835103611e7657611e3685611e91565b611e75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6c906129f7565b60405180910390fd5b5b829050611e89565b611e888383611eb4565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611ec75781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611efb9190612a6c565b60405180910390fd5b600080fd5b600080fd5b6000819050919050565b611f2181611f0e565b8114611f2c57600080fd5b50565b600081359050611f3e81611f18565b92915050565b600060208284031215611f5a57611f59611f04565b5b6000611f6884828501611f2f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f9c82611f71565b9050919050565b611fac81611f91565b8114611fb757600080fd5b50565b600081359050611fc981611fa3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611ff457611ff3611fcf565b5b8235905067ffffffffffffffff81111561201157612010611fd4565b5b60208301915083600182028301111561202d5761202c611fd9565b5b9250929050565b6000806000806000608086880312156120505761204f611f04565b5b600061205e88828901611fba565b955050602061206f88828901611fba565b945050604061208088828901611f2f565b935050606086013567ffffffffffffffff8111156120a1576120a0611f09565b5b6120ad88828901611fde565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120f1816120bc565b82525050565b600060208201905061210c60008301846120e8565b92915050565b60006020828403121561212857612127611f04565b5b600061213684828501611fba565b91505092915050565b61214881611f0e565b82525050565b6000602082019050612163600083018461213f565b92915050565b600080604083850312156121805761217f611f04565b5b600061218e85828601611f2f565b925050602061219f85828601611fba565b9150509250929050565b6121b281611f91565b82525050565b60006020820190506121cd60008301846121a9565b92915050565b600080604083850312156121ea576121e9611f04565b5b60006121f885828601611f2f565b925050602061220985828601611f2f565b9150509250929050565b60008115159050919050565b61222881612213565b82525050565b6000606082019050612243600083018661213f565b612250602083018561213f565b61225d604083018461221f565b949350505050565b600082825260208201905092915050565b7f506c65617365204669727374205374616b65204e465473000000000000000000600082015250565b60006122ac601783612265565b91506122b782612276565b602082019050919050565b600060208201905081810360008301526122db8161229f565b9050919050565b600082825260208201905092915050565b50565b60006123036000836122e2565b915061230e826122f3565b600082019050919050565b600060808201905061232e60008301866121a9565b61233b60208301856121a9565b612348604083018461213f565b8181036060830152612359816122f6565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061239d82611f0e565b91506123a883611f0e565b92508282019050808211156123c0576123bf612363565b5b92915050565b7f506c65617365204669727374205374616b650000000000000000000000000000600082015250565b60006123fc601283612265565b9150612407826123c6565b602082019050919050565b6000602082019050818103600083015261242b816123ef565b9050919050565b600060408201905061244760008301856121a9565b612454602083018461213f565b9392505050565b61246481612213565b811461246f57600080fd5b50565b6000815190506124818161245b565b92915050565b60006020828403121561249d5761249c611f04565b5b60006124ab84828501612472565b91505092915050565b6000815190506124c381611f18565b92915050565b6000602082840312156124df576124de611f04565b5b60006124ed848285016124b4565b91505092915050565b600061250182611f0e565b915061250c83611f0e565b925082820261251a81611f0e565b9150828204841483151761253157612530612363565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061257282611f0e565b915061257d83611f0e565b92508261258d5761258c612538565b5b828204905092915050565b60006125a382611f0e565b91506125ae83611f0e565b92508282039050818111156125c6576125c5612363565b5b92915050565b7f4669727374204465706f73697420546f6b656e73000000000000000000000000600082015250565b6000612602601483612265565b915061260d826125cc565b602082019050919050565b60006020820190508181036000830152612631816125f5565b9050919050565b7f506c6561736520556e7374616b6520796f7572206465706f7369746564204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612694602183612265565b915061269f82612638565b604082019050919050565b600060208201905081810360008301526126c381612687565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612726602683612265565b9150612731826126ca565b604082019050919050565b6000602082019050818103600083015261275581612719565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612792602083612265565b915061279d8261275c565b602082019050919050565b600060208201905081810360008301526127c181612785565b9050919050565b60006060820190506127dd60008301866121a9565b6127ea60208301856121a9565b6127f7604083018461213f565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061285b602a83612265565b9150612866826127ff565b604082019050919050565b6000602082019050818103600083015261288a8161284e565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006128ed602683612265565b91506128f882612891565b604082019050919050565b6000602082019050818103600083015261291c816128e0565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561295757808201518184015260208101905061293c565b60008484015250505050565b600061296e82612923565b612978818561292e565b9350612988818560208601612939565b80840191505092915050565b60006129a08284612963565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006129e1601d83612265565b91506129ec826129ab565b602082019050919050565b60006020820190508181036000830152612a10816129d4565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612a3e82612a17565b612a488185612265565b9350612a58818560208601612939565b612a6181612a22565b840191505092915050565b60006020820190508181036000830152612a868184612a33565b90509291505056fea26469706673582212206c81ab5d20856bfdda126e5ea253c7651e1afb03338f0c3ec4d00dc7b0e84a1864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2D8A CODESIZE SUB DUP1 PUSH3 0x2D8A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x25A JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x2B6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E7 DUP3 PUSH3 0x1BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F9 DUP2 PUSH3 0x1DA JUMP JUMPDEST DUP2 EQ PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x219 DUP2 PUSH3 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x234 DUP2 PUSH3 0x21F JUMP JUMPDEST DUP2 EQ PUSH3 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x254 DUP2 PUSH3 0x229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x1B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x286 DUP7 DUP3 DUP8 ADD PUSH3 0x208 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x299 DUP7 DUP3 DUP8 ADD PUSH3 0x243 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2AC DUP7 DUP3 DUP8 ADD PUSH3 0x208 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2AC4 DUP1 PUSH3 0x2C6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC45AF5D8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC45AF5D8 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xE4458B30 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xE88CC2BE EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xEE0106D2 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF89D832F EQ PUSH2 0x3F5 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x934ED772 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA6021ACE EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xB7171A2E EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x30D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x57488064 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x57488064 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x7B2F247F EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x866E58AF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x8B73E331 EQ PUSH2 0x267 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x23245D7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x275BD33F EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3F601972 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x4D6CE1E5 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH2 0xF28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x12BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x1936 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x1982 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x756 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x751 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A95 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x778 CALLER PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x8FD CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A95 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xA4F CALLER PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 DUP7 PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP3 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xD82 CALLER PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 DUP7 PUSH2 0xE0F SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP3 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0xF30 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0xF3A PUSH1 0x0 PUSH2 0x1B1E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x64 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE0 SWAP2 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH2 0xFEA SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1005 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1052 DUP2 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BE2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x128F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1212 SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x2618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1559 PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15C1 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A95 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1791 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x166D SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x1677 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1711 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x17ED SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1847 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x18A8 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x193E PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x198A PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F0 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A02 DUP2 PUSH2 0x1B1E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A0D PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1A1F PUSH2 0x1C68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3D PUSH2 0x1294 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8A SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B18 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1AB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C70 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C63 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C01 SWAP3 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C70 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D37 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D32 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CF2 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST PUSH2 0x1D31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D28 SWAP1 PUSH2 0x2871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D46 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D4F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8B SWAP1 PUSH2 0x2903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DBD SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E10 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1E1C JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E7E JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1E76 JUMPI PUSH2 0x1E36 DUP6 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x1E75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6C SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x1E88 DUP4 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1EC7 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFB SWAP2 SWAP1 PUSH2 0x2A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F21 DUP2 PUSH2 0x1F0E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3E DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5A JUMPI PUSH2 0x1F59 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F68 DUP5 DUP3 DUP6 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9C DUP3 PUSH2 0x1F71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAC DUP2 PUSH2 0x1F91 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC9 DUP2 PUSH2 0x1FA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FF4 JUMPI PUSH2 0x1FF3 PUSH2 0x1FCF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x202D JUMPI PUSH2 0x202C PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x204F PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205E DUP9 DUP3 DUP10 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x206F DUP9 DUP3 DUP10 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2080 DUP9 DUP3 DUP10 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x1F09 JUMP JUMPDEST JUMPDEST PUSH2 0x20AD DUP9 DUP3 DUP10 ADD PUSH2 0x1FDE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F1 DUP2 PUSH2 0x20BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2128 JUMPI PUSH2 0x2127 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2136 DUP5 DUP3 DUP6 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x1F0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2163 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218E DUP6 DUP3 DUP7 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x219F DUP6 DUP3 DUP7 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x1F91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21EA JUMPI PUSH2 0x21E9 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2209 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2228 DUP2 PUSH2 0x2213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2243 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x2250 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x225D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x221F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B65204E465473000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AC PUSH1 0x17 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B7 DUP3 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22DB DUP2 PUSH2 0x229F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2303 PUSH1 0x0 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x230E DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x232E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x233B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x2348 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2359 DUP2 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x239D DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x23A8 DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23BF PUSH2 0x2363 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FC PUSH1 0x12 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x2407 DUP3 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242B DUP2 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2447 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x2454 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2464 DUP2 PUSH2 0x2213 JUMP JUMPDEST DUP2 EQ PUSH2 0x246F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2481 DUP2 PUSH2 0x245B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249D JUMPI PUSH2 0x249C PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24AB DUP5 DUP3 DUP6 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24C3 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24DF JUMPI PUSH2 0x24DE PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24ED DUP5 DUP3 DUP6 ADD PUSH2 0x24B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2501 DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x250C DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x251A DUP2 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2531 JUMPI PUSH2 0x2530 PUSH2 0x2363 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2572 DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x257D DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A3 DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25C6 JUMPI PUSH2 0x25C5 PUSH2 0x2363 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4669727374204465706F73697420546F6B656E73000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2602 PUSH1 0x14 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x260D DUP3 PUSH2 0x25CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2631 DUP2 PUSH2 0x25F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520556E7374616B6520796F7572206465706F7369746564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2694 PUSH1 0x21 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x269F DUP3 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C3 DUP2 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2726 PUSH1 0x26 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x2731 DUP3 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2792 PUSH1 0x20 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x279D DUP3 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27C1 DUP2 PUSH2 0x2785 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27DD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x27EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x27F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285B PUSH1 0x2A DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x2866 DUP3 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x288A DUP2 PUSH2 0x284E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28ED PUSH1 0x26 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F8 DUP3 PUSH2 0x2891 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291C DUP2 PUSH2 0x28E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2957 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x293C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296E DUP3 PUSH2 0x2923 JUMP JUMPDEST PUSH2 0x2978 DUP2 DUP6 PUSH2 0x292E JUMP JUMPDEST SWAP4 POP PUSH2 0x2988 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2939 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A0 DUP3 DUP5 PUSH2 0x2963 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E1 PUSH1 0x1D DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EC DUP3 PUSH2 0x29AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A10 DUP2 PUSH2 0x29D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3E DUP3 PUSH2 0x2A17 JUMP JUMPDEST PUSH2 0x2A48 DUP2 DUP6 PUSH2 0x2265 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A58 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x2A61 DUP2 PUSH2 0x2A22 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A86 DUP2 DUP5 PUSH2 0x2A33 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x81AB5D20856BFDDA126E5EA253 0xC7 PUSH6 0x1E1AFB03338F 0xC RETURNDATACOPY 0xC4 0xD0 0xD 0xC7 0xB0 0xE8 0x4A XOR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "348:8084:10:-:0;;;1269:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1379:14:10;1363:13;;:30;;;;;;;;;;;;;;;;;;1410:15;1403:4;:22;;;;1450:13;1435:12;;:28;;;;;;;;;;;;;;;;;;1269:201;;;348:8084;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;348:8084:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminAddToken_1133": {
									"entryPoint": 5457,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@AdminWithDrawToken_1151": {
									"entryPoint": 4093,
									"id": 1151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@DepositNFT_1662": {
									"entryPoint": 4797,
									"id": 1662,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@Deposit_1265": {
									"entryPoint": 1537,
									"id": 1265,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Details_1077": {
									"entryPoint": 6399,
									"id": 1077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ERC20Address_1054": {
									"entryPoint": 5381,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ERC721address_1052": {
									"entryPoint": 5419,
									"id": 1052,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Reward_1081": {
									"entryPoint": 2305,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TotalToken_1056": {
									"entryPoint": 1531,
									"id": 1056,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UpdateERC20_1598": {
									"entryPoint": 1455,
									"id": 1598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@UpdateERC721_1586": {
									"entryPoint": 6454,
									"id": 1586,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@UpdateRatePersentage_1610": {
									"entryPoint": 6661,
									"id": 1610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@UserRate_1086": {
									"entryPoint": 6344,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Utilization_1176": {
									"entryPoint": 3900,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Withdraw_1396": {
									"entryPoint": 2329,
									"id": 1396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_506": {
									"entryPoint": 7280,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 6679,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1014": {
									"entryPoint": 7272,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1001": {
									"entryPoint": 7860,
									"id": 1001,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 6942,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateIntrest_1574": {
									"entryPoint": 4182,
									"id": 1574,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_826": {
									"entryPoint": 7503,
									"id": 826,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_762": {
									"entryPoint": 7479,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_690": {
									"entryPoint": 7825,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_1716": {
									"entryPoint": 1434,
									"id": 1716,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 4756,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 3880,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_284": {
									"entryPoint": 6805,
									"id": 284,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_258": {
									"entryPoint": 7138,
									"id": 258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@showReward_1496": {
									"entryPoint": 5572,
									"id": 1496,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 6530,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_957": {
									"entryPoint": 7708,
									"id": 957,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawNFT_1697": {
									"entryPoint": 1041,
									"id": 1697,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 8424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10184,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8985,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10553,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937": {
									"entryPoint": 9676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9": {
									"entryPoint": 8822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 10239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab": {
									"entryPoint": 9784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22550:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:11",
														"type": ""
													}
												],
												"src": "545:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:11"
															},
															"nodeType": "YulIf",
															"src": "766:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:11",
														"type": ""
													}
												],
												"src": "690:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:11",
														"type": ""
													}
												],
												"src": "1025:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:11",
														"type": ""
													}
												],
												"src": "1157:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:11"
															},
															"nodeType": "YulIf",
															"src": "1312:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:11",
														"type": ""
													}
												],
												"src": "1259:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:11",
														"type": ""
													}
												],
												"src": "1387:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1621:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1631:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1631:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1532:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1764:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:12:11"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1655:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1867:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1884:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1887:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1877:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1778:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1988:478:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2037:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2016:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2024:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2012:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2012:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2031:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2008:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2008:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:35:11"
															},
															"nodeType": "YulIf",
															"src": "1998:122:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2129:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2152:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2139:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2202:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "2204:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2204:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2204:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2182:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2171:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:30:11"
															},
															"nodeType": "YulIf",
															"src": "2168:117:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2294:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2310:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2294:8:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2377:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2379:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2379:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2379:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2342:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2356:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2364:4:11",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2352:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2352:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:32:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2372:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2335:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:41:11"
															},
															"nodeType": "YulIf",
															"src": "2332:128:11"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1955:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1963:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1971:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1981:6:11",
														"type": ""
													}
												],
												"src": "1914:552:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2608:827:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2655:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2657:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2657:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2657:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2629:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2638:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2625:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2625:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2650:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2621:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:33:11"
															},
															"nodeType": "YulIf",
															"src": "2618:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2748:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2763:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2767:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2792:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2827:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2838:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2823:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2823:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2847:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2802:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2792:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2875:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2890:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2894:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2920:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2955:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2966:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2951:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2951:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2975:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2930:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2920:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3003:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3018:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3022:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3048:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3083:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3094:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3079:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3079:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3103:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3058:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3048:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3131:297:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3146:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3177:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3188:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3173:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3173:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3160:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3160:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3150:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3239:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3241:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3241:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3241:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3211:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3219:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3208:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3205:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3336:82:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3401:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3386:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3354:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3354:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3336:6:11"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3344:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2546:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2557:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2569:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2577:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2585:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2593:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2601:6:11",
														"type": ""
													}
												],
												"src": "2472:963:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3495:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3510:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3517:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3495:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3467:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3477:7:11",
														"type": ""
													}
												],
												"src": "3441:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3659:52:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3676:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3698:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3681:16:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3681:23:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3669:36:11"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3647:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3654:3:11",
														"type": ""
													}
												],
												"src": "3596:115:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3813:122:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3823:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3835:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3846:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3831:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3823:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3901:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3925:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3910:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3859:41:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:69:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:69:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3785:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3797:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3808:4:11",
														"type": ""
													}
												],
												"src": "3717:218:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4053:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4055:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4055:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4055:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4028:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4037:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4024:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4024:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4049:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4020:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:32:11"
															},
															"nodeType": "YulIf",
															"src": "4017:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4146:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4161:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4165:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4190:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4225:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4236:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4221:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4221:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4245:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4200:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4190:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3977:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3988:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4000:6:11",
														"type": ""
													}
												],
												"src": "3941:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4358:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4381:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4363:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4363:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4351:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4351:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4329:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4336:3:11",
														"type": ""
													}
												],
												"src": "4276:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4498:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4508:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4520:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4508:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4588:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4612:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4597:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4544:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4544:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4482:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4493:4:11",
														"type": ""
													}
												],
												"src": "4400:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4711:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4757:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4759:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4759:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4759:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4732:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4753:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4724:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:32:11"
															},
															"nodeType": "YulIf",
															"src": "4721:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4850:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4865:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4879:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4869:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4894:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4929:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4940:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4925:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4925:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4949:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4904:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4894:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4977:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4992:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5006:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4996:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5022:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5057:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5068:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5053:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5053:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5077:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5032:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5032:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5022:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4673:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4684:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4696:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4704:6:11",
														"type": ""
													}
												],
												"src": "4628:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5173:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5190:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5213:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5195:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5195:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5183:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5183:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5161:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5168:3:11",
														"type": ""
													}
												],
												"src": "5108:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5330:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5340:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5348:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5420:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5433:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5444:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5429:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5376:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5376:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5302:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5314:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5325:4:11",
														"type": ""
													}
												],
												"src": "5232:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5543:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5589:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5591:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5591:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5591:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5564:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5573:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5560:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5585:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5556:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:32:11"
															},
															"nodeType": "YulIf",
															"src": "5553:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5682:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5697:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5711:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5701:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5726:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5761:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5772:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5757:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5757:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5781:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5736:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5736:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5726:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5809:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5824:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5838:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5828:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5854:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5889:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5900:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5885:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5885:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5909:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5864:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5854:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5505:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5516:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5528:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5536:6:11",
														"type": ""
													}
												],
												"src": "5460:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5982:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5992:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6017:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6010:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6010:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6003:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6003:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5992:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5964:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5974:7:11",
														"type": ""
													}
												],
												"src": "5940:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6095:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6112:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6132:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6117:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6105:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6105:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6083:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6090:3:11",
														"type": ""
													}
												],
												"src": "6036:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6299:282:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6309:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6321:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6317:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6309:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6389:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6402:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6398:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6398:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6345:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6345:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6345:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6470:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6483:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6494:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6479:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6479:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6426:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6426:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6426:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6546:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6559:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6570:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6555:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6555:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6508:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6508:66:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6255:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6267:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6275:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6283:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6294:4:11",
														"type": ""
													}
												],
												"src": "6151:430:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6683:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6693:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6721:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6740:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6745:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6736:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6736:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6721:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6655:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6660:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6671:11:11",
														"type": ""
													}
												],
												"src": "6587:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6868:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6890:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6898:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:14:11"
																	},
																	{
																		"hexValue": "506c65617365204669727374205374616b65204e465473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6902:25:11",
																		"type": "",
																		"value": "Please First Stake NFTs"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6860:6:11",
														"type": ""
													}
												],
												"src": "6762:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7087:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7097:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7163:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7168:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7104:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7269:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
																	"nodeType": "YulIdentifier",
																	"src": "7180:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7180:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7282:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7293:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7298:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7289:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7289:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7075:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7083:3:11",
														"type": ""
													}
												],
												"src": "6941:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7484:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7494:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7506:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7517:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7494:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7552:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7537:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7560:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7566:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7556:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7556:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7530:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7586:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7720:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7594:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7586:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7464:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7479:4:11",
														"type": ""
													}
												],
												"src": "7313:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7833:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7850:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7855:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7843:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7871:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7890:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7895:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7886:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7886:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7871:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7805:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7810:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7821:11:11",
														"type": ""
													}
												],
												"src": "7738:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8018:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8010:6:11",
														"type": ""
													}
												],
												"src": "7912:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8177:217:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8187:72:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8252:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8257:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8194:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:65:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8357:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "8268:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8268:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8370:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8381:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8386:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8377:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8377:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8370:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8165:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8173:3:11",
														"type": ""
													}
												],
												"src": "8032:362:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8654:494:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8664:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8676:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8687:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8672:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8664:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8745:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8758:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8769:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8701:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8701:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8701:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8826:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8839:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8850:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8835:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8835:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8782:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8782:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8908:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8921:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8932:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8917:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8917:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8864:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8864:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8957:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8968:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8953:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8953:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8977:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8983:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8973:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8973:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8946:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8946:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8946:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9003:138:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9136:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9011:123:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9011:130:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9003:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8610:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8622:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8630:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8638:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8649:4:11",
														"type": ""
													}
												],
												"src": "8400:748:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9182:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9199:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9202:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9296:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9299:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9289:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9289:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9289:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9320:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9323:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9313:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9154:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9384:147:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9394:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9417:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9399:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9394:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9428:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9451:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9433:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9428:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9462:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9473:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9476:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9469:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9469:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9462:3:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9502:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9504:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9504:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9504:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9494:1:11"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9497:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9491:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9491:10:11"
															},
															"nodeType": "YulIf",
															"src": "9488:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9371:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9374:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9380:3:11",
														"type": ""
													}
												],
												"src": "9340:191:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9643:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9665:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9673:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9661:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:14:11"
																	},
																	{
																		"hexValue": "506c65617365204669727374205374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9677:20:11",
																		"type": "",
																		"value": "Please First Stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9654:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9654:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9635:6:11",
														"type": ""
													}
												],
												"src": "9537:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9857:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9867:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9933:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9938:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9874:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9874:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9867:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10039:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
																	"nodeType": "YulIdentifier",
																	"src": "9950:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9950:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9950:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10052:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10063:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10068:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10059:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10059:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10052:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9845:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9853:3:11",
														"type": ""
													}
												],
												"src": "9711:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10254:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10264:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10276:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10287:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10272:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10272:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10264:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10330:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10336:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10326:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10326:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10356:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10490:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10364:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10364:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10356:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10234:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10249:4:11",
														"type": ""
													}
												],
												"src": "10083:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10634:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10644:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10656:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10667:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10644:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10724:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10737:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10748:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10733:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10733:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10680:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10805:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10829:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10761:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10761:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10761:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10598:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10610:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10618:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10629:4:11",
														"type": ""
													}
												],
												"src": "10508:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10886:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10940:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10949:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10952:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10942:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10942:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10942:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10909:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10931:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10916:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10916:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10906:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10906:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10899:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:40:11"
															},
															"nodeType": "YulIf",
															"src": "10896:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10879:5:11",
														"type": ""
													}
												],
												"src": "10846:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11028:77:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11038:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11053:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11047:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11047:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11038:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11093:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11069:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11069:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11006:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11014:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11022:5:11",
														"type": ""
													}
												],
												"src": "10968:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11185:271:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11231:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11233:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11233:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11233:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11206:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11215:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11202:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11202:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11198:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11198:32:11"
															},
															"nodeType": "YulIf",
															"src": "11195:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "11324:125:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11339:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11343:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11368:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11411:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11422:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11407:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11407:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11431:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11378:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11378:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11368:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11155:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11166:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11178:6:11",
														"type": ""
													}
												],
												"src": "11111:345:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11525:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11535:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11550:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11544:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11544:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11535:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11593:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11566:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11566:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11566:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11503:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11511:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11519:5:11",
														"type": ""
													}
												],
												"src": "11462:143:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11688:274:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11734:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11736:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11736:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11736:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11709:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11718:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11705:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11705:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11730:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11701:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11701:32:11"
															},
															"nodeType": "YulIf",
															"src": "11698:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "11827:128:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11842:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11856:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11846:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11871:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11917:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11928:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11913:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11913:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11937:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11881:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11881:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11871:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11658:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11669:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11681:6:11",
														"type": ""
													}
												],
												"src": "11611:351:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12016:362:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12026:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12049:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12031:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12026:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12060:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12083:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12065:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12065:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12060:1:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12094:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12117:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12120:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12113:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12113:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12098:11:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12131:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12160:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12142:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12142:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12131:7:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12349:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12351:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12351:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12351:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12282:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12275:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12275:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12305:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12312:7:11"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12321:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12308:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12308:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12302:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12302:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12255:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12255:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12235:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:113:11"
															},
															"nodeType": "YulIf",
															"src": "12232:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11999:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12002:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12008:7:11",
														"type": ""
													}
												],
												"src": "11968:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12412:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12432:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12422:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12422:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12422:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12526:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12529:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12519:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12519:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12519:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12550:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12553:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12543:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12543:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12543:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12384:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12612:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12622:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12645:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12627:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12627:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12622:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12656:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12679:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12661:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12656:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12703:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12705:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12705:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12705:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12700:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12693:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12693:9:11"
															},
															"nodeType": "YulIf",
															"src": "12690:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12735:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12744:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12747:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12740:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12740:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12735:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12601:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12604:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12610:1:11",
														"type": ""
													}
												],
												"src": "12570:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12806:149:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12816:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12839:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12821:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12816:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12850:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12873:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12855:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12850:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12884:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12896:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12899:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12892:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12926:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12928:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12928:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12928:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12917:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12923:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12914:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:11:11"
															},
															"nodeType": "YulIf",
															"src": "12911:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12792:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12795:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12801:4:11",
														"type": ""
													}
												],
												"src": "12761:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13067:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13089:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13097:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13085:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13085:14:11"
																	},
																	{
																		"hexValue": "4669727374204465706f73697420546f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13101:22:11",
																		"type": "",
																		"value": "First Deposit Tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13078:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13078:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13059:6:11",
														"type": ""
													}
												],
												"src": "12961:170:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13283:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13293:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13359:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13364:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13300:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13300:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13293:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13465:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
																	"nodeType": "YulIdentifier",
																	"src": "13376:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13376:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13376:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13478:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13489:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13494:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13485:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13485:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13478:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13271:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13279:3:11",
														"type": ""
													}
												],
												"src": "13137:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13680:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13690:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13702:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13713:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13698:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13698:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13690:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13737:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13748:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13733:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13733:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13756:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13762:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13752:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13752:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13726:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13726:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13782:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13916:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13790:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13790:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13782:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13660:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13675:4:11",
														"type": ""
													}
												],
												"src": "13509:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14040:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14062:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14070:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14058:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14058:14:11"
																	},
																	{
																		"hexValue": "506c6561736520556e7374616b6520796f7572206465706f7369746564204e46",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14074:34:11",
																		"type": "",
																		"value": "Please Unstake your deposited NF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14051:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14051:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14051:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14130:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14138:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14126:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14126:15:11"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14143:3:11",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14119:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14119:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14119:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14032:6:11",
														"type": ""
													}
												],
												"src": "13934:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14306:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14316:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14382:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14387:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14323:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14323:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14316:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14488:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
																	"nodeType": "YulIdentifier",
																	"src": "14399:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14399:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14399:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14501:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14512:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14517:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14508:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14508:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14501:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14294:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14302:3:11",
														"type": ""
													}
												],
												"src": "14160:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14703:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14713:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14725:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14736:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14721:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14713:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14760:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14771:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14756:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14756:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14779:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14785:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14775:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14775:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14749:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14749:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14749:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14805:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14939:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14813:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14813:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14805:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14683:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14698:4:11",
														"type": ""
													}
												],
												"src": "14532:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15063:119:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15085:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15093:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15081:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15081:14:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15097:34:11",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15074:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15074:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15074:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15153:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15161:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15149:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15149:15:11"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15166:8:11",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15142:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15142:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15142:33:11"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15055:6:11",
														"type": ""
													}
												],
												"src": "14957:225:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15334:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15344:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15410:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15415:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15351:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15351:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15344:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15516:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "15427:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15427:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15529:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15540:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15545:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15536:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15536:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15529:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15322:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15330:3:11",
														"type": ""
													}
												],
												"src": "15188:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15731:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15741:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15753:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15764:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15749:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15749:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15741:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15788:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15799:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15784:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15784:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15807:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15813:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15803:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15803:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15777:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15777:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15833:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15967:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15841:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15841:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15833:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15711:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15726:4:11",
														"type": ""
													}
												],
												"src": "15560:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16091:76:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16113:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16121:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16109:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16109:14:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16125:34:11",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16102:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16102:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16102:58:11"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16083:6:11",
														"type": ""
													}
												],
												"src": "15985:182:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16319:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16329:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16395:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16400:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16336:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16336:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16329:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16501:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "16412:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16412:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16412:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16514:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16525:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16530:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16521:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16521:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16514:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16307:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16315:3:11",
														"type": ""
													}
												],
												"src": "16173:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16716:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16726:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16738:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16749:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16734:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16734:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16726:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16773:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16784:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16769:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16769:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16792:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16798:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16788:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16788:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16762:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16762:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16762:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16818:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16952:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16826:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16826:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16818:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16696:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16711:4:11",
														"type": ""
													}
												],
												"src": "16545:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17124:288:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17134:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17146:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17157:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17142:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17142:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17134:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17214:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17227:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17238:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17223:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17223:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17170:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17170:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17170:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17295:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17308:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17319:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17304:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17304:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17251:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17251:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17251:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17377:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17390:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17401:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17386:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17386:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17333:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17333:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17333:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17080:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17092:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17100:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17108:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17119:4:11",
														"type": ""
													}
												],
												"src": "16970:442:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17524:123:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17546:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17554:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17542:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17542:14:11"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17558:34:11",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17535:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17535:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17535:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17614:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17622:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17610:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17610:15:11"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17627:12:11",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17603:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17603:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17603:37:11"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17516:6:11",
														"type": ""
													}
												],
												"src": "17418:229:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17799:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17809:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17875:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17880:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17816:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17816:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17809:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17981:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "17892:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17892:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17892:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17994:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18005:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18010:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18001:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18001:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17994:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17787:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17795:3:11",
														"type": ""
													}
												],
												"src": "17653:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18196:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18206:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18218:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18229:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18214:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18214:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18206:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18253:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18264:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18249:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18249:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18272:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18278:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18268:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18268:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18242:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18242:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18298:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18432:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18306:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18306:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18298:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18176:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18191:4:11",
														"type": ""
													}
												],
												"src": "18025:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18556:119:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18578:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18586:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18574:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18574:14:11"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18590:34:11",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18567:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18567:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18567:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18646:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18654:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18642:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18642:15:11"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18659:8:11",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18635:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18635:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18635:33:11"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18548:6:11",
														"type": ""
													}
												],
												"src": "18450:225:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18827:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18837:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18903:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18908:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18844:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18844:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18837:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19009:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "18920:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18920:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18920:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19022:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19033:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19038:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19029:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19029:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19022:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18815:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18823:3:11",
														"type": ""
													}
												],
												"src": "18681:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19224:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19234:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19246:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19257:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19242:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19242:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19234:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19281:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19292:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19277:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19277:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19300:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19306:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19296:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19296:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19270:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19270:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19270:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19326:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19460:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19334:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19334:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19326:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19204:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19219:4:11",
														"type": ""
													}
												],
												"src": "19053:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19536:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19547:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19563:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19557:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19557:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19547:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19519:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19529:6:11",
														"type": ""
													}
												],
												"src": "19478:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19695:34:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19705:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19720:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19705:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19667:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19672:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19683:11:11",
														"type": ""
													}
												],
												"src": "19582:147:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19797:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19807:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19816:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "19811:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19876:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19901:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19906:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19897:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19897:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "19920:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19925:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19916:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19916:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19910:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19910:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19890:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19890:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19890:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19837:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19840:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19834:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19834:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19848:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19850:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19859:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19862:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19855:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19855:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19850:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19830:3:11",
																"statements": []
															},
															"src": "19826:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "19959:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19964:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19955:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19955:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19973:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19948:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19948:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19948:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19779:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "19784:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19789:6:11",
														"type": ""
													}
												],
												"src": "19735:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20095:278:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20105:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20151:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "20119:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20119:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20109:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20166:95:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20249:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20254:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20173:75:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20173:88:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20166:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20309:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20316:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20305:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20305:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20323:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20328:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "20270:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20270:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20270:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20344:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20355:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20360:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20351:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20351:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20344:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20076:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20083:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20091:3:11",
														"type": ""
													}
												],
												"src": "19987:386:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20513:137:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20524:100:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20611:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20620:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20531:79:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20531:93:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20524:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20634:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20641:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20634:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20492:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20498:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20509:3:11",
														"type": ""
													}
												],
												"src": "20379:271:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20762:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20784:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20792:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20780:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20780:14:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20796:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20773:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20773:55:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20773:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20754:6:11",
														"type": ""
													}
												],
												"src": "20656:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20987:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20997:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21063:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21068:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21004:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21004:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20997:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21169:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "21080:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21080:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21080:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21182:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21193:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21198:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21189:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21189:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21182:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20975:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20983:3:11",
														"type": ""
													}
												],
												"src": "20841:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21384:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21394:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21406:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21417:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21402:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21402:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21394:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21441:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21452:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21437:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21437:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21460:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21466:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21456:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21456:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21430:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21430:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21430:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21486:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21620:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21494:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21494:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21486:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21364:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21379:4:11",
														"type": ""
													}
												],
												"src": "21213:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21697:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21708:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21724:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21718:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21718:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21708:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21680:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21690:6:11",
														"type": ""
													}
												],
												"src": "21638:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21791:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21801:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21819:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21826:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21815:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21815:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21835:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21831:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21831:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21811:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21811:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21801:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21774:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "21784:6:11",
														"type": ""
													}
												],
												"src": "21743:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21943:285:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21953:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22000:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21967:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21967:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21957:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22015:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22081:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22086:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22022:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22022:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22015:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22141:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22148:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22137:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22137:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22155:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22160:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "22102:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22102:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22102:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22176:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22187:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "22214:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "22192:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22192:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22183:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22183:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22176:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21924:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21931:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21939:3:11",
														"type": ""
													}
												],
												"src": "21851:377:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22352:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22362:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22374:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22385:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22370:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22370:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22362:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22409:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22420:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22405:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22405:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22428:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22434:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22424:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22424:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22398:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22398:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22398:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22454:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22526:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22535:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22462:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22462:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22454:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22324:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22336:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22347:4:11",
														"type": ""
													}
												],
												"src": "22234:313:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please First Stake NFTs\")\n\n    }\n\n    function abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please First Stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937(memPtr) {\n\n        mstore(add(memPtr, 0), \"First Deposit Tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please Unstake your deposited NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC45AF5D8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC45AF5D8 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xE4458B30 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xE88CC2BE EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xEE0106D2 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF89D832F EQ PUSH2 0x3F5 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x934ED772 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA6021ACE EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xB7171A2E EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x30D JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x57488064 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x57488064 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x7B2F247F EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x866E58AF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x8B73E331 EQ PUSH2 0x267 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x23245D7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x275BD33F EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3F601972 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x4D6CE1E5 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH2 0xF28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x12BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x1936 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x1982 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1A05 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5B7 PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x756 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x667 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x751 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A95 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x778 CALLER PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x8FD CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A95 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xA4F CALLER PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 DUP7 PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH2 0xBB9 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP3 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xD82 CALLER PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 DUP7 PUSH2 0xE0F SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP3 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE79 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0xF30 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0xF3A PUSH1 0x0 PUSH2 0x1B1E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x64 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE0 SWAP2 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH2 0xFEA SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1005 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x1052 DUP2 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BE2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x128F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1212 SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x2618 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2319 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1559 PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x156B SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15C1 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A95 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1791 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x166D SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x1677 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1707 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1711 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x17ED SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0x1847 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x18A8 SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x193E PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x198A PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F0 SWAP1 PUSH2 0x273C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A02 DUP2 PUSH2 0x1B1E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A0D PUSH2 0x1A17 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1A1F PUSH2 0x1C68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A3D PUSH2 0x1294 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8A SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B18 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1AB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C70 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C63 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C01 SWAP3 SWAP2 SWAP1 PUSH2 0x2432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C70 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D37 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D32 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CF2 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST PUSH2 0x1D31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D28 SWAP1 PUSH2 0x2871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D46 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D4F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8B SWAP1 PUSH2 0x2903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DBD SWAP2 SWAP1 PUSH2 0x2994 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E10 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1E1C JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E7E JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1E76 JUMPI PUSH2 0x1E36 DUP6 PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x1E75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6C SWAP1 PUSH2 0x29F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0x1E88 DUP4 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1EC7 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFB SWAP2 SWAP1 PUSH2 0x2A6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F21 DUP2 PUSH2 0x1F0E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3E DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5A JUMPI PUSH2 0x1F59 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F68 DUP5 DUP3 DUP6 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9C DUP3 PUSH2 0x1F71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAC DUP2 PUSH2 0x1F91 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC9 DUP2 PUSH2 0x1FA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FF4 JUMPI PUSH2 0x1FF3 PUSH2 0x1FCF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1FD4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x202D JUMPI PUSH2 0x202C PUSH2 0x1FD9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x204F PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205E DUP9 DUP3 DUP10 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x206F DUP9 DUP3 DUP10 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2080 DUP9 DUP3 DUP10 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x1F09 JUMP JUMPDEST JUMPDEST PUSH2 0x20AD DUP9 DUP3 DUP10 ADD PUSH2 0x1FDE JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F1 DUP2 PUSH2 0x20BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2128 JUMPI PUSH2 0x2127 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2136 DUP5 DUP3 DUP6 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x1F0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2163 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2180 JUMPI PUSH2 0x217F PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x218E DUP6 DUP3 DUP7 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x219F DUP6 DUP3 DUP7 ADD PUSH2 0x1FBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x1F91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21EA JUMPI PUSH2 0x21E9 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2209 DUP6 DUP3 DUP7 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2228 DUP2 PUSH2 0x2213 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2243 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x2250 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x225D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x221F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B65204E465473000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22AC PUSH1 0x17 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x22B7 DUP3 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22DB DUP2 PUSH2 0x229F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2303 PUSH1 0x0 DUP4 PUSH2 0x22E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x230E DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x232E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x233B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x2348 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2359 DUP2 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x239D DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x23A8 DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23BF PUSH2 0x2363 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23FC PUSH1 0x12 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x2407 DUP3 PUSH2 0x23C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242B DUP2 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2447 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x2454 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2464 DUP2 PUSH2 0x2213 JUMP JUMPDEST DUP2 EQ PUSH2 0x246F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2481 DUP2 PUSH2 0x245B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x249D JUMPI PUSH2 0x249C PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24AB DUP5 DUP3 DUP6 ADD PUSH2 0x2472 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24C3 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24DF JUMPI PUSH2 0x24DE PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24ED DUP5 DUP3 DUP6 ADD PUSH2 0x24B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2501 DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x250C DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x251A DUP2 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2531 JUMPI PUSH2 0x2530 PUSH2 0x2363 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2572 DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x257D DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x2538 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A3 DUP3 PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP PUSH2 0x25AE DUP4 PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25C6 JUMPI PUSH2 0x25C5 PUSH2 0x2363 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4669727374204465706F73697420546F6B656E73000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2602 PUSH1 0x14 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x260D DUP3 PUSH2 0x25CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2631 DUP2 PUSH2 0x25F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520556E7374616B6520796F7572206465706F7369746564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2694 PUSH1 0x21 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x269F DUP3 PUSH2 0x2638 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26C3 DUP2 PUSH2 0x2687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2726 PUSH1 0x26 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x2731 DUP3 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2792 PUSH1 0x20 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x279D DUP3 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27C1 DUP2 PUSH2 0x2785 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27DD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x27EA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x27F7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285B PUSH1 0x2A DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x2866 DUP3 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x288A DUP2 PUSH2 0x284E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28ED PUSH1 0x26 DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x28F8 DUP3 PUSH2 0x2891 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x291C DUP2 PUSH2 0x28E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2957 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x293C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296E DUP3 PUSH2 0x2923 JUMP JUMPDEST PUSH2 0x2978 DUP2 DUP6 PUSH2 0x292E JUMP JUMPDEST SWAP4 POP PUSH2 0x2988 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2939 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A0 DUP3 DUP5 PUSH2 0x2963 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E1 PUSH1 0x1D DUP4 PUSH2 0x2265 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EC DUP3 PUSH2 0x29AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A10 DUP2 PUSH2 0x29D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3E DUP3 PUSH2 0x2A17 JUMP JUMPDEST PUSH2 0x2A48 DUP2 DUP6 PUSH2 0x2265 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A58 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x2A61 DUP2 PUSH2 0x2A22 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A86 DUP2 DUP5 PUSH2 0x2A33 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x81AB5D20856BFDDA126E5EA253 0xC7 PUSH6 0x1E1AFB03338F 0xC RETURNDATACOPY 0xC4 0xD0 0xD 0xC7 0xB0 0xE8 0x4A XOR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "348:8084:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8005:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8259:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6788:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;503:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2873:609;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;796:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3677:901;;;:::i;:::-;;1831:101:0;;;:::i;:::-;;2402:178:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2062:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5758:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7430:363:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;470:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1696:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4771:723;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;841:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;748:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6502:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7077:110:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8005:249;8069:8;:20;8078:10;8069:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;8061:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;8140:13;;;;;;;;;;;8132:39;;;8180:4;8187:10;8198:8;8132:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8227:8;:20;8236:10;8227:20;;;;;;;;;;;;;;;;8220:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8005:249;:::o;8259:171::-;8357:6;8382:41;;;8375:48;;8259:171;;;;;;;:::o;6788:107::-;1094:13:0;:11;:13::i;:::-;6875::10::1;6860:12;;:28;;;;;;;;;;;;;;;;;;6788:107:::0;:::o;503:22::-;;;;:::o;2873:609::-;2928:7;:19;2936:10;2928:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2924:552;;2982:7;2968:10;;:21;;;;;;;:::i;:::-;;;;;;;;3025:36;;;;;;;;3032:7;3025:36;;;;3040:15;3025:36;;;;3056:4;3025:36;;;;;3003:7;:19;3011:10;3003:19;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3075:74;3113:10;3133:4;3141:7;3082:12;;;;;;;;;;;3075:37;;;;:74;;;;;;:::i;:::-;2924:552;;;3201:7;3187:10;;:21;;;;;;;:::i;:::-;;;;;;;;3245:28;3262:10;3245:16;:28::i;:::-;3222:6;:18;3229:10;3222:18;;;;;;;;;;;;;;;;:51;;;;;;;:::i;:::-;;;;;;;;3309:68;;;;;;;;3348:7;3316;:19;3324:10;3316:19;;;;;;;;;;;;;;;:29;;;:39;;;;:::i;:::-;3309:68;;;;3356:15;3309:68;;;;3372:4;3309:68;;;;;3287:7;:19;3295:10;3287:19;;;;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:74;3429:10;3449:4;3457:7;3398:12;;;;;;;;;;;3391:37;;;;:74;;;;;;:::i;:::-;2924:552;2873:609;:::o;796:39::-;;;;;;;;;;;;;;;;;:::o;3677:901::-;3722:7;:19;3730:10;3722:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3714:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3783:8;:20;3792:10;3783:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;3779:789;;;3824:11;3838:7;:19;3846:10;3838:19;;;;;;;;;;;;;;;:29;;;3824:43;;3881:11;3895:28;3912:10;3895:16;:28::i;:::-;3881:42;;3945:13;;;;;;;;;;;3937:39;;;3985:4;3992:10;4003:8;:20;4012:10;4003:20;;;;;;;;;;;;;;;:28;;;3937:98;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4056:12;;;;;;;;;;;4049:29;;;4079:10;4109:6;:18;4116:10;4109:18;;;;;;;;;;;;;;;;4100:6;4091;:15;;;;:::i;:::-;:36;;;;:::i;:::-;4049:79;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4149:8;:20;4158:10;4149:20;;;;;;;;;;;;;;;;4142:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4190:6;:18;4197:10;4190:18;;;;;;;;;;;;;;;4183:25;;;4229:7;:19;4237:10;4229:19;;;;;;;;;;;;;;;;4222:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3810:449;;3779:789;;;4286:11;4300:7;:19;4308:10;4300:19;;;;;;;;;;;;;;;:29;;;4286:43;;4343:11;4357:28;4374:10;4357:16;:28::i;:::-;4343:42;;4406:12;;;;;;;;;;;4399:29;;;4429:10;4459:6;:18;4466:10;4459:18;;;;;;;;;;;;;;;;4450:6;4441;:15;;;;:::i;:::-;:36;;;;:::i;:::-;4399:79;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4499:6;:18;4506:10;4499:18;;;;;;;;;;;;;;;4492:25;;;4538:7;:19;4546:10;4538:19;;;;;;;;;;;;;;;;4531:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4272:296;;3779:789;3677:901::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2402:178:10:-;2445:7;2464:15;2536:10;;2531:3;2490:12;;;;;;;;;;;2483:30;;;2522:4;2483:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;;;:::i;:::-;2482:64;;;;:::i;:::-;2464:82;;2563:10;2556:17;;;2402:178;:::o;2062:132::-;1094:13:0;:11;:13::i;:::-;2141:46:10::1;2175:3;2180:6;2148:12;;;;;;;;;;;2141:33;;;;:46;;;;;:::i;:::-;2062:132:::0;;:::o;5758:562::-;5817:7;5839:8;:13;5848:3;5839:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;5835:479;;;5882:14;5995:2;5971:7;:12;5979:3;5971:12;;;;;;;;;;;;;;;:22;;;5953:15;:40;;;;:::i;:::-;5952:45;;;;:::i;:::-;5925:8;:13;5934:3;5925:13;;;;;;;;;;;;;;;:22;;;5900:7;:12;5908:3;5900:12;;;;;;;;;;;;;;;:22;;;:47;;;;:::i;:::-;5899:99;;;;:::i;:::-;5882:116;;6012:16;6043:3;6031:9;:15;;;;:::i;:::-;6012:34;;6067:11;6060:18;;;;;;5835:479;6125:14;6220:2;6196:7;:12;6204:3;6196:12;;;;;;;;;;;;;;;:22;;;6178:15;:40;;;;:::i;:::-;6177:45;;;;:::i;:::-;6168:4;;6143:7;:12;6151:3;6143:12;;;;;;;;;;;;;;;:22;;;:29;;;;:::i;:::-;6142:81;;;;:::i;:::-;6125:98;;6237:16;6268:3;6256:9;:15;;;;:::i;:::-;6237:34;;6292:11;6285:18;;;;5758:562;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;7430:363:10:-;7504:7;:19;7512:10;7504:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;7496:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;7572:8;:20;7581:10;7572:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;7571:27;7563:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7668:30;;;;;;;;7678:5;7668:30;;;;7684:8;7668:30;;;;7693:4;7668:30;;;;;7645:8;:20;7654:10;7645:20;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7717:13;;;;;;;;;;;7709:39;;;7749:10;7768:4;7774:8;7709:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7430:363;;:::o;470:27::-;;;;;;;;;;;;;:::o;436:28::-;;;;;;;;;;;;;:::o;1696:174::-;1094:13:0;:11;:13::i;:::-;1773:7:10::1;1759:10;;:21;;;;;;;:::i;:::-;;;;;;;;1790:73;1828:10;1848:4;1855:7;1797:12;;;;;;;;;;;1790:37;;;;:73;;;;;;:::i;:::-;1696:174:::0;:::o;4771:723::-;4824:11;4855:8;:13;4864:3;4855:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;4851:628;;;4898:14;5011:2;4987:7;:12;4995:3;4987:12;;;;;;;;;;;;;;;:22;;;4969:15;:40;;;;:::i;:::-;4968:45;;;;:::i;:::-;4941:8;:13;4950:3;4941:13;;;;;;;;;;;;;;;:22;;;4916:7;:12;4924:3;4916:12;;;;;;;;;;;;;;;:22;;;:47;;;;:::i;:::-;4915:99;;;;:::i;:::-;4898:116;;5028:16;5059:3;5047:9;:15;;;;:::i;:::-;5028:34;;5099:7;:12;5107:3;5099:12;;;;;;;;;;;;;;;:22;;;5085:11;:36;;;;:::i;:::-;5076:45;;5149:19;5142:6;:26;;;;:::i;:::-;5135:33;;;;;;4851:628;5216:14;5311:2;5287:7;:12;5295:3;5287:12;;;;;;;;;;;;;;;:22;;;5269:15;:40;;;;:::i;:::-;5268:45;;;;:::i;:::-;5259:4;;5234:7;:12;5242:3;5234:12;;;;;;;;;;;;;;;:22;;;:29;;;;:::i;:::-;5233:81;;;;:::i;:::-;5216:98;;5328:16;5359:3;5347:9;:15;;;;:::i;:::-;5328:34;;5399:7;:12;5407:3;5399:12;;;;;;;;;;;;;;;:22;;;5385:11;:36;;;;:::i;:::-;5376:45;;5449:19;5442:6;:26;;;;:::i;:::-;5435:33;;;;4771:723;;;;:::o;841:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;748:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6502:109::-;1094:13:0;:11;:13::i;:::-;6590:14:10::1;6574:13;;:30;;;;;;;;;;;;;;;;;;6502:109:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;7077:110:10:-;1094:13:0;:11;:13::i;:::-;7165:15:10::1;7158:4;:22;;;;7077:110:::0;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;974:241:3:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;763:205:3:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;3747:706:3:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:7:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:11;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:117::-;1641:1;1638;1631:12;1655:117;1764:1;1761;1754:12;1778:117;1887:1;1884;1877:12;1914:552;1971:8;1981:6;2031:3;2024:4;2016:6;2012:17;2008:27;1998:122;;2039:79;;:::i;:::-;1998:122;2152:6;2139:20;2129:30;;2182:18;2174:6;2171:30;2168:117;;;2204:79;;:::i;:::-;2168:117;2318:4;2310:6;2306:17;2294:29;;2372:3;2364:4;2356:6;2352:17;2342:8;2338:32;2335:41;2332:128;;;2379:79;;:::i;:::-;2332:128;1914:552;;;;;:::o;2472:963::-;2569:6;2577;2585;2593;2601;2650:3;2638:9;2629:7;2625:23;2621:33;2618:120;;;2657:79;;:::i;:::-;2618:120;2777:1;2802:53;2847:7;2838:6;2827:9;2823:22;2802:53;:::i;:::-;2792:63;;2748:117;2904:2;2930:53;2975:7;2966:6;2955:9;2951:22;2930:53;:::i;:::-;2920:63;;2875:118;3032:2;3058:53;3103:7;3094:6;3083:9;3079:22;3058:53;:::i;:::-;3048:63;;3003:118;3188:2;3177:9;3173:18;3160:32;3219:18;3211:6;3208:30;3205:117;;;3241:79;;:::i;:::-;3205:117;3354:64;3410:7;3401:6;3390:9;3386:22;3354:64;:::i;:::-;3336:82;;;;3131:297;2472:963;;;;;;;;:::o;3441:149::-;3477:7;3517:66;3510:5;3506:78;3495:89;;3441:149;;;:::o;3596:115::-;3681:23;3698:5;3681:23;:::i;:::-;3676:3;3669:36;3596:115;;:::o;3717:218::-;3808:4;3846:2;3835:9;3831:18;3823:26;;3859:69;3925:1;3914:9;3910:17;3901:6;3859:69;:::i;:::-;3717:218;;;;:::o;3941:329::-;4000:6;4049:2;4037:9;4028:7;4024:23;4020:32;4017:119;;;4055:79;;:::i;:::-;4017:119;4175:1;4200:53;4245:7;4236:6;4225:9;4221:22;4200:53;:::i;:::-;4190:63;;4146:117;3941:329;;;;:::o;4276:118::-;4363:24;4381:5;4363:24;:::i;:::-;4358:3;4351:37;4276:118;;:::o;4400:222::-;4493:4;4531:2;4520:9;4516:18;4508:26;;4544:71;4612:1;4601:9;4597:17;4588:6;4544:71;:::i;:::-;4400:222;;;;:::o;4628:474::-;4696:6;4704;4753:2;4741:9;4732:7;4728:23;4724:32;4721:119;;;4759:79;;:::i;:::-;4721:119;4879:1;4904:53;4949:7;4940:6;4929:9;4925:22;4904:53;:::i;:::-;4894:63;;4850:117;5006:2;5032:53;5077:7;5068:6;5057:9;5053:22;5032:53;:::i;:::-;5022:63;;4977:118;4628:474;;;;;:::o;5108:118::-;5195:24;5213:5;5195:24;:::i;:::-;5190:3;5183:37;5108:118;;:::o;5232:222::-;5325:4;5363:2;5352:9;5348:18;5340:26;;5376:71;5444:1;5433:9;5429:17;5420:6;5376:71;:::i;:::-;5232:222;;;;:::o;5460:474::-;5528:6;5536;5585:2;5573:9;5564:7;5560:23;5556:32;5553:119;;;5591:79;;:::i;:::-;5553:119;5711:1;5736:53;5781:7;5772:6;5761:9;5757:22;5736:53;:::i;:::-;5726:63;;5682:117;5838:2;5864:53;5909:7;5900:6;5889:9;5885:22;5864:53;:::i;:::-;5854:63;;5809:118;5460:474;;;;;:::o;5940:90::-;5974:7;6017:5;6010:13;6003:21;5992:32;;5940:90;;;:::o;6036:109::-;6117:21;6132:5;6117:21;:::i;:::-;6112:3;6105:34;6036:109;;:::o;6151:430::-;6294:4;6332:2;6321:9;6317:18;6309:26;;6345:71;6413:1;6402:9;6398:17;6389:6;6345:71;:::i;:::-;6426:72;6494:2;6483:9;6479:18;6470:6;6426:72;:::i;:::-;6508:66;6570:2;6559:9;6555:18;6546:6;6508:66;:::i;:::-;6151:430;;;;;;:::o;6587:169::-;6671:11;6705:6;6700:3;6693:19;6745:4;6740:3;6736:14;6721:29;;6587:169;;;;:::o;6762:173::-;6902:25;6898:1;6890:6;6886:14;6879:49;6762:173;:::o;6941:366::-;7083:3;7104:67;7168:2;7163:3;7104:67;:::i;:::-;7097:74;;7180:93;7269:3;7180:93;:::i;:::-;7298:2;7293:3;7289:12;7282:19;;6941:366;;;:::o;7313:419::-;7479:4;7517:2;7506:9;7502:18;7494:26;;7566:9;7560:4;7556:20;7552:1;7541:9;7537:17;7530:47;7594:131;7720:4;7594:131;:::i;:::-;7586:139;;7313:419;;;:::o;7738:168::-;7821:11;7855:6;7850:3;7843:19;7895:4;7890:3;7886:14;7871:29;;7738:168;;;;:::o;7912:114::-;;:::o;8032:362::-;8173:3;8194:65;8257:1;8252:3;8194:65;:::i;:::-;8187:72;;8268:93;8357:3;8268:93;:::i;:::-;8386:1;8381:3;8377:11;8370:18;;8032:362;;;:::o;8400:748::-;8649:4;8687:3;8676:9;8672:19;8664:27;;8701:71;8769:1;8758:9;8754:17;8745:6;8701:71;:::i;:::-;8782:72;8850:2;8839:9;8835:18;8826:6;8782:72;:::i;:::-;8864;8932:2;8921:9;8917:18;8908:6;8864:72;:::i;:::-;8983:9;8977:4;8973:20;8968:2;8957:9;8953:18;8946:48;9011:130;9136:4;9011:130;:::i;:::-;9003:138;;8400:748;;;;;;:::o;9154:180::-;9202:77;9199:1;9192:88;9299:4;9296:1;9289:15;9323:4;9320:1;9313:15;9340:191;9380:3;9399:20;9417:1;9399:20;:::i;:::-;9394:25;;9433:20;9451:1;9433:20;:::i;:::-;9428:25;;9476:1;9473;9469:9;9462:16;;9497:3;9494:1;9491:10;9488:36;;;9504:18;;:::i;:::-;9488:36;9340:191;;;;:::o;9537:168::-;9677:20;9673:1;9665:6;9661:14;9654:44;9537:168;:::o;9711:366::-;9853:3;9874:67;9938:2;9933:3;9874:67;:::i;:::-;9867:74;;9950:93;10039:3;9950:93;:::i;:::-;10068:2;10063:3;10059:12;10052:19;;9711:366;;;:::o;10083:419::-;10249:4;10287:2;10276:9;10272:18;10264:26;;10336:9;10330:4;10326:20;10322:1;10311:9;10307:17;10300:47;10364:131;10490:4;10364:131;:::i;:::-;10356:139;;10083:419;;;:::o;10508:332::-;10629:4;10667:2;10656:9;10652:18;10644:26;;10680:71;10748:1;10737:9;10733:17;10724:6;10680:71;:::i;:::-;10761:72;10829:2;10818:9;10814:18;10805:6;10761:72;:::i;:::-;10508:332;;;;;:::o;10846:116::-;10916:21;10931:5;10916:21;:::i;:::-;10909:5;10906:32;10896:60;;10952:1;10949;10942:12;10896:60;10846:116;:::o;10968:137::-;11022:5;11053:6;11047:13;11038:22;;11069:30;11093:5;11069:30;:::i;:::-;10968:137;;;;:::o;11111:345::-;11178:6;11227:2;11215:9;11206:7;11202:23;11198:32;11195:119;;;11233:79;;:::i;:::-;11195:119;11353:1;11378:61;11431:7;11422:6;11411:9;11407:22;11378:61;:::i;:::-;11368:71;;11324:125;11111:345;;;;:::o;11462:143::-;11519:5;11550:6;11544:13;11535:22;;11566:33;11593:5;11566:33;:::i;:::-;11462:143;;;;:::o;11611:351::-;11681:6;11730:2;11718:9;11709:7;11705:23;11701:32;11698:119;;;11736:79;;:::i;:::-;11698:119;11856:1;11881:64;11937:7;11928:6;11917:9;11913:22;11881:64;:::i;:::-;11871:74;;11827:128;11611:351;;;;:::o;11968:410::-;12008:7;12031:20;12049:1;12031:20;:::i;:::-;12026:25;;12065:20;12083:1;12065:20;:::i;:::-;12060:25;;12120:1;12117;12113:9;12142:30;12160:11;12142:30;:::i;:::-;12131:41;;12321:1;12312:7;12308:15;12305:1;12302:22;12282:1;12275:9;12255:83;12232:139;;12351:18;;:::i;:::-;12232:139;12016:362;11968:410;;;;:::o;12384:180::-;12432:77;12429:1;12422:88;12529:4;12526:1;12519:15;12553:4;12550:1;12543:15;12570:185;12610:1;12627:20;12645:1;12627:20;:::i;:::-;12622:25;;12661:20;12679:1;12661:20;:::i;:::-;12656:25;;12700:1;12690:35;;12705:18;;:::i;:::-;12690:35;12747:1;12744;12740:9;12735:14;;12570:185;;;;:::o;12761:194::-;12801:4;12821:20;12839:1;12821:20;:::i;:::-;12816:25;;12855:20;12873:1;12855:20;:::i;:::-;12850:25;;12899:1;12896;12892:9;12884:17;;12923:1;12917:4;12914:11;12911:37;;;12928:18;;:::i;:::-;12911:37;12761:194;;;;:::o;12961:170::-;13101:22;13097:1;13089:6;13085:14;13078:46;12961:170;:::o;13137:366::-;13279:3;13300:67;13364:2;13359:3;13300:67;:::i;:::-;13293:74;;13376:93;13465:3;13376:93;:::i;:::-;13494:2;13489:3;13485:12;13478:19;;13137:366;;;:::o;13509:419::-;13675:4;13713:2;13702:9;13698:18;13690:26;;13762:9;13756:4;13752:20;13748:1;13737:9;13733:17;13726:47;13790:131;13916:4;13790:131;:::i;:::-;13782:139;;13509:419;;;:::o;13934:220::-;14074:34;14070:1;14062:6;14058:14;14051:58;14143:3;14138:2;14130:6;14126:15;14119:28;13934:220;:::o;14160:366::-;14302:3;14323:67;14387:2;14382:3;14323:67;:::i;:::-;14316:74;;14399:93;14488:3;14399:93;:::i;:::-;14517:2;14512:3;14508:12;14501:19;;14160:366;;;:::o;14532:419::-;14698:4;14736:2;14725:9;14721:18;14713:26;;14785:9;14779:4;14775:20;14771:1;14760:9;14756:17;14749:47;14813:131;14939:4;14813:131;:::i;:::-;14805:139;;14532:419;;;:::o;14957:225::-;15097:34;15093:1;15085:6;15081:14;15074:58;15166:8;15161:2;15153:6;15149:15;15142:33;14957:225;:::o;15188:366::-;15330:3;15351:67;15415:2;15410:3;15351:67;:::i;:::-;15344:74;;15427:93;15516:3;15427:93;:::i;:::-;15545:2;15540:3;15536:12;15529:19;;15188:366;;;:::o;15560:419::-;15726:4;15764:2;15753:9;15749:18;15741:26;;15813:9;15807:4;15803:20;15799:1;15788:9;15784:17;15777:47;15841:131;15967:4;15841:131;:::i;:::-;15833:139;;15560:419;;;:::o;15985:182::-;16125:34;16121:1;16113:6;16109:14;16102:58;15985:182;:::o;16173:366::-;16315:3;16336:67;16400:2;16395:3;16336:67;:::i;:::-;16329:74;;16412:93;16501:3;16412:93;:::i;:::-;16530:2;16525:3;16521:12;16514:19;;16173:366;;;:::o;16545:419::-;16711:4;16749:2;16738:9;16734:18;16726:26;;16798:9;16792:4;16788:20;16784:1;16773:9;16769:17;16762:47;16826:131;16952:4;16826:131;:::i;:::-;16818:139;;16545:419;;;:::o;16970:442::-;17119:4;17157:2;17146:9;17142:18;17134:26;;17170:71;17238:1;17227:9;17223:17;17214:6;17170:71;:::i;:::-;17251:72;17319:2;17308:9;17304:18;17295:6;17251:72;:::i;:::-;17333;17401:2;17390:9;17386:18;17377:6;17333:72;:::i;:::-;16970:442;;;;;;:::o;17418:229::-;17558:34;17554:1;17546:6;17542:14;17535:58;17627:12;17622:2;17614:6;17610:15;17603:37;17418:229;:::o;17653:366::-;17795:3;17816:67;17880:2;17875:3;17816:67;:::i;:::-;17809:74;;17892:93;17981:3;17892:93;:::i;:::-;18010:2;18005:3;18001:12;17994:19;;17653:366;;;:::o;18025:419::-;18191:4;18229:2;18218:9;18214:18;18206:26;;18278:9;18272:4;18268:20;18264:1;18253:9;18249:17;18242:47;18306:131;18432:4;18306:131;:::i;:::-;18298:139;;18025:419;;;:::o;18450:225::-;18590:34;18586:1;18578:6;18574:14;18567:58;18659:8;18654:2;18646:6;18642:15;18635:33;18450:225;:::o;18681:366::-;18823:3;18844:67;18908:2;18903:3;18844:67;:::i;:::-;18837:74;;18920:93;19009:3;18920:93;:::i;:::-;19038:2;19033:3;19029:12;19022:19;;18681:366;;;:::o;19053:419::-;19219:4;19257:2;19246:9;19242:18;19234:26;;19306:9;19300:4;19296:20;19292:1;19281:9;19277:17;19270:47;19334:131;19460:4;19334:131;:::i;:::-;19326:139;;19053:419;;;:::o;19478:98::-;19529:6;19563:5;19557:12;19547:22;;19478:98;;;:::o;19582:147::-;19683:11;19720:3;19705:18;;19582:147;;;;:::o;19735:246::-;19816:1;19826:113;19840:6;19837:1;19834:13;19826:113;;;19925:1;19920:3;19916:11;19910:18;19906:1;19901:3;19897:11;19890:39;19862:2;19859:1;19855:10;19850:15;;19826:113;;;19973:1;19964:6;19959:3;19955:16;19948:27;19797:184;19735:246;;;:::o;19987:386::-;20091:3;20119:38;20151:5;20119:38;:::i;:::-;20173:88;20254:6;20249:3;20173:88;:::i;:::-;20166:95;;20270:65;20328:6;20323:3;20316:4;20309:5;20305:16;20270:65;:::i;:::-;20360:6;20355:3;20351:16;20344:23;;20095:278;19987:386;;;;:::o;20379:271::-;20509:3;20531:93;20620:3;20611:6;20531:93;:::i;:::-;20524:100;;20641:3;20634:10;;20379:271;;;;:::o;20656:179::-;20796:31;20792:1;20784:6;20780:14;20773:55;20656:179;:::o;20841:366::-;20983:3;21004:67;21068:2;21063:3;21004:67;:::i;:::-;20997:74;;21080:93;21169:3;21080:93;:::i;:::-;21198:2;21193:3;21189:12;21182:19;;20841:366;;;:::o;21213:419::-;21379:4;21417:2;21406:9;21402:18;21394:26;;21466:9;21460:4;21456:20;21452:1;21441:9;21437:17;21430:47;21494:131;21620:4;21494:131;:::i;:::-;21486:139;;21213:419;;;:::o;21638:99::-;21690:6;21724:5;21718:12;21708:22;;21638:99;;;:::o;21743:102::-;21784:6;21835:2;21831:7;21826:2;21819:5;21815:14;21811:28;21801:38;;21743:102;;;:::o;21851:377::-;21939:3;21967:39;22000:5;21967:39;:::i;:::-;22022:71;22086:6;22081:3;22022:71;:::i;:::-;22015:78;;22102:65;22160:6;22155:3;22148:4;22141:5;22137:16;22102:65;:::i;:::-;22192:29;22214:6;22192:29;:::i;:::-;22187:3;22183:39;22176:46;;21943:285;21851:377;;;;:::o;22234:313::-;22347:4;22385:2;22374:9;22370:18;22362:26;;22434:9;22428:4;22424:20;22420:1;22409:9;22405:17;22398:47;22462:78;22535:4;22526:6;22462:78;:::i;:::-;22454:86;;22234:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2189600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AdminAddToken(uint256)": "infinite",
								"AdminWithDrawToken(uint256,address)": "infinite",
								"Deposit(uint256)": "infinite",
								"DepositNFT(uint256,uint256)": "infinite",
								"Details(address)": "infinite",
								"ERC20Address()": "2581",
								"ERC721address()": "2603",
								"Reward(address)": "2837",
								"TotalToken()": "2519",
								"UpdateERC20(address)": "27054",
								"UpdateERC721(address)": "27074",
								"UpdateRatePersentage(uint256)": "24916",
								"UserRate(address)": "infinite",
								"Utilization()": "infinite",
								"Withdraw()": "infinite",
								"calculateIntrest(address)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2545",
								"renounceOwnership()": "30465",
								"showReward(address)": "infinite",
								"transferOwnership(address)": "30854",
								"withdrawNFT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1269,
									"end": 1470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1379,
									"end": 1393,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1376,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1363,
									"end": 1376,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1393,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1425,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1403,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1403,
									"end": 1425,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1403,
									"end": 1425,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1403,
									"end": 1425,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1403,
									"end": 1425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1450,
									"end": 1463,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1447,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1435,
									"end": 1447,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1463,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 8432,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206c81ab5d20856bfdda126e5ea253c7651e1afb03338f0c3ec4d00dc7b0e84a1864736f6c63430008130033",
									".code": [
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "C45AF5D8"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "C45AF5D8"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "E4458B30"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "E88CC2BE"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "EE0106D2"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "F89D832F"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "934ED772"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "A6021ACE"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "B7171A2E"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "C0CD40EE"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "57488064"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "57488064"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "57EA89B6"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "7B2F247F"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "866E58AF"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "8B73E331"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "23245D7"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "275BD33F"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "3F601972"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "4D6CE1E5"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8432,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 8005,
											"end": 8254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 8005,
											"end": 8254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 8259,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 8259,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 8259,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6788,
											"end": 6895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 503,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 503,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2873,
											"end": 3482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2873,
											"end": 3482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 796,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 796,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3677,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2402,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2402,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2062,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2062,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5758,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5758,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5758,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 7430,
											"end": 7793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 7430,
											"end": 7793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 470,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 470,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 436,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 436,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1696,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1696,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4771,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4771,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 841,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 841,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 748,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 748,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6502,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7077,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7077,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8077,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8078,
											"end": 8088,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8089,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8069,
											"end": 8095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 8061,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 8061,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8140,
											"end": 8153,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8171,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8132,
											"end": 8171,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8171,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8197,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8206,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 8132,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8235,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8246,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8227,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8357,
											"end": 8363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8423,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 8382,
											"end": 8423,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8382,
											"end": 8423,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6875,
											"end": 6888,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6860,
											"end": 6872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 503,
											"end": 525,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 503,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2935,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2946,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2947,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2928,
											"end": 2953,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2978,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2968,
											"end": 2978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2968,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3010,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3021,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3022,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3003,
											"end": 3061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3082,
											"end": 3094,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3075,
											"end": 3112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3197,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3187,
											"end": 3197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3187,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3262,
											"end": 3272,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3245,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3273,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 3245,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3222,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3335,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3345,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3316,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3316,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3294,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3429,
											"end": 3439,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3449,
											"end": 3453,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3398,
											"end": 3410,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3428,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3428,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3391,
											"end": 3428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3391,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2924,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3677,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3740,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3741,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3722,
											"end": 3747,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3714,
											"end": 3769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3714,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3791,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3802,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3824,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3856,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3857,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3867,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3824,
											"end": 3867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3824,
											"end": 3867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3912,
											"end": 3922,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3895,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3895,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3881,
											"end": 3923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3881,
											"end": 3923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 3958,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3976,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3937,
											"end": 3976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3976,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 3985,
											"end": 3989,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3992,
											"end": 4002,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4011,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4022,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4023,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4031,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4003,
											"end": 4031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4031,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3937,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 4035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4078,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4049,
											"end": 4078,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4078,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4115,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4126,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4091,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4091,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4049,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4049,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4157,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4168,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4196,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4208,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4247,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4307,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4318,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4329,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4374,
											"end": 4384,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4357,
											"end": 4385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4385,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4357,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4428,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4399,
											"end": 4428,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4428,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4429,
											"end": 4439,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4476,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4441,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4441,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4441,
											"end": 4477,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4441,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4441,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4399,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4399,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4516,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 4568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4272,
											"end": 4568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3779,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2479,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2546,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2536,
											"end": 2546,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2534,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2513,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2483,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2483,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2483,
											"end": 2534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2483,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2534,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2483,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2482,
											"end": 2546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2482,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2546,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2482,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2402,
											"end": 2580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2175,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2141,
											"end": 2174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2141,
											"end": 2187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5847,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5839,
											"end": 5858,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 6314,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5835,
											"end": 6314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5982,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5983,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5993,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5971,
											"end": 5993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 5993,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5968,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5953,
											"end": 5993,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5953,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5993,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5953,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5952,
											"end": 5997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5952,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5997,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5952,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5933,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5937,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5938,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5947,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5907,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5911,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5912,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5922,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5900,
											"end": 5947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5900,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 5947,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5900,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5899,
											"end": 5998,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5899,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5998,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5899,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6031,
											"end": 6040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6031,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 6314,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5835,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6222,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6207,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6196,
											"end": 6218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6218,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6193,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6178,
											"end": 6218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6178,
											"end": 6218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6218,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6178,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6177,
											"end": 6222,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6177,
											"end": 6222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6222,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6177,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6172,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6168,
											"end": 6172,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6150,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6154,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6155,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6143,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6143,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6142,
											"end": 6223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6142,
											"end": 6223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6142,
											"end": 6223,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6142,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6271,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6256,
											"end": 6265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6256,
											"end": 6271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6256,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7511,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7522,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7523,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7496,
											"end": 7553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7496,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7580,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7581,
											"end": 7591,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7592,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7572,
											"end": 7598,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7571,
											"end": 7598,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 7563,
											"end": 7635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 7563,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7678,
											"end": 7683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7692,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7653,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7664,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7748,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7748,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7748,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 7749,
											"end": 7759,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7772,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7782,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7709,
											"end": 7786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1773,
											"end": 1780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1759,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1759,
											"end": 1780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1828,
											"end": 1838,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1852,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1862,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1790,
											"end": 1827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1790,
											"end": 1863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4863,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4867,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 5479,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4851,
											"end": 5479,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 4987,
											"end": 4994,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 4998,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4984,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4969,
											"end": 5009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4969,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5009,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4969,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4968,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 4968,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4953,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4954,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4941,
											"end": 4963,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4923,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4927,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4938,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4916,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4916,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4915,
											"end": 5014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4915,
											"end": 5014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 5014,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4915,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 5014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 5014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5062,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5047,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5106,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5110,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5099,
											"end": 5121,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5085,
											"end": 5121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 5085,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5121,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5085,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5121,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5168,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5142,
											"end": 5168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5142,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5142,
											"end": 5168,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5142,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5135,
											"end": 5168,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 5479,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4851,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5313,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 5287,
											"end": 5294,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5298,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5284,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5269,
											"end": 5309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5269,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5269,
											"end": 5309,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5269,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5268,
											"end": 5313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5268,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5313,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5268,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5263,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5263,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5241,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5245,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5246,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5256,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5234,
											"end": 5263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5233,
											"end": 5314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5233,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5314,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5233,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5362,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5347,
											"end": 5356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5347,
											"end": 5362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5347,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5362,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5347,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5406,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5410,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5411,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5421,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5385,
											"end": 5421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 5385,
											"end": 5421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5421,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5385,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5468,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5442,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5468,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 5494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 841,
											"end": 888,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 841,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 748,
											"end": 790,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 748,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6590,
											"end": 6604,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6574,
											"end": 6587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6604,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6502,
											"end": 6611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7165,
											"end": 7180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7158,
											"end": 7180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7180,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7158,
											"end": 7180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1139,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 902,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 875,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 1649,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1532,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1643,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1655,
											"end": 1772,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1655,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1778,
											"end": 1895,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 1778,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1889,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2024,
											"end": 2028,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2012,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2035,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 1998,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2159,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2159,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2171,
											"end": 2201,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2168,
											"end": 2285,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2168,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2168,
											"end": 2285,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2204,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2204,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2283,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 2204,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2168,
											"end": 2285,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2168,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2322,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2306,
											"end": 2323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2323,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2372,
											"end": 2375,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2364,
											"end": 2368,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2356,
											"end": 2362,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2352,
											"end": 2369,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2342,
											"end": 2350,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2338,
											"end": 2370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2376,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2460,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2332,
											"end": 2460,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2379,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2379,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2460,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 2332,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2638,
											"end": 2647,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2654,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2738,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2618,
											"end": 2738,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2657,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 2738,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2618,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 2847,
											"end": 2854,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2836,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2802,
											"end": 2855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2855,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 2802,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2855,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2748,
											"end": 2865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2904,
											"end": 2906,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2973,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 2930,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 2983,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 2930,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2983,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2875,
											"end": 2993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3034,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3058,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3111,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3111,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3190,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3173,
											"end": 3191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3160,
											"end": 3192,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3237,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3238,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3241,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3241,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3241,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3241,
											"end": 3320,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3241,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3354,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 3354,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3418,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3418,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2472,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3590,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3441,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3583,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3584,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3495,
											"end": 3584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3590,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3441,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3711,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3596,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 3698,
											"end": 3703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3681,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3704,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 3681,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3676,
											"end": 3679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3596,
											"end": 3711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3935,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 3717,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3848,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3823,
											"end": 3849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3927,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3859,
											"end": 3928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3928,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 3859,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3935,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3717,
											"end": 3935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 4270,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4046,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4024,
											"end": 4047,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4052,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4136,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4017,
											"end": 4136,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4055,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 4055,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4055,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4055,
											"end": 4134,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 4055,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4136,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4017,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4245,
											"end": 4252,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4221,
											"end": 4243,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 4200,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4253,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4200,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4146,
											"end": 4263,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 4270,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 4270,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 4270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 4270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 4270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 4381,
											"end": 4386,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4363,
											"end": 4387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4387,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 4363,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4388,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4622,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 4400,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4544,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4597,
											"end": 4614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4594,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4544,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 4544,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4544,
											"end": 4615,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 4544,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4622,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4622,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4710,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4755,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4750,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4739,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4724,
											"end": 4756,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4759,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4925,
											"end": 4947,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4904,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5032,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5077,
											"end": 5084,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5057,
											"end": 5066,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5075,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5032,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5032,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5032,
											"end": 5085,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5032,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5095,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4628,
											"end": 5102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 5195,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5219,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5195,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5220,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5108,
											"end": 5226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5108,
											"end": 5226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5454,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 5232,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5444,
											"end": 5445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 5376,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5454,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5454,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5232,
											"end": 5454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5528,
											"end": 5534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5564,
											"end": 5571,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5556,
											"end": 5588,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5553,
											"end": 5672,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5553,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 5553,
											"end": 5672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5591,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 5591,
											"end": 5670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5670,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5591,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5553,
											"end": 5672,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 5553,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5781,
											"end": 5788,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5761,
											"end": 5770,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5757,
											"end": 5779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5736,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 5736,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5736,
											"end": 5789,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5736,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5726,
											"end": 5789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5909,
											"end": 5916,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 5864,
											"end": 5917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 5927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 6030,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 5940,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 5981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6022,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6010,
											"end": 6023,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6003,
											"end": 6024,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5992,
											"end": 6024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5992,
											"end": 6024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 6030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 6030,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 6030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5940,
											"end": 6030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6145,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6036,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 6132,
											"end": 6137,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 6117,
											"end": 6138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6112,
											"end": 6115,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6105,
											"end": 6139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6294,
											"end": 6298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6321,
											"end": 6330,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6309,
											"end": 6335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 6413,
											"end": 6414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6411,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6398,
											"end": 6415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6389,
											"end": 6395,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 6345,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 6345,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 6426,
											"end": 6498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6426,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6559,
											"end": 6568,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6573,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 6508,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6508,
											"end": 6574,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6508,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6756,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 6587,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 6682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6693,
											"end": 6712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6745,
											"end": 6749,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6740,
											"end": 6743,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6721,
											"end": 6750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6721,
											"end": 6750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6756,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6756,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6762,
											"end": 6935,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 6762,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6902,
											"end": 6927,
											"name": "PUSH",
											"source": 11,
											"value": "506C65617365204669727374205374616B65204E465473000000000000000000"
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6886,
											"end": 6900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6928,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6762,
											"end": 6935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6762,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7083,
											"end": 7086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 7104,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7097,
											"end": 7171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7097,
											"end": 7171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7269,
											"end": 7272,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 7180,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7296,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 7307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7519,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7494,
											"end": 7520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7494,
											"end": 7520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7560,
											"end": 7564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7552,
											"end": 7553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 7720,
											"end": 7724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 7594,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7586,
											"end": 7725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7586,
											"end": 7725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7313,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7906,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 7738,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7821,
											"end": 7832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7855,
											"end": 7861,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7843,
											"end": 7862,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7895,
											"end": 7899,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7886,
											"end": 7900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7906,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 7906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7912,
											"end": 8026,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 7912,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7912,
											"end": 8026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7912,
											"end": 8026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8394,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 8032,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8173,
											"end": 8176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 8257,
											"end": 8258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 8194,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8194,
											"end": 8259,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 8194,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8187,
											"end": 8259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8187,
											"end": 8259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 8357,
											"end": 8360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 8268,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 8268,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8377,
											"end": 8388,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8394,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8649,
											"end": 8653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8687,
											"end": 8690,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8676,
											"end": 8685,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8672,
											"end": 8691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8664,
											"end": 8691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8664,
											"end": 8691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 8769,
											"end": 8770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8754,
											"end": 8771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8745,
											"end": 8751,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 8701,
											"end": 8772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8701,
											"end": 8772,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 8701,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 8850,
											"end": 8852,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8848,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8835,
											"end": 8853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 8782,
											"end": 8854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8782,
											"end": 8854,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 8782,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 8932,
											"end": 8934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8921,
											"end": 8930,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8914,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 8864,
											"end": 8936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 8936,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 8864,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8983,
											"end": 8992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8977,
											"end": 8981,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8993,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8968,
											"end": 8970,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8957,
											"end": 8966,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8953,
											"end": 8971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8946,
											"end": 8994,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 9136,
											"end": 9140,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 9011,
											"end": 9141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9141,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 9011,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9003,
											"end": 9141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9003,
											"end": 9141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 9148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9154,
											"end": 9334,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 9154,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9202,
											"end": 9279,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9299,
											"end": 9303,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9289,
											"end": 9304,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9328,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9531,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 9340,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9380,
											"end": 9383,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9399,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 9417,
											"end": 9418,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9399,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9419,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 9399,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9394,
											"end": 9419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9394,
											"end": 9419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9433,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9433,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9433,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9433,
											"end": 9453,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 9433,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9453,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9453,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9469,
											"end": 9478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9462,
											"end": 9478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9462,
											"end": 9478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9497,
											"end": 9500,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9494,
											"end": 9495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9491,
											"end": 9501,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9488,
											"end": 9524,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9488,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9488,
											"end": 9524,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 9504,
											"end": 9522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9488,
											"end": 9524,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9488,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9531,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9531,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9531,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9531,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9537,
											"end": 9705,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 9537,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9677,
											"end": 9697,
											"name": "PUSH",
											"source": 11,
											"value": "506C65617365204669727374205374616B650000000000000000000000000000"
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9661,
											"end": 9675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9698,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9537,
											"end": 9705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9537,
											"end": 9705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 10077,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 9711,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9853,
											"end": 9856,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9874,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 9938,
											"end": 9940,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 9933,
											"end": 9936,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9874,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9874,
											"end": 9941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9874,
											"end": 9941,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 9874,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9941,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9867,
											"end": 9941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9950,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 10039,
											"end": 10042,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9950,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 9950,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9950,
											"end": 10043,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 9950,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10068,
											"end": 10070,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10059,
											"end": 10071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 10077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 10077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 10077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 10077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10083,
											"end": 10502,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 10083,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10287,
											"end": 10289,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10276,
											"end": 10285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10272,
											"end": 10290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10264,
											"end": 10290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10264,
											"end": 10290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10336,
											"end": 10345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10330,
											"end": 10334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10326,
											"end": 10346,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10322,
											"end": 10323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10320,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10307,
											"end": 10324,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10300,
											"end": 10347,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10364,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 10490,
											"end": 10494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10364,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 10364,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10364,
											"end": 10495,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 10364,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10083,
											"end": 10502,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10083,
											"end": 10502,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10083,
											"end": 10502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10083,
											"end": 10502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10669,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10656,
											"end": 10665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10644,
											"end": 10670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 10748,
											"end": 10749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10746,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10733,
											"end": 10750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10724,
											"end": 10730,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 10680,
											"end": 10751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10751,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 10680,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 10829,
											"end": 10831,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10827,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10811,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 10761,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 10761,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10508,
											"end": 10840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10962,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 10846,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10916,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 10931,
											"end": 10936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10916,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 10916,
											"end": 10937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10916,
											"end": 10937,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 10916,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10909,
											"end": 10914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10906,
											"end": 10938,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10896,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 10896,
											"end": 10956,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10952,
											"end": 10953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 10950,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10942,
											"end": 10954,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10896,
											"end": 10956,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 10896,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 11105,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 10968,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11022,
											"end": 11027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11047,
											"end": 11060,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11038,
											"end": 11060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11038,
											"end": 11060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 11093,
											"end": 11098,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 11069,
											"end": 11099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 11069,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 11105,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 11105,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 11105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 11105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10968,
											"end": 11105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11456,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 11111,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11178,
											"end": 11184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11215,
											"end": 11224,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11206,
											"end": 11213,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11202,
											"end": 11225,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11198,
											"end": 11230,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11195,
											"end": 11314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11195,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 11195,
											"end": 11314,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11233,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 11233,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 11233,
											"end": 11312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11233,
											"end": 11312,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 11233,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11195,
											"end": 11314,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 11195,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11378,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11422,
											"end": 11428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11411,
											"end": 11420,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11407,
											"end": 11429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11378,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 11378,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11378,
											"end": 11439,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 11378,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11368,
											"end": 11439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11368,
											"end": 11439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11324,
											"end": 11449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11456,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11456,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11111,
											"end": 11456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11605,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 11462,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11519,
											"end": 11524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11544,
											"end": 11557,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11535,
											"end": 11557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11535,
											"end": 11557,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 11593,
											"end": 11598,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 11566,
											"end": 11599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11599,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 11566,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11962,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 11611,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11681,
											"end": 11687,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11730,
											"end": 11732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11718,
											"end": 11727,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11709,
											"end": 11716,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 11728,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11701,
											"end": 11733,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11698,
											"end": 11817,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11698,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11698,
											"end": 11817,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 11736,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 11736,
											"end": 11815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11736,
											"end": 11815,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 11736,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11698,
											"end": 11817,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11698,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11856,
											"end": 11857,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11881,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 11937,
											"end": 11944,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11928,
											"end": 11934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11917,
											"end": 11926,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11913,
											"end": 11935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 11881,
											"end": 11945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11945,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 11881,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11945,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11827,
											"end": 11955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11962,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11962,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11962,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 12378,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 11968,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12008,
											"end": 12015,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 12049,
											"end": 12050,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12031,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12031,
											"end": 12051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12031,
											"end": 12051,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 12031,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12026,
											"end": 12051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12026,
											"end": 12051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12065,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 12083,
											"end": 12084,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12065,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12065,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12065,
											"end": 12085,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 12065,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12060,
											"end": 12085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12060,
											"end": 12085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12117,
											"end": 12118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12113,
											"end": 12122,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 12160,
											"end": 12171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12142,
											"end": 12172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 12142,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12131,
											"end": 12172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12131,
											"end": 12172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12321,
											"end": 12322,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12312,
											"end": 12319,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12308,
											"end": 12323,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12306,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12302,
											"end": 12324,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12275,
											"end": 12284,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12255,
											"end": 12338,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12232,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 12232,
											"end": 12371,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12351,
											"end": 12369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12232,
											"end": 12371,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 12232,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12016,
											"end": 12378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 12378,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 12378,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 12378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 12378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 12378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12384,
											"end": 12564,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 12384,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12432,
											"end": 12509,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12429,
											"end": 12430,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12422,
											"end": 12510,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12529,
											"end": 12533,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 12526,
											"end": 12527,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12519,
											"end": 12534,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12553,
											"end": 12557,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12543,
											"end": 12558,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12755,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 12570,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12610,
											"end": 12611,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12627,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 12645,
											"end": 12646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12627,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12627,
											"end": 12647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12627,
											"end": 12647,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 12627,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12622,
											"end": 12647,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12622,
											"end": 12647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12661,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 12679,
											"end": 12680,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12661,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12661,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12661,
											"end": 12681,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 12661,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12681,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12700,
											"end": 12701,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 12690,
											"end": 12725,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 12705,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12725,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 12690,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12747,
											"end": 12748,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12744,
											"end": 12745,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12740,
											"end": 12749,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12755,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12755,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12955,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 12761,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12801,
											"end": 12805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12821,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 12839,
											"end": 12840,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12821,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12821,
											"end": 12841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12821,
											"end": 12841,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 12821,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 12873,
											"end": 12874,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 12855,
											"end": 12875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12850,
											"end": 12875,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12850,
											"end": 12875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12899,
											"end": 12900,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12896,
											"end": 12897,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12892,
											"end": 12901,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12884,
											"end": 12901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12884,
											"end": 12901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12917,
											"end": 12921,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12914,
											"end": 12925,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12911,
											"end": 12948,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12911,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12911,
											"end": 12948,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12928,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 12928,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 12928,
											"end": 12946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12928,
											"end": 12946,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 12928,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12911,
											"end": 12948,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12911,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12955,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12955,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12761,
											"end": 12955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 13131,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 12961,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13101,
											"end": 13123,
											"name": "PUSH",
											"source": 11,
											"value": "4669727374204465706F73697420546F6B656E73000000000000000000000000"
										},
										{
											"begin": 13097,
											"end": 13098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13085,
											"end": 13099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13078,
											"end": 13124,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 13131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 13131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 13364,
											"end": 13366,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13359,
											"end": 13362,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 13300,
											"end": 13367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13293,
											"end": 13367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13293,
											"end": 13367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 13465,
											"end": 13468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 13376,
											"end": 13469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13494,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13489,
											"end": 13492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13485,
											"end": 13497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13478,
											"end": 13497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13478,
											"end": 13497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13675,
											"end": 13679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13715,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13702,
											"end": 13711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13698,
											"end": 13716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 13716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13690,
											"end": 13716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13762,
											"end": 13771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13756,
											"end": 13760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13772,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13748,
											"end": 13749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13733,
											"end": 13750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13726,
											"end": 13773,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13916,
											"end": 13920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 13790,
											"end": 13921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13782,
											"end": 13921,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13782,
											"end": 13921,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13509,
											"end": 13928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13934,
											"end": 14154,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 13934,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14074,
											"end": 14108,
											"name": "PUSH",
											"source": 11,
											"value": "506C6561736520556E7374616B6520796F7572206465706F7369746564204E46"
										},
										{
											"begin": 14070,
											"end": 14071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14068,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14058,
											"end": 14072,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14051,
											"end": 14109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14143,
											"end": 14146,
											"name": "PUSH",
											"source": 11,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14138,
											"end": 14140,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14130,
											"end": 14136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14119,
											"end": 14147,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13934,
											"end": 14154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13934,
											"end": 14154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14526,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 14160,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14302,
											"end": 14305,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14323,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 14387,
											"end": 14389,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 14382,
											"end": 14385,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14323,
											"end": 14390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 14323,
											"end": 14390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14323,
											"end": 14390,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 14323,
											"end": 14390,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14390,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14316,
											"end": 14390,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14399,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 14488,
											"end": 14491,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14399,
											"end": 14492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 14399,
											"end": 14492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14399,
											"end": 14492,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 14399,
											"end": 14492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14517,
											"end": 14519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14512,
											"end": 14515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14508,
											"end": 14520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14501,
											"end": 14520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14501,
											"end": 14520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14526,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14526,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14160,
											"end": 14526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14532,
											"end": 14951,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 14532,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14698,
											"end": 14702,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14736,
											"end": 14738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14725,
											"end": 14734,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14721,
											"end": 14739,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14713,
											"end": 14739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14713,
											"end": 14739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14785,
											"end": 14794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14779,
											"end": 14783,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14795,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14771,
											"end": 14772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14760,
											"end": 14769,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14756,
											"end": 14773,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14749,
											"end": 14796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14813,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 14939,
											"end": 14943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14813,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 14813,
											"end": 14944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14813,
											"end": 14944,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 14813,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14805,
											"end": 14944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14532,
											"end": 14951,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14532,
											"end": 14951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14532,
											"end": 14951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14532,
											"end": 14951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14957,
											"end": 15182,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 14957,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15097,
											"end": 15131,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15093,
											"end": 15094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15085,
											"end": 15091,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15081,
											"end": 15095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15074,
											"end": 15132,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15166,
											"end": 15174,
											"name": "PUSH",
											"source": 11,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15161,
											"end": 15163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15153,
											"end": 15159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15149,
											"end": 15164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14957,
											"end": 15182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14957,
											"end": 15182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15188,
											"end": 15554,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 15188,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15330,
											"end": 15333,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15351,
											"end": 15418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 15415,
											"end": 15417,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 15410,
											"end": 15413,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15351,
											"end": 15418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 15351,
											"end": 15418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15351,
											"end": 15418,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 15351,
											"end": 15418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15344,
											"end": 15418,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15344,
											"end": 15418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15427,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 15516,
											"end": 15519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15427,
											"end": 15520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 15427,
											"end": 15520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15427,
											"end": 15520,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 15427,
											"end": 15520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15545,
											"end": 15547,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15540,
											"end": 15543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15536,
											"end": 15548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15529,
											"end": 15548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15529,
											"end": 15548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15188,
											"end": 15554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15188,
											"end": 15554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15188,
											"end": 15554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15188,
											"end": 15554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15560,
											"end": 15979,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 15560,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15726,
											"end": 15730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15753,
											"end": 15762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15749,
											"end": 15767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15741,
											"end": 15767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15741,
											"end": 15767,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15813,
											"end": 15822,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15807,
											"end": 15811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15803,
											"end": 15823,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15799,
											"end": 15800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15788,
											"end": 15797,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15784,
											"end": 15801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15777,
											"end": 15824,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15841,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 15967,
											"end": 15971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15841,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 15841,
											"end": 15972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15841,
											"end": 15972,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 15841,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15833,
											"end": 15972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15833,
											"end": 15972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15560,
											"end": 15979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15560,
											"end": 15979,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15560,
											"end": 15979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15560,
											"end": 15979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16167,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 15985,
											"end": 16167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16125,
											"end": 16159,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16121,
											"end": 16122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16113,
											"end": 16119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16109,
											"end": 16123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16102,
											"end": 16160,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15985,
											"end": 16167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16173,
											"end": 16539,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 16173,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16315,
											"end": 16318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16336,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 16400,
											"end": 16402,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16395,
											"end": 16398,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16336,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 16336,
											"end": 16403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16336,
											"end": 16403,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 16336,
											"end": 16403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16329,
											"end": 16403,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16329,
											"end": 16403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16412,
											"end": 16505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 16501,
											"end": 16504,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16412,
											"end": 16505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 16412,
											"end": 16505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16412,
											"end": 16505,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 16412,
											"end": 16505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16530,
											"end": 16532,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16525,
											"end": 16528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16521,
											"end": 16533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16514,
											"end": 16533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16514,
											"end": 16533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16173,
											"end": 16539,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16173,
											"end": 16539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16173,
											"end": 16539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16173,
											"end": 16539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16964,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 16545,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16711,
											"end": 16715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16749,
											"end": 16751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16738,
											"end": 16747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16734,
											"end": 16752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16726,
											"end": 16752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16726,
											"end": 16752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16798,
											"end": 16807,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16792,
											"end": 16796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16788,
											"end": 16808,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16784,
											"end": 16785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16782,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16769,
											"end": 16786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16762,
											"end": 16809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16952,
											"end": 16956,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 16826,
											"end": 16957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16826,
											"end": 16957,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16826,
											"end": 16957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16818,
											"end": 16957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16818,
											"end": 16957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16964,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16964,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16545,
											"end": 16964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17119,
											"end": 17123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17159,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 17146,
											"end": 17155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17142,
											"end": 17160,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17134,
											"end": 17160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17134,
											"end": 17160,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17170,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 17238,
											"end": 17239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17227,
											"end": 17236,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17223,
											"end": 17240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17214,
											"end": 17220,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17170,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 17170,
											"end": 17241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17170,
											"end": 17241,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 17170,
											"end": 17241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17251,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 17319,
											"end": 17321,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17308,
											"end": 17317,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17304,
											"end": 17322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17301,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17251,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 17251,
											"end": 17323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17251,
											"end": 17323,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 17251,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17333,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 17401,
											"end": 17403,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17390,
											"end": 17399,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17386,
											"end": 17404,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17377,
											"end": 17383,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17333,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 17333,
											"end": 17405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17333,
											"end": 17405,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 17333,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16970,
											"end": 17412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17418,
											"end": 17647,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 17418,
											"end": 17647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17558,
											"end": 17592,
											"name": "PUSH",
											"source": 11,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 17554,
											"end": 17555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17546,
											"end": 17552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17542,
											"end": 17556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17535,
											"end": 17593,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17627,
											"end": 17639,
											"name": "PUSH",
											"source": 11,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 17622,
											"end": 17624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17614,
											"end": 17620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17610,
											"end": 17625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17603,
											"end": 17640,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17418,
											"end": 17647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17418,
											"end": 17647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17653,
											"end": 18019,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 17653,
											"end": 18019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17795,
											"end": 17798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17816,
											"end": 17883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 17880,
											"end": 17882,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 17875,
											"end": 17878,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17816,
											"end": 17883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 17816,
											"end": 17883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17816,
											"end": 17883,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 17816,
											"end": 17883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17809,
											"end": 17883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17809,
											"end": 17883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17892,
											"end": 17985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 17981,
											"end": 17984,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17892,
											"end": 17985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 17892,
											"end": 17985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17892,
											"end": 17985,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 17892,
											"end": 17985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18010,
											"end": 18012,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18008,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18001,
											"end": 18013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17994,
											"end": 18013,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17994,
											"end": 18013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17653,
											"end": 18019,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17653,
											"end": 18019,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17653,
											"end": 18019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17653,
											"end": 18019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18025,
											"end": 18444,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 18025,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18191,
											"end": 18195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18229,
											"end": 18231,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18218,
											"end": 18227,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18214,
											"end": 18232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18206,
											"end": 18232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18206,
											"end": 18232,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18278,
											"end": 18287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18272,
											"end": 18276,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18268,
											"end": 18288,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18264,
											"end": 18265,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18253,
											"end": 18262,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18249,
											"end": 18266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18306,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 18432,
											"end": 18436,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18306,
											"end": 18437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 18306,
											"end": 18437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18306,
											"end": 18437,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 18306,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18298,
											"end": 18437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18298,
											"end": 18437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18025,
											"end": 18444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18025,
											"end": 18444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18025,
											"end": 18444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18025,
											"end": 18444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18450,
											"end": 18675,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 18450,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18590,
											"end": 18624,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 18586,
											"end": 18587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18578,
											"end": 18584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18574,
											"end": 18588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18567,
											"end": 18625,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18659,
											"end": 18667,
											"name": "PUSH",
											"source": 11,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18654,
											"end": 18656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18646,
											"end": 18652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18642,
											"end": 18657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18635,
											"end": 18668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18450,
											"end": 18675,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18450,
											"end": 18675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18681,
											"end": 19047,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 18681,
											"end": 19047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18823,
											"end": 18826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18844,
											"end": 18911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 18908,
											"end": 18910,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 18903,
											"end": 18906,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18844,
											"end": 18911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 18844,
											"end": 18911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18844,
											"end": 18911,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 18844,
											"end": 18911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18837,
											"end": 18911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18837,
											"end": 18911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18920,
											"end": 19013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 19009,
											"end": 19012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18920,
											"end": 19013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 18920,
											"end": 19013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18920,
											"end": 19013,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 18920,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19038,
											"end": 19040,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19033,
											"end": 19036,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19029,
											"end": 19041,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19022,
											"end": 19041,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19022,
											"end": 19041,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18681,
											"end": 19047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18681,
											"end": 19047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18681,
											"end": 19047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18681,
											"end": 19047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19219,
											"end": 19223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19259,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19246,
											"end": 19255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19242,
											"end": 19260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19234,
											"end": 19260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19234,
											"end": 19260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19306,
											"end": 19315,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19300,
											"end": 19304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19296,
											"end": 19316,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19292,
											"end": 19293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19281,
											"end": 19290,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19277,
											"end": 19294,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19270,
											"end": 19317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 19460,
											"end": 19464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 19334,
											"end": 19465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 19334,
											"end": 19465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19326,
											"end": 19465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19326,
											"end": 19465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19053,
											"end": 19472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19053,
											"end": 19472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19478,
											"end": 19576,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 19478,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19529,
											"end": 19535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19563,
											"end": 19568,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19557,
											"end": 19569,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19547,
											"end": 19569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19547,
											"end": 19569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19478,
											"end": 19576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19478,
											"end": 19576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19478,
											"end": 19576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19478,
											"end": 19576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19729,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 19582,
											"end": 19729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19683,
											"end": 19694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19720,
											"end": 19723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19705,
											"end": 19723,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19705,
											"end": 19723,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19729,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19582,
											"end": 19729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19981,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 19735,
											"end": 19981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19816,
											"end": 19817,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19840,
											"end": 19846,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19837,
											"end": 19838,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19834,
											"end": 19847,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19925,
											"end": 19926,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19920,
											"end": 19923,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19916,
											"end": 19927,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19910,
											"end": 19928,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19906,
											"end": 19907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19901,
											"end": 19904,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19897,
											"end": 19908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19890,
											"end": 19929,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19862,
											"end": 19864,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19859,
											"end": 19860,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19855,
											"end": 19865,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19850,
											"end": 19865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19850,
											"end": 19865,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 19826,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19973,
											"end": 19974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19964,
											"end": 19970,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19959,
											"end": 19962,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19955,
											"end": 19971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19948,
											"end": 19975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19797,
											"end": 19981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20373,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 19987,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20091,
											"end": 20094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20119,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 20151,
											"end": 20156,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20119,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 20119,
											"end": 20157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20119,
											"end": 20157,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 20119,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20173,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 20254,
											"end": 20260,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20249,
											"end": 20252,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20173,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 20173,
											"end": 20261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20173,
											"end": 20261,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 20173,
											"end": 20261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20166,
											"end": 20261,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20166,
											"end": 20261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20270,
											"end": 20335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 20328,
											"end": 20334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20323,
											"end": 20326,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20316,
											"end": 20320,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20309,
											"end": 20314,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20305,
											"end": 20321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20270,
											"end": 20335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 20270,
											"end": 20335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20270,
											"end": 20335,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 20270,
											"end": 20335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20360,
											"end": 20366,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20355,
											"end": 20358,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20351,
											"end": 20367,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20344,
											"end": 20367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20344,
											"end": 20367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20095,
											"end": 20373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20373,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20373,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19987,
											"end": 20373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20650,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 20379,
											"end": 20650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20509,
											"end": 20512,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20531,
											"end": 20624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 20620,
											"end": 20623,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20611,
											"end": 20617,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20531,
											"end": 20624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 20531,
											"end": 20624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20531,
											"end": 20624,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 20531,
											"end": 20624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20524,
											"end": 20624,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20524,
											"end": 20624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20641,
											"end": 20644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20634,
											"end": 20644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20634,
											"end": 20644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20650,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20650,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20379,
											"end": 20650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20656,
											"end": 20835,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 20656,
											"end": 20835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20796,
											"end": 20827,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 20792,
											"end": 20793,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20784,
											"end": 20790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20780,
											"end": 20794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20773,
											"end": 20828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20656,
											"end": 20835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20656,
											"end": 20835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20841,
											"end": 21207,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 20841,
											"end": 21207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20983,
											"end": 20986,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21004,
											"end": 21071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 21068,
											"end": 21070,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 21063,
											"end": 21066,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21004,
											"end": 21071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 21004,
											"end": 21071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21004,
											"end": 21071,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 21004,
											"end": 21071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20997,
											"end": 21071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20997,
											"end": 21071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21080,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 21169,
											"end": 21172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21080,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 21080,
											"end": 21173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21080,
											"end": 21173,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 21080,
											"end": 21173,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21198,
											"end": 21200,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21193,
											"end": 21196,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21189,
											"end": 21201,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21182,
											"end": 21201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21182,
											"end": 21201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20841,
											"end": 21207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20841,
											"end": 21207,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20841,
											"end": 21207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20841,
											"end": 21207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21213,
											"end": 21632,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 21213,
											"end": 21632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21379,
											"end": 21383,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21417,
											"end": 21419,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21406,
											"end": 21415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21402,
											"end": 21420,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21394,
											"end": 21420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21394,
											"end": 21420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21466,
											"end": 21475,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21460,
											"end": 21464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21456,
											"end": 21476,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21452,
											"end": 21453,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21441,
											"end": 21450,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21437,
											"end": 21454,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21430,
											"end": 21477,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21494,
											"end": 21625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 21620,
											"end": 21624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21494,
											"end": 21625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 21494,
											"end": 21625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21494,
											"end": 21625,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 21494,
											"end": 21625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21486,
											"end": 21625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21486,
											"end": 21625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21213,
											"end": 21632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21213,
											"end": 21632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21213,
											"end": 21632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21213,
											"end": 21632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21737,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 21638,
											"end": 21737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21690,
											"end": 21696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21724,
											"end": 21729,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21718,
											"end": 21730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21708,
											"end": 21730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21708,
											"end": 21730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21737,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21743,
											"end": 21845,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 21743,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21784,
											"end": 21790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21835,
											"end": 21837,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 21831,
											"end": 21838,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 21826,
											"end": 21828,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 21819,
											"end": 21824,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21815,
											"end": 21829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21811,
											"end": 21839,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 21801,
											"end": 21839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21801,
											"end": 21839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21743,
											"end": 21845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21743,
											"end": 21845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21743,
											"end": 21845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21743,
											"end": 21845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21851,
											"end": 22228,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 21851,
											"end": 22228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21939,
											"end": 21942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21967,
											"end": 22006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 22000,
											"end": 22005,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21967,
											"end": 22006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 21967,
											"end": 22006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21967,
											"end": 22006,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 21967,
											"end": 22006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22022,
											"end": 22093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 22086,
											"end": 22092,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22081,
											"end": 22084,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22022,
											"end": 22093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 22022,
											"end": 22093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22022,
											"end": 22093,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 22022,
											"end": 22093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22015,
											"end": 22093,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 22015,
											"end": 22093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 22160,
											"end": 22166,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22155,
											"end": 22158,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22148,
											"end": 22152,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22141,
											"end": 22146,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 22137,
											"end": 22153,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 22102,
											"end": 22167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22102,
											"end": 22167,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 22102,
											"end": 22167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22192,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 22214,
											"end": 22220,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22192,
											"end": 22221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 22192,
											"end": 22221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22192,
											"end": 22221,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 22192,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22187,
											"end": 22190,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22183,
											"end": 22222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22176,
											"end": 22222,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22176,
											"end": 22222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21943,
											"end": 22228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21851,
											"end": 22228,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21851,
											"end": 22228,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21851,
											"end": 22228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21851,
											"end": 22228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21851,
											"end": 22228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22547,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 22234,
											"end": 22547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22347,
											"end": 22351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22385,
											"end": 22387,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22374,
											"end": 22383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22370,
											"end": 22388,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22362,
											"end": 22388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22362,
											"end": 22388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22434,
											"end": 22443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22428,
											"end": 22432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22424,
											"end": 22444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22420,
											"end": 22421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22409,
											"end": 22418,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22405,
											"end": 22422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22398,
											"end": 22445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22462,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 22535,
											"end": 22539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22526,
											"end": 22532,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22462,
											"end": 22540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 22462,
											"end": 22540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22462,
											"end": 22540,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 22462,
											"end": 22540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22454,
											"end": 22540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22454,
											"end": 22540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22547,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22234,
											"end": 22547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Token&NFTStaking/TokenNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AdminAddToken(uint256)": "c0cd40ee",
							"AdminWithDrawToken(uint256,address)": "866e58af",
							"Deposit(uint256)": "4d6ce1e5",
							"DepositNFT(uint256,uint256)": "934ed772",
							"Details(address)": "e88cc2be",
							"ERC20Address()": "a6021ace",
							"ERC721address()": "b7171a2e",
							"Reward(address)": "57488064",
							"TotalToken()": "3f601972",
							"UpdateERC20(address)": "275bd33f",
							"UpdateERC721(address)": "ee0106d2",
							"UpdateRatePersentage(uint256)": "f89d832f",
							"UserRate(address)": "e4458b30",
							"Utilization()": "7b2f247f",
							"Withdraw()": "57ea89b6",
							"calculateIntrest(address)": "8b73e331",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"showReward(address)": "c45af5d8",
							"transferOwnership(address)": "f2fde38b",
							"withdrawNFT(uint256)": "023245d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC721address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ratePersentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ERC20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AdminAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"AdminWithDrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"DepositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Details\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestake\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"check\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC20Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC721address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20Address\",\"type\":\"address\"}],\"name\":\"UpdateERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC721address\",\"type\":\"address\"}],\"name\":\"UpdateERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratePersentage\",\"type\":\"uint256\"}],\"name\":\"UpdateRatePersentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"check\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Utilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"calculateIntrest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"showReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIds\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token&NFTStaking/TokenNFT1.sol\":\"ERC20Stakeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Token&NFTStaking/TokenNFT1.sol\":{\"keccak256\":\"0xeaf4143dc82d9ea4e09cae22c0edc8252b866def30f3e938cd83bc9232ac2efd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118ed185073821b056a1e6775b7c1edd369e9d89e4c5f02290d7418fcb40a216\",\"dweb:/ipfs/QmUWmEoawjyAqBa8aUtGGhcCYNwMVHonRpM68jkYUcm9U4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1052,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "ERC721address",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1054,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "ERC20Address",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1056,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "TotalToken",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1058,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "rate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1077,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "Details",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Staker)1065_storage)"
							},
							{
								"astId": 1081,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "Reward",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1086,
								"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
								"label": "UserRate",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(StakerNFT)1072_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Staker)1065_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC20Stakeable.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1065_storage"
							},
							"t_mapping(t_address,t_struct(StakerNFT)1072_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC20Stakeable.StakerNFT)",
								"numberOfBytes": "32",
								"value": "t_struct(StakerNFT)1072_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Staker)1065_storage": {
								"encoding": "inplace",
								"label": "struct ERC20Stakeable.Staker",
								"members": [
									{
										"astId": 1060,
										"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
										"label": "deposited",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1062,
										"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
										"label": "timestake",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1064,
										"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
										"label": "check",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(StakerNFT)1072_storage": {
								"encoding": "inplace",
								"label": "struct ERC20Stakeable.StakerNFT",
								"members": [
									{
										"astId": 1067,
										"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
										"label": "userRate",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1069,
										"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1071,
										"contract": "contracts/Token&NFTStaking/TokenNFT1.sol:ERC20Stakeable",
										"label": "check",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1024
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1025,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1024,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1024
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							226
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1519:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1568:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1585:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1604:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:2"
									},
									"scope": 226,
									"src": "1446:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1950:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:2"
									},
									"scope": 226,
									"src": "1934:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2240:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:2"
									},
									"scope": 226,
									"src": "2189:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "620:1631:2",
							"usedErrors": []
						}
					],
					"src": "114:2138:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1002
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"SafeERC20": [
							507
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 191,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 227,
							"src": "164:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 1003,
							"src": "211:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 232,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 235,
									"libraryName": {
										"id": 233,
										"name": "Address",
										"nameLocations": [
											"737:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "737:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:3",
									"typeName": {
										"id": 234,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "865:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "895:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 249,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "925:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 252,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "950:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "954:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 247,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 245,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "875:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "875:86:3"
											}
										]
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"794:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "794:6:3"
													},
													"referencedDeclaration": 190,
													"src": "794:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "816:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "836:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:3"
									},
									"scope": 507,
									"src": "763:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1102:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1162:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1162:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "1191:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1197:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "1201:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1112:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1009:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1009:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1031:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1053:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1073:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:3"
									},
									"scope": 507,
									"src": "974:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1581:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "1830:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 304,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 302,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 290,
																					"src": "1877:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 300,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "1846:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "1846:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2001:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 319,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "2031:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2031:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 322,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2055:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2064:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 317,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 315,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1981:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1505:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1505:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1505:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1527:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1552:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:3"
									},
									"scope": 507,
									"src": "1475:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2200:194:3",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2210:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 344,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 346,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "2264:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 340,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2233:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:3",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2233:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 348,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2275:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2310:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 355,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2340:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2340:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 358,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2364:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 359,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2373:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2290:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:3"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2124:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2124:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2124:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:3"
									},
									"scope": 507,
									"src": "2084:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2516:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:3",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2550:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 384,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 380,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 378,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "2604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 376,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2573:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "2573:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2634:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "2650:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 385,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 391,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:3"
													},
													{
														"assignments": [
															393
														],
														"declarations": [
															{
																"constant": false,
																"id": 393,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2715:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2738:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2753:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2792:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 402,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "2822:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "2822:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 405,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "2846:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2855:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 400,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 398,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2772:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:3"
													}
												]
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2440:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2440:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2440:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2462:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:3"
									},
									"scope": 507,
									"src": "2400:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3107:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3117:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3152:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3139:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3139:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3181:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "3188:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3197:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3204:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3214:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3217:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3220:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "3168:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3232:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3253:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3290:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3304:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2921:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$226",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 226,
														"src": "2921:12:3"
													},
													"referencedDeclaration": 226,
													"src": "2921:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$226",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2949:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2972:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3020:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:3"
									},
									"scope": 507,
									"src": "2892:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3817:636:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "4166:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4220:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "4200:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "4192:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 488,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4275:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "4271:176:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "4298:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 495,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4370:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 496,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 493,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 492,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3776:6:3"
													},
													"referencedDeclaration": 190,
													"src": "3776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3790:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:3"
									},
									"scope": 507,
									"src": "3747:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 508,
							"src": "707:3748:3",
							"usedErrors": []
						}
					],
					"src": "115:4341:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1036
						],
						"IERC721": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1037,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 512,
										"name": "IERC165",
										"nameLocations": [
											"271:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1036,
										"src": "271:7:4"
									},
									"id": 513,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1036
							],
							"name": "IERC721",
							"nameLocation": "260:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 522,
									"name": "Transfer",
									"nameLocation": "384:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "415:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "435:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:4"
									},
									"src": "378:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 531,
									"name": "Approval",
									"nameLocation": "571:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "580:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "603:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "629:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:4"
									},
									"src": "565:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 540,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "803:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "826:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:4"
									},
									"src": "782:85:4"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:4"
									},
									"scope": 623,
									"src": "954:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1187:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1227:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:4"
									},
									"scope": 623,
									"src": "1170:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1866:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:4"
									},
									"scope": 623,
									"src": "1809:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2679:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2701:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:4"
									},
									"scope": 623,
									"src": "2644:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3526:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3568:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:4"
									},
									"scope": 623,
									"src": "3495:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4079:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4091:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:4"
									},
									"scope": 623,
									"src": "4062:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4464:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4482:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:4"
									},
									"scope": 623,
									"src": "4437:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4678:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4718:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:4"
									},
									"scope": 623,
									"src": "4657:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4911:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4926:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4967:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:4"
									},
									"scope": 623,
									"src": "4885:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 624,
							"src": "250:4725:4",
							"usedErrors": []
						}
					],
					"src": "108:4868:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							641
						]
					},
					"id": 642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 641,
							"linearizedBaseContracts": [
								641
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "859:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "885:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "907:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "932:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:5"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "976:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 637,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:5"
									},
									"scope": 641,
									"src": "824:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 642,
							"src": "294:692:5",
							"usedErrors": []
						}
					],
					"src": "116:871:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							1036
						],
						"IERC721": [
							623
						],
						"IERC721Enumerable": [
							672
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 644,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 624,
							"src": "154:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 646,
										"name": "IERC721",
										"nameLocations": [
											"348:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "348:7:6"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 645,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 672,
							"linearizedBaseContracts": [
								672,
								623,
								1036
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:6"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "495:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:6"
									},
									"scope": 672,
									"src": "449:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "715:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "768:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:6"
									},
									"scope": 672,
									"src": "686:91:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "974:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:6"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1012:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:6"
									},
									"scope": 672,
									"src": "952:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 673,
							"src": "317:706:6",
							"usedErrors": []
						}
					],
					"src": "129:895:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 675,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 683,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 688,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1002,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 701,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		],
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 699,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													710,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 709,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 717,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 711,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 713,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1002,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3555:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3594:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3602:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 734,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "3572:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 733,
												"id": 740,
												"nodeType": "Return",
												"src": "3565:79:7"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1002,
									"src": "3466:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "4020:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4059:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 758,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4076:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 754,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "4037:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 753,
												"id": 760,
												"nodeType": "Return",
												"src": "4030:59:7"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3904:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3928:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3955:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:7"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4006:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:7"
									},
									"scope": 1002,
									"src": "3873:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "4601:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "4640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 777,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 774,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "4618:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 773,
												"id": 780,
												"nodeType": "Return",
												"src": "4611:94:7"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:7"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4587:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:7"
									},
									"scope": 1002,
									"src": "4458:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "5139:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 799,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		],
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 797,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 802,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5182:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:7"
											},
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "5241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "5255:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"id": 815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "5308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 811,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "5282:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 813,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5301:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5357:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 821,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 822,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5386:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 818,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5330:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 795,
												"id": 824,
												"nodeType": "Return",
												"src": "5323:76:7"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5024:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5074:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:7"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5125:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:7"
									},
									"scope": 1002,
									"src": "4960:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "5683:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "5719:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "5727:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 836,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															872
														],
														"referencedDeclaration": 872,
														"src": "5700:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 835,
												"id": 841,
												"nodeType": "Return",
												"src": "5693:80:7"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:7"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5669:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:7"
									},
									"scope": 1002,
									"src": "5583:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "6122:168:7",
										"statements": [
											{
												"assignments": [
													856,
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "6133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 855,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "6147:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 857,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "6192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6174:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6249:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 867,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "6258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 868,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "6270:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 864,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "6214:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 870,
												"nodeType": "Return",
												"src": "6207:76:7"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6001:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6025:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6052:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:7"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6108:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:7"
									},
									"scope": 1002,
									"src": "5964:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "6566:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 883,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "6604:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "6612:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 882,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															889,
															918
														],
														"referencedDeclaration": 918,
														"src": "6583:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 881,
												"id": 887,
												"nodeType": "Return",
												"src": "6576:84:7"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:7"
									},
									"scope": 1002,
									"src": "6469:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "7008:170:7",
										"statements": [
											{
												"assignments": [
													902,
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "7019:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 901,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "7033:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 903,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"arguments": [
														{
															"id": 907,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7080:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 905,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7060:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "7137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 913,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7146:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 914,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "7158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 910,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "7102:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 900,
												"id": 916,
												"nodeType": "Return",
												"src": "7095:76:7"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:7"
									},
									"scope": 1002,
									"src": "6853:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "7660:434:7",
										"statements": [
											{
												"condition": {
													"id": 932,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "7674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "8030:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "8052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 951,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "8064:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 949,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "8044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:7"
														}
													]
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "7670:418:7",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "7683:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 933,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "7701:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "7697:286:7",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "7725:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 939,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "7927:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 938,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "7916:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 937,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 946,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "8003:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 931,
															"id": 947,
															"nodeType": "Return",
															"src": "7996:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7511:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7557:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7590:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:7"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7646:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:7"
									},
									"scope": 1002,
									"src": "7466:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "8475:135:7",
										"statements": [
											{
												"condition": {
													"id": 969,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 960,
													"src": "8489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "8546:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 974,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "8568:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 975,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "8580:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 973,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "8560:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:7"
														}
													]
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "8485:119:7",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "8498:42:7",
													"statements": [
														{
															"expression": {
																"id": 970,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "8519:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 968,
															"id": 971,
															"nodeType": "Return",
															"src": "8512:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8372:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8405:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:7"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8461:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:7"
									},
									"scope": 1002,
									"src": "8315:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "8699:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 988,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "9105:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 995,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "9126:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 994,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:7"
														}
													]
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "8771:379:7",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "8798:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:7",
																	"valueSize": 1
																}
															],
															"id": 992,
															"nodeType": "InlineAssembly",
															"src": "8947:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "8633:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "8658:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:7"
									},
									"scope": 1002,
									"src": "8616:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1003,
							"src": "194:8964:7",
							"usedErrors": []
						}
					],
					"src": "101:9058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1024
						]
					},
					"id": 1025,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1005,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1010,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1012,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1024,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1024,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1025,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1036
						]
					},
					"id": 1037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1036,
							"linearizedBaseContracts": [
								1036
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1036,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1037,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"contracts/Token&NFTStaking/TokenNFT1.sol": {
				"ast": {
					"absolutePath": "contracts/Token&NFTStaking/TokenNFT1.sol",
					"exportedSymbols": {
						"Address": [
							1002
						],
						"Context": [
							1024
						],
						"ERC20Stakeable": [
							1717
						],
						"IERC165": [
							1036
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"IERC721": [
							623
						],
						"IERC721Enumerable": [
							672
						],
						"IERC721Receiver": [
							641
						],
						"Ownable": [
							112
						],
						"SafeERC20": [
							507
						]
					},
					"id": 1718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "56:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 113,
							"src": "81:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 508,
							"src": "134:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 673,
							"src": "200:79:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 642,
							"src": "280:66:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1043,
										"name": "Ownable",
										"nameLocations": [
											"375:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "375:7:10"
									},
									"id": 1044,
									"nodeType": "InheritanceSpecifier",
									"src": "375:7:10"
								},
								{
									"baseName": {
										"id": 1045,
										"name": "IERC721Receiver",
										"nameLocations": [
											"383:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 641,
										"src": "383:15:10"
									},
									"id": 1046,
									"nodeType": "InheritanceSpecifier",
									"src": "383:15:10"
								}
							],
							"canonicalName": "ERC20Stakeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717,
								641,
								112,
								1024
							],
							"name": "ERC20Stakeable",
							"nameLocation": "357:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1050,
									"libraryName": {
										"id": 1047,
										"name": "SafeERC20",
										"nameLocations": [
											"410:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 507,
										"src": "410:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "404:27:10",
									"typeName": {
										"id": 1049,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1048,
											"name": "IERC20",
											"nameLocations": [
												"424:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "424:6:10"
										},
										"referencedDeclaration": 190,
										"src": "424:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b7171a2e",
									"id": 1052,
									"mutability": "mutable",
									"name": "ERC721address",
									"nameLocation": "451:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "436:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1051,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6021ace",
									"id": 1054,
									"mutability": "mutable",
									"name": "ERC20Address",
									"nameLocation": "485:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "470:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1053,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f601972",
									"id": 1056,
									"mutability": "mutable",
									"name": "TotalToken",
									"nameLocation": "515:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "503:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "503:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1058,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "536:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "531:9:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1057,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "531:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "ERC20Stakeable.Staker",
									"id": 1065,
									"members": [
										{
											"constant": false,
											"id": 1060,
											"mutability": "mutable",
											"name": "deposited",
											"nameLocation": "578:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1065,
											"src": "570:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1059,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "570:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1062,
											"mutability": "mutable",
											"name": "timestake",
											"nameLocation": "605:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1065,
											"src": "597:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1061,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "597:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1064,
											"mutability": "mutable",
											"name": "check",
											"nameLocation": "629:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1065,
											"src": "624:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1063,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "624:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "553:6:10",
									"nodeType": "StructDefinition",
									"scope": 1717,
									"src": "546:96:10",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC20Stakeable.StakerNFT",
									"id": 1072,
									"members": [
										{
											"constant": false,
											"id": 1067,
											"mutability": "mutable",
											"name": "userRate",
											"nameLocation": "682:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1072,
											"src": "674:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1066,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "674:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1069,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "708:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1072,
											"src": "700:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1068,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "700:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "check",
											"nameLocation": "730:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1072,
											"src": "725:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1070,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "725:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakerNFT",
									"nameLocation": "654:9:10",
									"nodeType": "StructDefinition",
									"scope": 1717,
									"src": "647:96:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e88cc2be",
									"id": 1077,
									"mutability": "mutable",
									"name": "Details",
									"nameLocation": "783:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "748:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
										"typeString": "mapping(address => struct ERC20Stakeable.Staker)"
									},
									"typeName": {
										"id": 1076,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1073,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "757:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "748:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
											"typeString": "mapping(address => struct ERC20Stakeable.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1075,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1074,
												"name": "Staker",
												"nameLocations": [
													"768:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1065,
												"src": "768:6:10"
											},
											"referencedDeclaration": 1065,
											"src": "768:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1065_storage_ptr",
												"typeString": "struct ERC20Stakeable.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57488064",
									"id": 1081,
									"mutability": "mutable",
									"name": "Reward",
									"nameLocation": "829:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "796:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1080,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1078,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "796:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1079,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "816:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4458b30",
									"id": 1086,
									"mutability": "mutable",
									"name": "UserRate",
									"nameLocation": "880:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "841:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
										"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT)"
									},
									"typeName": {
										"id": 1085,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1082,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "841:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
											"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1084,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1083,
												"name": "StakerNFT",
												"nameLocations": [
													"861:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1072,
												"src": "861:9:10"
											},
											"referencedDeclaration": 1072,
											"src": "861:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakerNFT_$1072_storage_ptr",
												"typeString": "struct ERC20Stakeable.StakerNFT"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1353:117:10",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1095,
														"name": "ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "1363:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1096,
														"name": "_ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "1379:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1363:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1363:30:10"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1403:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1100,
														"name": "_ratePersentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "1410:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1403:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "1403:22:10"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1103,
														"name": "ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1435:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1104,
														"name": "_ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "1450:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1435:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "1435:28:10"
											}
										]
									},
									"id": 1108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "_ERC721address",
												"nameLocation": "1289:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1281:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_ratePersentage",
												"nameLocation": "1313:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1305:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_ERC20Address",
												"nameLocation": "1338:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1330:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:72:10"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1353:0:10"
									},
									"scope": 1717,
									"src": "1269:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "1749:121:10",
										"statements": [
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1115,
														"name": "TotalToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "1759:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1116,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "1773:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1759:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "1759:21:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1828:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1832:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1828:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1127,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1848:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1840:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1125,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1840:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1840:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1855:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1120,
																	"name": "ERC20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "1797:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1119,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1790:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1790:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1811:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "1790:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "1790:73:10"
											}
										]
									},
									"functionSelector": "c0cd40ee",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1112,
												"name": "onlyOwner",
												"nameLocations": [
													"1740:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1740:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1740:9:10"
										}
									],
									"name": "AdminAddToken",
									"nameLocation": "1705:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1724:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1719:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1719:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1718:14:10"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:0:10"
									},
									"scope": 1717,
									"src": "1696:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2131:63:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "2175:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "2180:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1143,
																	"name": "ERC20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "2148:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1142,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2141:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2141:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2162:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "2141:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2141:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2141:46:10"
											}
										]
									},
									"functionSelector": "866e58af",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1139,
												"name": "onlyOwner",
												"nameLocations": [
													"2122:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2122:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2122:9:10"
										}
									],
									"name": "AdminWithDrawToken",
									"nameLocation": "2071:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2095:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2090:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2090:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2110:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2102:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:25:10"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:0:10"
									},
									"scope": 1717,
									"src": "2062:132:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "2454:126:10",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "Persentage",
														"nameLocation": "2469:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "2464:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2464:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1172,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1164,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2522:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																						"typeString": "contract ERC20Stakeable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																						"typeString": "contract ERC20Stakeable"
																					}
																				],
																				"id": 1163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2514:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1162,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2514:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2514:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1159,
																					"name": "ERC20Address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "2490:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1158,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 190,
																				"src": "2483:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2483:20:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2504:9:10",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 147,
																		"src": "2483:30:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2483:45:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2531:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2483:51:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1169,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2482:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1170,
														"name": "TotalToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2536:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2482:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2464:82:10"
											},
											{
												"expression": {
													"id": 1173,
													"name": "Persentage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "2563:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1174,
												"nodeType": "Return",
												"src": "2556:17:10"
											}
										]
									},
									"functionSelector": "7b2f247f",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Utilization",
									"nameLocation": "2411:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:2:10"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2445:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:9:10"
									},
									"scope": 1717,
									"src": "2402:178:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "2914:568:10",
										"statements": [
											{
												"condition": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2927:26:10",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1181,
																"name": "Details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "2928:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																	"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																}
															},
															"id": 1184,
															"indexExpression": {
																"expression": {
																	"id": 1182,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2936:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2940:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2936:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2928:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1065_storage",
																"typeString": "struct ERC20Stakeable.Staker storage ref"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2948:5:10",
														"memberName": "check",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1064,
														"src": "2928:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "3173:303:10",
													"statements": [
														{
															"expression": {
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1217,
																	"name": "TotalToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "3187:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1218,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "3201:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3187:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1220,
															"nodeType": "ExpressionStatement",
															"src": "3187:21:10"
														},
														{
															"expression": {
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1221,
																		"name": "Reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "3222:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1224,
																	"indexExpression": {
																		"expression": {
																			"id": 1222,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3229:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3233:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3229:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3222:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1226,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3262:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3266:6:10",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3262:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1225,
																		"name": "calculateIntrest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "3245:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3245:28:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3222:51:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "3222:51:10"
														},
														{
															"expression": {
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1231,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "3287:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1234,
																	"indexExpression": {
																		"expression": {
																			"id": 1232,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3295:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3299:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3295:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3287:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1236,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1077,
																						"src": "3316:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1239,
																					"indexExpression": {
																						"expression": {
																							"id": 1237,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3324:3:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3328:6:10",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3324:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3316:19:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1065_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3336:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "3316:29:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1241,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1178,
																				"src": "3348:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3316:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1243,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3356:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3362:9:10",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3356:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "74727565",
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3372:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1235,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "3309:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Staker_$1065_storage_ptr_$",
																			"typeString": "type(struct ERC20Stakeable.Staker storage pointer)"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3309:68:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_memory_ptr",
																		"typeString": "struct ERC20Stakeable.Staker memory"
																	}
																},
																"src": "3287:90:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1065_storage",
																	"typeString": "struct ERC20Stakeable.Staker storage ref"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "3287:90:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1253,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3429:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3433:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3429:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1257,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3449:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																					"typeString": "contract ERC20Stakeable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																					"typeString": "contract ERC20Stakeable"
																				}
																			],
																			"id": 1256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3441:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1255,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3441:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3441:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "3457:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1250,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "3398:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1249,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3391:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3391:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3412:16:10",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "3391:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3391:74:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1261,
															"nodeType": "ExpressionStatement",
															"src": "3391:74:10"
														}
													]
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "2924:552:10",
												"trueBody": {
													"id": 1216,
													"nodeType": "Block",
													"src": "2954:206:10",
													"statements": [
														{
															"expression": {
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1187,
																	"name": "TotalToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2968:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1188,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "2982:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2968:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "2968:21:10"
														},
														{
															"expression": {
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1191,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "3003:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1194,
																	"indexExpression": {
																		"expression": {
																			"id": 1192,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3011:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3015:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3011:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3003:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1196,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "3032:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1197,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3040:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3046:9:10",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3040:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "74727565",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3056:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1195,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "3025:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Staker_$1065_storage_ptr_$",
																			"typeString": "type(struct ERC20Stakeable.Staker storage pointer)"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3025:36:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_memory_ptr",
																		"typeString": "struct ERC20Stakeable.Staker memory"
																	}
																},
																"src": "3003:58:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1065_storage",
																	"typeString": "struct ERC20Stakeable.Staker storage ref"
																}
															},
															"id": 1202,
															"nodeType": "ExpressionStatement",
															"src": "3003:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1207,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3113:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3117:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3113:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1211,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3133:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																					"typeString": "contract ERC20Stakeable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																					"typeString": "contract ERC20Stakeable"
																				}
																			],
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3125:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1209,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3125:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3125:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1213,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "3141:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1204,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "3082:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1203,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3075:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3075:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3096:16:10",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 284,
																	"src": "3075:37:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3075:74:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "3075:74:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4d6ce1e5",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Deposit",
									"nameLocation": "2882:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2898:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2890:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2889:17:10"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2914:0:10"
									},
									"scope": 1717,
									"src": "2873:609:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "3704:874:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1269,
																	"name": "Details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "3722:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																	}
																},
																"id": 1272,
																"indexExpression": {
																	"expression": {
																		"id": 1270,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3730:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3734:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3730:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3722:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1065_storage",
																	"typeString": "struct ERC20Stakeable.Staker storage ref"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3742:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1064,
															"src": "3722:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204669727374205374616b65",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3748:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
																"typeString": "literal_string \"Please First Stake\""
															},
															"value": "Please First Stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
																"typeString": "literal_string \"Please First Stake\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3714:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "3714:55:10"
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1277,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "3783:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1280,
														"indexExpression": {
															"expression": {
																"id": 1278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3792:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3796:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3792:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3783:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3804:5:10",
													"memberName": "check",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1071,
													"src": "3783:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "4272:296:10",
													"statements": [
														{
															"assignments": [
																1351
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1351,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "4291:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1393,
																	"src": "4286:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1350,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4286:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1357,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1352,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "4300:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1355,
																	"indexExpression": {
																		"expression": {
																			"id": 1353,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4308:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4312:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4308:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4300:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4320:9:10",
																"memberName": "deposited",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1060,
																"src": "4300:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4286:43:10"
														},
														{
															"assignments": [
																1359
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1359,
																	"mutability": "mutable",
																	"name": "newval",
																	"nameLocation": "4348:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1393,
																	"src": "4343:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1358,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4343:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1364,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1361,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4374:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4378:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4374:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1360,
																	"name": "calculateIntrest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "4357:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4357:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4343:42:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1369,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4429:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4433:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4429:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1371,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "4441:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1372,
																				"name": "newval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "4450:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4441:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1374,
																				"name": "Reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1081,
																				"src": "4459:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1377,
																			"indexExpression": {
																				"expression": {
																					"id": 1375,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4466:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4470:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4466:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4459:18:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4441:36:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1366,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "4406:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1365,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4399:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4399:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4420:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 157,
																	"src": "4399:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:79:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1380,
															"nodeType": "ExpressionStatement",
															"src": "4399:79:10"
														},
														{
															"expression": {
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4492:25:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1381,
																		"name": "Reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "4499:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1384,
																	"indexExpression": {
																		"expression": {
																			"id": 1382,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4506:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4510:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4506:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4499:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1386,
															"nodeType": "ExpressionStatement",
															"src": "4492:25:10"
														},
														{
															"expression": {
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4531:26:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1387,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "4538:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1390,
																	"indexExpression": {
																		"expression": {
																			"id": 1388,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4546:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4550:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4546:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4538:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "ExpressionStatement",
															"src": "4531:26:10"
														}
													]
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "3779:789:10",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "3810:449:10",
													"statements": [
														{
															"assignments": [
																1283
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1283,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "3829:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1349,
																	"src": "3824:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1282,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3824:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1289,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1284,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "3838:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1287,
																	"indexExpression": {
																		"expression": {
																			"id": 1285,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3846:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3850:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3846:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3838:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3858:9:10",
																"memberName": "deposited",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1060,
																"src": "3838:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3824:43:10"
														},
														{
															"assignments": [
																1291
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1291,
																	"mutability": "mutable",
																	"name": "newval",
																	"nameLocation": "3886:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1349,
																	"src": "3881:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1290,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3881:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1296,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1293,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3912:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3916:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3912:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1292,
																	"name": "calculateIntrest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "3895:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3895:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3881:42:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1303,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3985:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																					"typeString": "contract ERC20Stakeable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																					"typeString": "contract ERC20Stakeable"
																				}
																			],
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3977:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1301,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3977:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3977:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1305,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3992:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3996:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3992:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1307,
																				"name": "UserRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1086,
																				"src": "4003:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																					"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																				}
																			},
																			"id": 1310,
																			"indexExpression": {
																				"expression": {
																					"id": 1308,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4012:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4016:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4012:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4003:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
																				"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4024:7:10",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1069,
																		"src": "4003:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4032:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1298,
																				"name": "ERC721address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1052,
																				"src": "3945:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1297,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "3937:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3937:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$623",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3960:16:10",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "3937:39:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3937:98:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "ExpressionStatement",
															"src": "3937:98:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1319,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4079:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4083:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4079:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1321,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "4091:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1322,
																				"name": "newval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "4100:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4091:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1324,
																				"name": "Reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1081,
																				"src": "4109:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1327,
																			"indexExpression": {
																				"expression": {
																					"id": 1325,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4116:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4120:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4116:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4109:18:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4091:36:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1316,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "4056:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1315,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4049:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4049:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4070:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 157,
																	"src": "4049:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4049:79:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "4049:79:10"
														},
														{
															"expression": {
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4142:27:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1331,
																		"name": "UserRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "4149:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																		}
																	},
																	"id": 1334,
																	"indexExpression": {
																		"expression": {
																			"id": 1332,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4158:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4162:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4158:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4149:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
																		"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1336,
															"nodeType": "ExpressionStatement",
															"src": "4142:27:10"
														},
														{
															"expression": {
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4183:25:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1337,
																		"name": "Reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "4190:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1340,
																	"indexExpression": {
																		"expression": {
																			"id": 1338,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4197:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4201:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4197:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4190:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1342,
															"nodeType": "ExpressionStatement",
															"src": "4183:25:10"
														},
														{
															"expression": {
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4222:26:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1343,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "4229:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1346,
																	"indexExpression": {
																		"expression": {
																			"id": 1344,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4237:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4241:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4237:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4229:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1065_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "4222:26:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "57ea89b6",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Withdraw",
									"nameLocation": "3686:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3694:2:10"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:10"
									},
									"scope": 1717,
									"src": "3677:901:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "4841:653:10",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1403,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "4855:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1405,
														"indexExpression": {
															"id": 1404,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "4864:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4855:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4869:5:10",
													"memberName": "check",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1071,
													"src": "4855:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "5202:277:10",
													"statements": [
														{
															"assignments": [
																1453
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1453,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "5221:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1493,
																	"src": "5216:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1452,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5216:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1473,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1454,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1077,
																						"src": "5234:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1456,
																					"indexExpression": {
																						"id": 1455,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1398,
																						"src": "5242:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5234:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1065_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1457,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5247:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "5234:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1458,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "5259:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5234:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1460,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5233:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1461,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "5269:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1462,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5275:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "5269:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1463,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1077,
																									"src": "5287:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1465,
																								"indexExpression": {
																									"id": 1464,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1398,
																									"src": "5295:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5287:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1065_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1466,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5300:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1062,
																							"src": "5287:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5269:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5268:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5311:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "5268:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5267:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5233:81:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5216:98:10"
														},
														{
															"assignments": [
																1475
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1475,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "5333:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1493,
																	"src": "5328:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1474,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5328:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1479,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1476,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "5347:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5359:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "5347:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5328:34:10"
														},
														{
															"expression": {
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1480,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "5376:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1481,
																		"name": "TotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "5385:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1482,
																				"name": "Details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1077,
																				"src": "5399:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																					"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																				}
																			},
																			"id": 1484,
																			"indexExpression": {
																				"id": 1483,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "5407:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5399:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1065_storage",
																				"typeString": "struct ERC20Stakeable.Staker storage ref"
																			}
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5412:9:10",
																		"memberName": "deposited",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1060,
																		"src": "5399:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5385:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5376:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "5376:45:10"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1489,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "5442:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5449:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "5442:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1402,
															"id": 1492,
															"nodeType": "Return",
															"src": "5435:33:10"
														}
													]
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "4851:628:10",
												"trueBody": {
													"id": 1451,
													"nodeType": "Block",
													"src": "4884:296:10",
													"statements": [
														{
															"assignments": [
																1408
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1408,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "4903:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1451,
																	"src": "4898:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1407,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4898:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1431,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1409,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1077,
																						"src": "4916:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1411,
																					"indexExpression": {
																						"id": 1410,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1398,
																						"src": "4924:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4916:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1065_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1412,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4929:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "4916:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1413,
																						"name": "UserRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1086,
																						"src": "4941:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																						}
																					},
																					"id": 1415,
																					"indexExpression": {
																						"id": 1414,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1398,
																						"src": "4950:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4941:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
																						"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																					}
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4955:8:10",
																				"memberName": "userRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1067,
																				"src": "4941:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4916:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1418,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4915:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1425,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1419,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "4969:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1420,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4975:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "4969:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1421,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1077,
																									"src": "4987:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1423,
																								"indexExpression": {
																									"id": 1422,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1398,
																									"src": "4995:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4987:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1065_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1424,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5000:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1062,
																							"src": "4987:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4969:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1426,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4968:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5011:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "4968:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1429,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4967:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4915:99:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4898:116:10"
														},
														{
															"assignments": [
																1433
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1433,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "5033:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1451,
																	"src": "5028:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1432,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5028:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1437,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1434,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "5047:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5059:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "5047:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5028:34:10"
														},
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1438,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "5076:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1439,
																		"name": "TotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "5085:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1440,
																				"name": "Details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1077,
																				"src": "5099:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																					"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																				}
																			},
																			"id": 1442,
																			"indexExpression": {
																				"id": 1441,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "5107:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5099:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1065_storage",
																				"typeString": "struct ERC20Stakeable.Staker storage ref"
																			}
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5112:9:10",
																		"memberName": "deposited",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1060,
																		"src": "5099:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5085:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5076:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "5076:45:10"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "5142:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5149:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "5142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1402,
															"id": 1450,
															"nodeType": "Return",
															"src": "5135:33:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c45af5d8",
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showReward",
									"nameLocation": "4780:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4799:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "4791:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4791:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4790:13:10"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4829:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "4824:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4824:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:13:10"
									},
									"scope": 1717,
									"src": "4771:723:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "5825:495:10",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1503,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5839:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1505,
														"indexExpression": {
															"id": 1504,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "5848:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5839:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5853:5:10",
													"memberName": "check",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1071,
													"src": "5839:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "6111:203:10",
													"statements": [
														{
															"assignments": [
																1542
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1542,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "6130:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1571,
																	"src": "6125:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1541,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6125:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1562,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1543,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1077,
																						"src": "6143:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1545,
																					"indexExpression": {
																						"id": 1544,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1498,
																						"src": "6151:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6143:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1065_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1546,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6156:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "6143:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1547,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "6168:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6143:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1549,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6142:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1556,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1550,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "6178:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1551,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6184:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "6178:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1552,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1077,
																									"src": "6196:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1554,
																								"indexExpression": {
																									"id": 1553,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1498,
																									"src": "6204:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6196:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1065_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1555,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6209:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1062,
																							"src": "6196:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6178:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1557,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6177:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6220:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "6177:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1560,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6176:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6142:81:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6125:98:10"
														},
														{
															"assignments": [
																1564
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1564,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "6242:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1571,
																	"src": "6237:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1563,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6237:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1568,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1565,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1542,
																	"src": "6256:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6268:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "6256:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6237:34:10"
														},
														{
															"expression": {
																"id": 1569,
																"name": "TotalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "6292:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1502,
															"id": 1570,
															"nodeType": "Return",
															"src": "6285:18:10"
														}
													]
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "5835:479:10",
												"trueBody": {
													"id": 1540,
													"nodeType": "Block",
													"src": "5868:221:10",
													"statements": [
														{
															"assignments": [
																1508
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1508,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "5887:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1540,
																	"src": "5882:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1507,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5882:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1531,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1509,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1077,
																						"src": "5900:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1511,
																					"indexExpression": {
																						"id": 1510,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1498,
																						"src": "5908:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5900:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1065_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5913:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "5900:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1513,
																						"name": "UserRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1086,
																						"src": "5925:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																						}
																					},
																					"id": 1515,
																					"indexExpression": {
																						"id": 1514,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1498,
																						"src": "5934:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5925:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
																						"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																					}
																				},
																				"id": 1516,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5939:8:10",
																				"memberName": "userRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1067,
																				"src": "5925:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5900:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1518,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5899:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1525,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1519,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "5953:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1520,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5959:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "5953:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1521,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1077,
																									"src": "5971:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1523,
																								"indexExpression": {
																									"id": 1522,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1498,
																									"src": "5979:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5971:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1065_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1524,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5984:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1062,
																							"src": "5971:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5953:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1526,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5952:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5995:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "5952:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1529,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5951:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5899:99:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5882:116:10"
														},
														{
															"assignments": [
																1533
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1533,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "6017:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1540,
																	"src": "6012:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6012:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1537,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1534,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "6031:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6043:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "6031:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6012:34:10"
														},
														{
															"expression": {
																"id": 1538,
																"name": "TotalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "6067:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1502,
															"id": 1539,
															"nodeType": "Return",
															"src": "6060:18:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8b73e331",
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateIntrest",
									"nameLocation": "5767:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5792:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "5784:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:13:10"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "5817:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5816:9:10"
									},
									"scope": 1717,
									"src": "5758:562:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "6564:47:10",
										"statements": [
											{
												"expression": {
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "6574:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1582,
														"name": "_ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "6590:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6574:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "6574:30:10"
											}
										]
									},
									"functionSelector": "ee0106d2",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1579,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1578,
												"name": "onlyOwner",
												"nameLocations": [
													"6555:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6555:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6555:9:10"
										}
									],
									"name": "UpdateERC721",
									"nameLocation": "6511:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "_ERC721address",
												"nameLocation": "6532:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6524:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6523:24:10"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6564:0:10"
									},
									"scope": 1717,
									"src": "6502:109:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "6850:45:10",
										"statements": [
											{
												"expression": {
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1593,
														"name": "ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "6860:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1594,
														"name": "_ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "6875:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6860:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "6860:28:10"
											}
										]
									},
									"functionSelector": "275bd33f",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1590,
												"name": "onlyOwner",
												"nameLocations": [
													"6841:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6841:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6841:9:10"
										}
									],
									"name": "UpdateERC20",
									"nameLocation": "6797:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "_ERC20Address",
												"nameLocation": "6819:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "6811:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:24:10"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6850:0:10"
									},
									"scope": 1717,
									"src": "6788:107:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "7148:39:10",
										"statements": [
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1605,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "7158:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1606,
														"name": "_ratePersentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "7165:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7158:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "7158:22:10"
											}
										]
									},
									"functionSelector": "f89d832f",
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1602,
												"name": "onlyOwner",
												"nameLocations": [
													"7139:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7139:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7139:9:10"
										}
									],
									"name": "UpdateRatePersentage",
									"nameLocation": "7086:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_ratePersentage",
												"nameLocation": "7115:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "7107:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7106:25:10"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7148:0:10"
									},
									"scope": 1717,
									"src": "7077:110:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "7486:307:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1618,
																	"name": "Details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "7504:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1065_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																	}
																},
																"id": 1621,
																"indexExpression": {
																	"expression": {
																		"id": 1619,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7512:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7516:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7512:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7504:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1065_storage",
																	"typeString": "struct ERC20Stakeable.Staker storage ref"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7524:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1064,
															"src": "7504:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4669727374204465706f73697420546f6b656e73",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7530:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
																"typeString": "literal_string \"First Deposit Tokens\""
															},
															"value": "First Deposit Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
																"typeString": "literal_string \"First Deposit Tokens\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7496:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7496:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "7496:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7571:27:10",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1627,
																		"name": "UserRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "7572:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																		}
																	},
																	"id": 1630,
																	"indexExpression": {
																		"expression": {
																			"id": 1628,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7581:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7585:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7581:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7572:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
																		"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7593:5:10",
																"memberName": "check",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1071,
																"src": "7572:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520556e7374616b6520796f7572206465706f7369746564204e4654",
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7599:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
																"typeString": "literal_string \"Please Unstake your deposited NFT\""
															},
															"value": "Please Unstake your deposited NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
																"typeString": "literal_string \"Please Unstake your deposited NFT\""
															}
														],
														"id": 1626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7563:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7563:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "7563:72:10"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1636,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "7645:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1639,
														"indexExpression": {
															"expression": {
																"id": 1637,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7654:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7658:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7654:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7645:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1641,
																"name": "_rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "7678:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1642,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "7684:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7693:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1640,
															"name": "StakerNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "7668:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakerNFT_$1072_storage_ptr_$",
																"typeString": "type(struct ERC20Stakeable.StakerNFT storage pointer)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7668:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1072_memory_ptr",
															"typeString": "struct ERC20Stakeable.StakerNFT memory"
														}
													},
													"src": "7645:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
														"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "7645:53:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1651,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7749:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7753:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7749:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1655,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7768:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7760:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7760:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7760:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "7774:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7783:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "ERC721address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "7717:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1647,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "7709:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7709:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$623",
																"typeString": "contract IERC721"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7732:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "7709:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7709:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "7709:77:10"
											}
										]
									},
									"functionSelector": "934ed772",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DepositNFT",
									"nameLocation": "7439:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "7458:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "7450:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7450:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "7472:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "7467:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7467:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7449:29:10"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7486:0:10"
									},
									"scope": 1717,
									"src": "7430:363:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "8051:203:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1668,
																	"name": "UserRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "8069:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																	}
																},
																"id": 1671,
																"indexExpression": {
																	"expression": {
																		"id": 1669,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8078:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8082:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8078:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8069:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
																	"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8090:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1071,
															"src": "8069:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204669727374205374616b65204e465473",
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8096:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
																"typeString": "literal_string \"Please First Stake NFTs\""
															},
															"value": "Please First Stake NFTs"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
																"typeString": "literal_string \"Please First Stake NFTs\""
															}
														],
														"id": 1667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8061:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8061:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "8061:61:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1682,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8180:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1717",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8172:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8172:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8172:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1684,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8187:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8191:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8187:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1686,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8198:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8207:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1677,
																	"name": "ERC721address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "8140:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1676,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "8132:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$623",
																"typeString": "contract IERC721"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8155:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "8132:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8132:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "8132:78:10"
											},
											{
												"expression": {
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8220:27:10",
													"subExpression": {
														"baseExpression": {
															"id": 1690,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "8227:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1072_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"expression": {
																"id": 1691,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8236:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8240:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8236:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8227:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1072_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "8220:27:10"
											}
										]
									},
									"functionSelector": "023245d7",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawNFT",
									"nameLocation": "8014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "8034:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "8026:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8025:18:10"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8051:0:10"
									},
									"scope": 1717,
									"src": "8005:249:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "8365:65:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1711,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "8382:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$641_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8398:16:10",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "8382:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "8415:8:10",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "8382:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1710,
												"id": 1714,
												"nodeType": "Return",
												"src": "8375:48:10"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "8268:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1707,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8339:8:10"
									},
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "8285:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8285:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "8293:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8293:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "8301:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "8309:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8309:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8284:40:10"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "8357:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1708,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "8357:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8356:8:10"
									},
									"scope": 1717,
									"src": "8259:171:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1718,
							"src": "348:8084:10",
							"usedErrors": []
						}
					],
					"src": "56:8376:10"
				},
				"id": 10
			}
		}
	}
}