{
	"id": "6cb5f0af3229891d87d669ad5c54cd08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Token&NFTStaking/Contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Creator: andreitoma8\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\ncontract ERC20Stakeable is Ownable,IERC721Receiver{\n    using SafeERC20 for IERC20;\n    address public ERC721address;\n    address public owenerERC20;\n    address public ERC20Address;\n    uint public totalOwnerToken;\n    uint rate;\n    struct Staker {\n        uint256 deposited;\n        uint256 timestake;\n        bool check; \n    }\n    struct StakerNFT {\n        uint256 userRate;\n        uint256 tokenId;\n        bool check; \n    }\n    mapping (address => Staker) public Details;\n    mapping (address => uint) public Reward;\n    mapping (address => uint ) public OwnerTokens;\n    mapping (address => StakerNFT ) public UserRate;\n    /*\n    ~~~~~~~~~~~~~~~Constructor function~~~~~~~~~~~~~~~\n   1. This function is called when contract is first deployed.\n   2. It takes three parameters:\n        a. ER721 Token Address (Address of ER721 Token Contract)\n        b. Rate Percentage (Percentage value of rate i.e., Interest percentage)\n        c. ER720 Token Address (Address of ER720 Token Contract)\n    */\n    constructor(address _ERC721address, uint256 _ratePersentage, address _ERC20Address) {\n        ERC721address = _ERC721address;\n        rate = _ratePersentage;\n        ERC20Address = _ERC20Address;\n        owenerERC20 = msg.sender;\n    }\n    /*\n    ~~~~~~~~~~~~~Admin Add Token Function~~~~~~~~~~~~~~~\n    1. Owner add tokens into contract with this function\n    2. These tokens are used as rewards for staking\n    3. Only Owner can call this function\n    */\n    function AdminAddToken(uint _amount) public onlyOwner{\n        require(msg.sender==owenerERC20,\"Only Owner can transfer\");\n        OwnerTokens[msg.sender] +=_amount;\n        totalOwnerToken += _amount;\n        IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount);\n    }\n    /*\n    ~~~~~~~~~~~~~Admin WithDraw Token Function~~~~~~~~~~~~~~~\n    1. Admin withdraws his/her desired amount of token from contract.\n    2. Only Owner can call this function\n    */\n    function AdminWithDrawToken(uint amount) public onlyOwner{\n        OwnerTokens[msg.sender] -= amount;\n        totalOwnerToken -= amount;\n        IERC20(ERC20Address).safeTransfer(msg.sender, amount);\n    }\n    /*\n    ~~~~~~~~~~~~~Utilization Function~~~~~~~~~~~~~~~\n    1. Owner call this function to check remaining percentage of tokens left in this contract.\n    2. Only Owner can call this function\n    */\n    function Utilization() public view returns(uint256) {\n        uint Persentage = (OwnerTokens[owenerERC20] * 100)/totalOwnerToken;\n        return Persentage;\n    }\n    /*   ~~~~~~~~~~~~~Deposit Function~~~~~~~~~~~~~~~\n    1. This function has one parameter.\n    2. This function is used to deposit desired amount of tokens in this contract by user.\n    3. If user already deposited some tokens then he/she must has to withdraw all tokens first.\n    */\n    function Deposit(uint256 _amount) public {\n        require(!Details[msg.sender].check,\"Please First WithDraw\");\n        Details[msg.sender] = Staker(_amount,block.timestamp,true);\n        IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount);\n    }\n    /*   ~~~~~~~~~~~~~Withdraw Function~~~~~~~~~~~~~~~\n    1. This function is used to withdraw tokens.\n    2. User will call this function to withdraw all tokens from this contract.\n    */\n    function Withdraw() public {\n        require(Details[msg.sender].check,\"Please First Stake\");\n        if (UserRate[msg.sender].check){\n            uint amount = Details[msg.sender].deposited;\n            uint newval = calculateIntrest(msg.sender);\n            IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,UserRate[msg.sender].tokenId,\"\");\n            IERC20(ERC20Address).transfer(msg.sender, amount + newval);\n            OwnerTokens[owenerERC20] -= newval;\n            delete UserRate[msg.sender];\n            delete Details[msg.sender];\n        }\n        else{\n            uint amount = Details[msg.sender].deposited;\n            uint newval = calculateIntrest(msg.sender);\n            IERC20(ERC20Address).transfer(msg.sender, amount + newval);\n            OwnerTokens[owenerERC20] -= newval;\n            delete Details[msg.sender];\n        }    \n    }\n     /*   ~~~~~~~~~~~~~showReward Function~~~~~~~~~~~~~~~\n    1. This function is used to show rewards.\n    2. User will call this function to check his/her total generated rewards\n    */\n    function showReward(address _to) public view returns(uint result)\n    {\n        if (UserRate[_to].check)\n        {\n            uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            result = TotalReward + Details[_to].deposited;\n            return result/1000000000000000000;\n\n        }\n        else\n        {\n            uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            result = TotalReward + Details[_to].deposited;\n            return result/1000000000000000000;\n        }\n        \n    }\n    /*   ~~~~~~~~~~~~~CalculateIntrest Function~~~~~~~~~~~~~~~\n    1. This function is used to calculate total reward generated.\n    2. Function will decide how much reward is generated after every minute by adding PercentageRate of deposited tokens .\n    */\n    function calculateIntrest(address _to) public view returns(uint256){\n        if (UserRate[_to].check)\n        {\n            uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            return TotalReward;\n        }\n        else\n        {\n            uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60);\n            uint TotalReward = RewardEst / 100;\n            return TotalReward;\n        }\n    }\n    /*   ~~~~~~~~~~~~~UpdateERC721 Function~~~~~~~~~~~~~~~\n    1. This function is used update address of ERC721 token address.\n    2. Only Owner can call this function.\n    */\n    function UpdateERC721(address _ERC721address) public onlyOwner{\n        ERC721address = _ERC721address;\n    }\n    /*~~~~~~~~~~~~~UpdateERC20 Function~~~~~~~~~~~~~~~\n    1. This function is used update address of ERC20 token address.\n    2. Only Owner can call this function.\n    */\n    function UpdateERC20 ( address _ERC20Address) public onlyOwner{\n        ERC20Address = _ERC20Address;\n    }\n    /*~~~~~~~~~~~~~UpdateRatePersentage Function~~~~~~~~~~~~~~~\n    1. This function is used update Percentage Rate of rewards.\n    2. Only Owner can call this function.\n    */\n    function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{\n        rate = _ratePersentage;\n    }\n    /*~~~~~~~~~~~~~DepositNFT Function~~~~~~~~~~~~~~~\n    1. This function is used to deposit new token and boost the current percentage rate\n    2. This function takes two parameters i.e., Token Id and New Boosted Percentage Rate\n    */\n    function DepositNFT(uint256 tokenIds,uint _rate) public {\n        require(Details[msg.sender].check,\"First Deposit Tokens\");\n        require(UserRate[msg.sender].check,\"Please Unstake your deposited NFT\");\n        UserRate[msg.sender] = StakerNFT(_rate,tokenIds,true); \n        IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),tokenIds,\"\");\n    }\n    /*~~~~~~~~~~~~~WithdrawNFT Function~~~~~~~~~~~~~~~\n    1. This function is used to withdraw token\n    2. This function takes one parameter\n    3. User must have one nft staked before withdrawing.\n    */\n    function withdrawNFT(uint256 tokenIds) public {\n        require(UserRate[msg.sender].check,\"Please First Stake NFTs\");\n        IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,tokenIds,\"\");\n        delete UserRate[msg.sender];\n    }\n    function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xCA CHAINID 0xC7 PUSH10 0x578F662CA8CBF3C19790 MSTORE SWAP12 NUMBER 0xBD GASLIMIT 0xDA CREATE2 DUP1 DIV 0x2F NOT 0xDA EXTCODECOPY 0xE4 0x25 PUSH14 0x4464736F6C634300081300330000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xCA CHAINID 0xC7 PUSH10 0x578F662CA8CBF3C19790 MSTORE SWAP12 NUMBER 0xBD GASLIMIT 0xDA CREATE2 DUP1 DIV 0x2F NOT 0xDA EXTCODECOPY 0xE4 0x25 PUSH14 0x4464736F6C634300081300330000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1ca46c769578f662ca8cbf3c19790529b43bd45daf580042f19da3ce4256d4464736f6c63430008130033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Token&NFTStaking/Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT COINBASE 0xB8 0xB1 SWAP11 PUSH9 0xDBC2B62EEC3EAA5CB0 CALL PUSH32 0x7CD58275E3E0E89F9B9D791094C83164736F6C63430008130033000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT COINBASE 0xB8 0xB1 SWAP11 PUSH9 0xDBC2B62EEC3EAA5CB0 CALL PUSH32 0x7CD58275E3E0E89F9B9D791094C83164736F6C63430008130033000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Token&NFTStaking/Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Token&NFTStaking/Contract.sol": {
				"ERC20Stakeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC721address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_ratePersentage",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_ERC20Address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "AdminAddToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AdminWithDrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "DepositNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Details",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "deposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestake",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "check",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERC20Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERC721address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "OwnerTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Reward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC20Address",
									"type": "address"
								}
							],
							"name": "UpdateERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC721address",
									"type": "address"
								}
							],
							"name": "UpdateERC721",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratePersentage",
									"type": "uint256"
								}
							],
							"name": "UpdateRatePersentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "UserRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "userRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "check",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Utilization",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "calculateIntrest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owenerERC20",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "showReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalOwnerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenIds",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Token&NFTStaking/Contract.sol\":348:8362  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1357:1592  constructor(address _ERC721address, uint256 _ratePersentage, address _ERC20Address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1467:1481  _ERC721address */\n  dup3\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1451:1464  ERC721address */\n  0x01\n  0x00\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1451:1481  ERC721address = _ERC721address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1498:1513  _ratePersentage */\n  dup2\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1491:1495  rate */\n  0x05\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1491:1513  rate = _ratePersentage */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1538:1551  _ERC20Address */\n  dup1\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1523:1535  ERC20Address */\n  0x03\n  0x00\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1523:1551  ERC20Address = _ERC20Address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1575:1585  msg.sender */\n  caller\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1561:1572  owenerERC20 */\n  0x02\n  0x00\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1561:1585  owenerERC20 = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token&NFTStaking/Contract.sol\":1357:1592  constructor(address _ERC721address, uint256 _ratePersentage, address _ERC20Address) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Token&NFTStaking/Contract.sol\":348:8362  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_39\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_40:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_42\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_45\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1326:1445   */\ntag_44:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_46\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_21\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_47\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_24\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_48\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/Token&NFTStaking/Contract.sol\":348:8362  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Token&NFTStaking/Contract.sol\":348:8362  contract ERC20Stakeable is Ownable,IERC721Receiver{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc45af5d8\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xc45af5d8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe4458b30\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe88cc2be\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xee0106d2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf89d832f\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x934ed772\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa6021ace\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa88e132f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb7171a2e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc0cd40ee\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x4d6ce1e5\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x4d6ce1e5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x57488064\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x57ea89b6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7b2f247f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8b73e331\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x023245d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ccff6e9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10fd4fba\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x275bd33f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ffce210\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7935:8184  function withdrawNFT(uint256 tokenIds) public {... */\n    tag_3:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":535:562  uint public totalOwnerToken */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":470:496  address public owenerERC20 */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8189:8360  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6719:6826  function UpdateERC20 ( address _ERC20Address) public onlyOwner{... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":878:923  mapping (address => uint ) public OwnerTokens */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3168:3437  function Deposit(uint256 _amount) public {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":833:872  mapping (address => uint) public Reward */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3632:4509  function Withdraw() public {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2713:2875  function Utilization() public view returns(uint256) {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5689:6251  function calculateIntrest(address _to) public view returns(uint256){... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7361:7723  function DepositNFT(uint256 tokenIds,uint _rate) public {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":502:529  address public ERC20Address */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2300:2505  function AdminWithDrawToken(uint amount) public onlyOwner{... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":436:464  address public ERC721address */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1818:2108  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4702:5425  function showReward(address _to) public view returns(uint result)... */\n    tag_21:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":929:976  mapping (address => StakerNFT ) public UserRate */\n    tag_22:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":785:827  mapping (address => Staker) public Details */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6433:6542  function UpdateERC721(address _ERC721address) public onlyOwner{... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7008:7118  function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{... */\n    tag_26:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7935:8184  function withdrawNFT(uint256 tokenIds) public {... */\n    tag_33:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7999:8007  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7999:8019  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8008:8018  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7999:8019  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7999:8025  UserRate[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7991:8052  require(UserRate[msg.sender].check,\"Please First Stake NFTs\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8070:8083  ERC721address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8062:8101  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8110:8114  this */\n      address\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8117:8127  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8128:8136  tokenIds */\n      dup5\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8062:8140  IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,tokenIds,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8157:8165  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8157:8177  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8166:8176  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8157:8177  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8150:8177  delete UserRate[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7935:8184  function withdrawNFT(uint256 tokenIds) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":535:562  uint public totalOwnerToken */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":470:496  address public owenerERC20 */\n    tag_39:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8189:8360  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_45:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8287:8293  bytes4 */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8312:8353  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8305:8353  return IERC721Receiver.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":8189:8360  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6719:6826  function UpdateERC20 ( address _ERC20Address) public onlyOwner{... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6806:6819  _ERC20Address */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6791:6803  ERC20Address */\n      0x03\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6791:6819  ERC20Address = _ERC20Address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6719:6826  function UpdateERC20 ( address _ERC20Address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":878:923  mapping (address => uint ) public OwnerTokens */\n    tag_54:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3168:3437  function Deposit(uint256 _amount) public {... */\n    tag_58:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3228:3235  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3228:3247  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3236:3246  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3228:3247  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3228:3253  Details[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3227:3253  !Details[msg.sender].check */\n      iszero\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3219:3278  require(!Details[msg.sender].check,\"Please First WithDraw\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3310:3346  Staker(_amount,block.timestamp,true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3317:3324  _amount */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3310:3346  Staker(_amount,block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3325:3340  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3310:3346  Staker(_amount,block.timestamp,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3341:3345  true */\n      0x01\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3310:3346  Staker(_amount,block.timestamp,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3288:3295  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3288:3307  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3296:3306  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3288:3307  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3288:3346  Details[msg.sender] = Staker(_amount,block.timestamp,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3356:3430  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount) */\n      tag_133\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3394:3404  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3414:3418  this */\n      address\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3422:3429  _amount */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3363:3375  ERC20Address */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3356:3393  IERC20(ERC20Address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3356:3430  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) , _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3168:3437  function Deposit(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":833:872  mapping (address => uint) public Reward */\n    tag_61:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3632:4509  function Withdraw() public {... */\n    tag_64:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3677:3684  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3677:3696  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3685:3695  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3677:3696  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3677:3702  Details[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3669:3724  require(Details[msg.sender].check,\"Please First Stake\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3738:3746  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3738:3758  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3747:3757  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3738:3758  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3738:3764  UserRate[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3734:4499  if (UserRate[msg.sender].check){... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3779:3790  uint amount */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3793:3800  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3793:3812  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3801:3811  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3793:3812  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3793:3822  Details[msg.sender].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3779:3822  uint amount = Details[msg.sender].deposited */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3836:3847  uint newval */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3850:3878  calculateIntrest(msg.sender) */\n      tag_140\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3867:3877  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3850:3866  calculateIntrest */\n      tag_72\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3850:3878  calculateIntrest(msg.sender) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3836:3878  uint newval = calculateIntrest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3900:3913  ERC721address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3892:3931  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3940:3944  this */\n      address\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3947:3957  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3958:3966  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3958:3978  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3967:3977  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3958:3978  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3958:3986  UserRate[msg.sender].tokenId */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3892:3990  IERC721(ERC721address).safeTransferFrom(address(this), msg.sender,UserRate[msg.sender].tokenId,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_141:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4011:4023  ERC20Address */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4004:4033  IERC20(ERC20Address).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4034:4044  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4055:4061  newval */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4046:4052  amount */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4046:4061  amount + newval */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4004:4062  IERC20(ERC20Address).transfer(msg.sender, amount + newval) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4104:4110  newval */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4076:4087  OwnerTokens */\n      0x08\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4076:4100  OwnerTokens[owenerERC20] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4088:4099  owenerERC20 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4076:4100  OwnerTokens[owenerERC20] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4076:4110  OwnerTokens[owenerERC20] -= newval */\n      dup3\n      dup3\n      sload\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4131:4139  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4131:4151  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4140:4150  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4131:4151  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4124:4151  delete UserRate[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4172:4179  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4172:4191  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4180:4190  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4172:4191  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4165:4191  delete Details[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3765:4202  {... */\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3734:4499  if (UserRate[msg.sender].check){... */\n      jump(tag_155)\n    tag_139:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4229:4240  uint amount */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4243:4250  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4243:4262  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4251:4261  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4243:4262  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4243:4272  Details[msg.sender].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4229:4272  uint amount = Details[msg.sender].deposited */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4286:4297  uint newval */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4300:4328  calculateIntrest(msg.sender) */\n      tag_156\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4317:4327  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4300:4316  calculateIntrest */\n      tag_72\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4300:4328  calculateIntrest(msg.sender) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4286:4328  uint newval = calculateIntrest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4349:4361  ERC20Address */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4342:4371  IERC20(ERC20Address).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4372:4382  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4393:4399  newval */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4384:4390  amount */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4384:4399  amount + newval */\n      tag_157\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_157:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4342:4400  IERC20(ERC20Address).transfer(msg.sender, amount + newval) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_158:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4442:4448  newval */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4414:4425  OwnerTokens */\n      0x08\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4414:4438  OwnerTokens[owenerERC20] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4426:4437  owenerERC20 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4414:4438  OwnerTokens[owenerERC20] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4414:4448  OwnerTokens[owenerERC20] -= newval */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4469:4476  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4469:4488  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4477:4487  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4469:4488  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4462:4488  delete Details[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4215:4499  {... */\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3734:4499  if (UserRate[msg.sender].check){... */\n    tag_155:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":3632:4509  function Withdraw() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2713:2875  function Utilization() public view returns(uint256) {... */\n    tag_68:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2756:2763  uint256 */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2775:2790  uint Persentage */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2826:2841  totalOwnerToken */\n      sload(0x04)\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2821:2824  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2794:2805  OwnerTokens */\n      0x08\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2794:2818  OwnerTokens[owenerERC20] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2806:2817  owenerERC20 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2794:2818  OwnerTokens[owenerERC20] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2794:2824  OwnerTokens[owenerERC20] * 100 */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2793:2841  (OwnerTokens[owenerERC20] * 100)/totalOwnerToken */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2775:2841  uint Persentage = (OwnerTokens[owenerERC20] * 100)/totalOwnerToken */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2858:2868  Persentage */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2851:2868  return Persentage */\n      swap2\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2713:2875  function Utilization() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5689:6251  function calculateIntrest(address _to) public view returns(uint256){... */\n    tag_72:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5748:5755  uint256 */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5770:5778  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5770:5783  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5779:5782  _to */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5770:5783  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5770:5789  UserRate[_to].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5766:6245  if (UserRate[_to].check)... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5813:5827  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5926:5928  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5902:5909  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5902:5914  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5910:5913  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5902:5914  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5902:5924  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5884:5899  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5884:5924  block.timestamp - Details[_to].timestake */\n      tag_175\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_175:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5883:5928  (block.timestamp - Details[_to].timestake)/60 */\n      tag_176\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_176:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5856:5864  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5856:5869  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5865:5868  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5856:5869  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5856:5878  UserRate[_to].userRate */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5831:5838  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5831:5843  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5839:5842  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5831:5843  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5831:5853  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5831:5878  Details[_to].deposited * UserRate[_to].userRate */\n      tag_177\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_177:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5830:5929  (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_178\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_178:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5813:5929  uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5943:5959  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5974:5977  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5962:5971  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5962:5977  RewardEst / 100 */\n      tag_179\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_179:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5943:5977  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5998:6009  TotalReward */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5991:6009  return TotalReward */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_173)\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5766:6245  if (UserRate[_to].check)... */\n    tag_174:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6056:6070  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6151:6153  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6127:6134  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6127:6139  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6135:6138  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6127:6139  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6127:6149  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6109:6124  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6109:6149  block.timestamp - Details[_to].timestake */\n      tag_181\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_181:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6108:6153  (block.timestamp - Details[_to].timestake)/60 */\n      tag_182\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_182:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6099:6103  rate */\n      sload(0x05)\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6074:6081  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6074:6086  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6082:6085  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6074:6086  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6074:6096  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6074:6103  Details[_to].deposited * rate */\n      tag_183\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_183:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6073:6154  (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_184\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_184:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6056:6154  uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6168:6184  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6199:6202  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6187:6196  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6187:6202  RewardEst / 100 */\n      tag_185\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_185:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6168:6202  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6223:6234  TotalReward */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6216:6234  return TotalReward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5689:6251  function calculateIntrest(address _to) public view returns(uint256){... */\n    tag_173:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7361:7723  function DepositNFT(uint256 tokenIds,uint _rate) public {... */\n    tag_80:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7435:7442  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7435:7454  Details[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7443:7453  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7435:7454  Details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7435:7460  Details[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7427:7484  require(Details[msg.sender].check,\"First Deposit Tokens\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7502:7510  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7502:7522  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7511:7521  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7502:7522  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7502:7528  UserRate[msg.sender].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7494:7565  require(UserRate[msg.sender].check,\"Please Unstake your deposited NFT\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7598:7628  StakerNFT(_rate,tokenIds,true) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7608:7613  _rate */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7598:7628  StakerNFT(_rate,tokenIds,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7614:7622  tokenIds */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7598:7628  StakerNFT(_rate,tokenIds,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7623:7627  true */\n      0x01\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7598:7628  StakerNFT(_rate,tokenIds,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7575:7583  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7575:7595  UserRate[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7584:7594  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7575:7595  UserRate[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7575:7628  UserRate[msg.sender] = StakerNFT(_rate,tokenIds,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7647:7660  ERC721address */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7639:7678  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7679:7689  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7698:7702  this */\n      address\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7704:7712  tokenIds */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7639:7716  IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),tokenIds,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_194:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7361:7723  function DepositNFT(uint256 tokenIds,uint _rate) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":502:529  address public ERC20Address */\n    tag_82:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2300:2505  function AdminWithDrawToken(uint amount) public onlyOwner{... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2394:2400  amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2367:2378  OwnerTokens */\n      0x08\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2367:2390  OwnerTokens[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2379:2389  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2367:2390  OwnerTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2367:2400  OwnerTokens[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2429:2435  amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2410:2425  totalOwnerToken */\n      0x04\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2410:2435  totalOwnerToken -= amount */\n      dup3\n      dup3\n      sload\n      tag_202\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_202:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2445:2498  IERC20(ERC20Address).safeTransfer(msg.sender, amount) */\n      tag_203\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2479:2489  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2491:2497  amount */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2452:2464  ERC20Address */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2445:2478  IERC20(ERC20Address).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_204\n      swap1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2445:2498  IERC20(ERC20Address).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2300:2505  function AdminWithDrawToken(uint amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":436:464  address public ERC721address */\n    tag_88:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1818:2108  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1901:1912  owenerERC20 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1889:1912  msg.sender==owenerERC20 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1889:1899  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1889:1912  msg.sender==owenerERC20 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1881:1939  require(msg.sender==owenerERC20,\"Only Owner can transfer\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1975:1982  _amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1949:1960  OwnerTokens */\n      0x08\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1949:1972  OwnerTokens[msg.sender] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1961:1971  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1949:1972  OwnerTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1949:1982  OwnerTokens[msg.sender] +=_amount */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2011:2018  _amount */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1992:2007  totalOwnerToken */\n      0x04\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1992:2018  totalOwnerToken += _amount */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_212:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2028:2101  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      tag_213\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2066:2076  msg.sender */\n      caller\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2086:2090  this */\n      address\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2093:2100  _amount */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2035:2047  ERC20Address */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2028:2065  IERC20(ERC20Address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":2028:2101  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":1818:2108  function AdminAddToken(uint _amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4702:5425  function showReward(address _to) public view returns(uint result)... */\n    tag_95:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4755:4766  uint result */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4786:4794  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4786:4799  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4795:4798  _to */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4786:4799  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4786:4805  UserRate[_to].check */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4782:5410  if (UserRate[_to].check)... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4829:4843  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4942:4944  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4918:4925  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4918:4930  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4926:4929  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4918:4930  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4918:4940  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4900:4915  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4900:4940  block.timestamp - Details[_to].timestake */\n      tag_216\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_216:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4899:4944  (block.timestamp - Details[_to].timestake)/60 */\n      tag_217\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_217:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4872:4880  UserRate */\n      0x09\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4872:4885  UserRate[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4881:4884  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4872:4885  UserRate[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4872:4894  UserRate[_to].userRate */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4847:4854  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4847:4859  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4855:4858  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4847:4859  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4847:4869  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4847:4894  Details[_to].deposited * UserRate[_to].userRate */\n      tag_218\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_218:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4846:4945  (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_219\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_219:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4829:4945  uint RewardEst = (Details[_to].deposited * UserRate[_to].userRate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4959:4975  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4990:4993  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4978:4987  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4978:4993  RewardEst / 100 */\n      tag_220\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_220:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4959:4993  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5030:5037  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5030:5042  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5038:5041  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5030:5042  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5030:5052  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5016:5027  TotalReward */\n      dup2\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5016:5052  TotalReward + Details[_to].deposited */\n      tag_221\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_221:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5007:5052  result = TotalReward + Details[_to].deposited */\n      swap3\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5080:5099  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5073:5079  result */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5073:5099  result/1000000000000000000 */\n      tag_222\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_222:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5066:5099  return result/1000000000000000000 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_214)\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4782:5410  if (UserRate[_to].check)... */\n    tag_215:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5147:5161  uint RewardEst */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5242:5244  60 */\n      0x3c\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5218:5225  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5218:5230  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5226:5229  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5218:5230  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5218:5240  Details[_to].timestake */\n      0x01\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5200:5215  block.timestamp */\n      timestamp\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5200:5240  block.timestamp - Details[_to].timestake */\n      tag_224\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_224:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5199:5244  (block.timestamp - Details[_to].timestake)/60 */\n      tag_225\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_225:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5190:5194  rate */\n      sload(0x05)\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5165:5172  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5165:5177  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5173:5176  _to */\n      dup7\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5165:5177  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5165:5187  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5165:5194  Details[_to].deposited * rate */\n      tag_226\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_226:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5164:5245  (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      tag_227\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_227:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5147:5245  uint RewardEst = (Details[_to].deposited * rate) * ((block.timestamp - Details[_to].timestake)/60) */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5259:5275  uint TotalReward */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5290:5293  100 */\n      0x64\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5278:5287  RewardEst */\n      dup3\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5278:5293  RewardEst / 100 */\n      tag_228\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_228:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5259:5293  uint TotalReward = RewardEst / 100 */\n      swap1\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5330:5337  Details */\n      0x06\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5330:5342  Details[_to] */\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5338:5341  _to */\n      dup6\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5330:5342  Details[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5330:5352  Details[_to].deposited */\n      0x00\n      add\n      sload\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5316:5327  TotalReward */\n      dup2\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5316:5352  TotalReward + Details[_to].deposited */\n      tag_229\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_229:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5307:5352  result = TotalReward + Details[_to].deposited */\n      swap3\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5380:5399  1000000000000000000 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5373:5379  result */\n      dup4\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5373:5399  result/1000000000000000000 */\n      tag_230\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_230:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":5366:5399  return result/1000000000000000000 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":4702:5425  function showReward(address _to) public view returns(uint result)... */\n    tag_214:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":929:976  mapping (address => StakerNFT ) public UserRate */\n    tag_99:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":785:827  mapping (address => Staker) public Details */\n    tag_104:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6433:6542  function UpdateERC721(address _ERC721address) public onlyOwner{... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6521:6535  _ERC721address */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6505:6518  ERC721address */\n      0x01\n      0x00\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6505:6535  ERC721address = _ERC721address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":6433:6542  function UpdateERC721(address _ERC721address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7008:7118  function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7096:7111  _ratePersentage */\n      dup1\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7089:7093  rate */\n      0x05\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7089:7111  rate = _ratePersentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token&NFTStaking/Contract.sol\":7008:7118  function UpdateRatePersentage(uint256 _ratePersentage) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_253\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_259\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_263\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_270\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_280\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_279)\n    tag_280:\n      0x60\n      swap2\n      pop\n    tag_279:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_281\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_282\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_286\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_283)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_283:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_301:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_302:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_303:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_304:\n        /* \"#utility.yul\":490:514   */\n      tag_363\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_303\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_364:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_305:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_366\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_304\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_32:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_369\n      tag_301\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":766:885   */\n    tag_368:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_370\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_305\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_306:\n        /* \"#utility.yul\":1112:1136   */\n      tag_372\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_303\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_37:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_374\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_306\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_307:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_308:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_377\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_307\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_309:\n        /* \"#utility.yul\":1698:1722   */\n      tag_379\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_308\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_41:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_381\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_309\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_310:\n        /* \"#utility.yul\":2036:2060   */\n      tag_383\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_308\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_384:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_311:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_386\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_310\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2353   */\n    tag_312:\n        /* \"#utility.yul\":2345:2346   */\n      0x00\n        /* \"#utility.yul\":2342:2343   */\n      dup1\n        /* \"#utility.yul\":2335:2347   */\n      revert\n        /* \"#utility.yul\":2359:2476   */\n    tag_313:\n        /* \"#utility.yul\":2468:2469   */\n      0x00\n        /* \"#utility.yul\":2465:2466   */\n      dup1\n        /* \"#utility.yul\":2458:2470   */\n      revert\n        /* \"#utility.yul\":2482:2599   */\n    tag_314:\n        /* \"#utility.yul\":2591:2592   */\n      0x00\n        /* \"#utility.yul\":2588:2589   */\n      dup1\n        /* \"#utility.yul\":2581:2593   */\n      revert\n        /* \"#utility.yul\":2618:3170   */\n    tag_315:\n        /* \"#utility.yul\":2675:2683   */\n      0x00\n        /* \"#utility.yul\":2685:2691   */\n      dup1\n        /* \"#utility.yul\":2735:2738   */\n      dup4\n        /* \"#utility.yul\":2728:2732   */\n      0x1f\n        /* \"#utility.yul\":2720:2726   */\n      dup5\n        /* \"#utility.yul\":2716:2733   */\n      add\n        /* \"#utility.yul\":2712:2739   */\n      slt\n        /* \"#utility.yul\":2702:2824   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":2743:2822   */\n      tag_392\n      tag_312\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2702:2824   */\n    tag_391:\n        /* \"#utility.yul\":2856:2862   */\n      dup3\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2833:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2886:2904   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2878:2884   */\n      dup2\n        /* \"#utility.yul\":2875:2905   */\n      gt\n        /* \"#utility.yul\":2872:2989   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":2908:2987   */\n      tag_394\n      tag_313\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2872:2989   */\n    tag_393:\n        /* \"#utility.yul\":3022:3026   */\n      0x20\n        /* \"#utility.yul\":3014:3020   */\n      dup4\n        /* \"#utility.yul\":3010:3027   */\n      add\n        /* \"#utility.yul\":2998:3027   */\n      swap2\n      pop\n        /* \"#utility.yul\":3076:3079   */\n      dup4\n        /* \"#utility.yul\":3068:3072   */\n      0x01\n        /* \"#utility.yul\":3060:3066   */\n      dup3\n        /* \"#utility.yul\":3056:3073   */\n      mul\n        /* \"#utility.yul\":3046:3054   */\n      dup4\n        /* \"#utility.yul\":3042:3074   */\n      add\n        /* \"#utility.yul\":3039:3080   */\n      gt\n        /* \"#utility.yul\":3036:3164   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":3083:3162   */\n      tag_396\n      tag_314\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3036:3164   */\n    tag_395:\n        /* \"#utility.yul\":2618:3170   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:4139   */\n    tag_44:\n        /* \"#utility.yul\":3273:3279   */\n      0x00\n        /* \"#utility.yul\":3281:3287   */\n      dup1\n        /* \"#utility.yul\":3289:3295   */\n      0x00\n        /* \"#utility.yul\":3297:3303   */\n      dup1\n        /* \"#utility.yul\":3305:3311   */\n      0x00\n        /* \"#utility.yul\":3354:3357   */\n      0x80\n        /* \"#utility.yul\":3342:3351   */\n      dup7\n        /* \"#utility.yul\":3333:3340   */\n      dup9\n        /* \"#utility.yul\":3329:3352   */\n      sub\n        /* \"#utility.yul\":3325:3358   */\n      slt\n        /* \"#utility.yul\":3322:3442   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":3361:3440   */\n      tag_399\n      tag_301\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3322:3442   */\n    tag_398:\n        /* \"#utility.yul\":3481:3482   */\n      0x00\n        /* \"#utility.yul\":3506:3559   */\n      tag_400\n        /* \"#utility.yul\":3551:3558   */\n      dup9\n        /* \"#utility.yul\":3542:3548   */\n      dup3\n        /* \"#utility.yul\":3531:3540   */\n      dup10\n        /* \"#utility.yul\":3527:3549   */\n      add\n        /* \"#utility.yul\":3506:3559   */\n      tag_311\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3496:3559   */\n      swap6\n      pop\n        /* \"#utility.yul\":3452:3569   */\n      pop\n        /* \"#utility.yul\":3608:3610   */\n      0x20\n        /* \"#utility.yul\":3634:3687   */\n      tag_401\n        /* \"#utility.yul\":3679:3686   */\n      dup9\n        /* \"#utility.yul\":3670:3676   */\n      dup3\n        /* \"#utility.yul\":3659:3668   */\n      dup10\n        /* \"#utility.yul\":3655:3677   */\n      add\n        /* \"#utility.yul\":3634:3687   */\n      tag_311\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3624:3687   */\n      swap5\n      pop\n        /* \"#utility.yul\":3579:3697   */\n      pop\n        /* \"#utility.yul\":3736:3738   */\n      0x40\n        /* \"#utility.yul\":3762:3815   */\n      tag_402\n        /* \"#utility.yul\":3807:3814   */\n      dup9\n        /* \"#utility.yul\":3798:3804   */\n      dup3\n        /* \"#utility.yul\":3787:3796   */\n      dup10\n        /* \"#utility.yul\":3783:3805   */\n      add\n        /* \"#utility.yul\":3762:3815   */\n      tag_305\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3752:3815   */\n      swap4\n      pop\n        /* \"#utility.yul\":3707:3825   */\n      pop\n        /* \"#utility.yul\":3892:3894   */\n      0x60\n        /* \"#utility.yul\":3881:3890   */\n      dup7\n        /* \"#utility.yul\":3877:3895   */\n      add\n        /* \"#utility.yul\":3864:3896   */\n      calldataload\n        /* \"#utility.yul\":3923:3941   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3915:3921   */\n      dup2\n        /* \"#utility.yul\":3912:3942   */\n      gt\n        /* \"#utility.yul\":3909:4026   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3945:4024   */\n      tag_404\n      tag_302\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3909:4026   */\n    tag_403:\n        /* \"#utility.yul\":4058:4122   */\n      tag_405\n        /* \"#utility.yul\":4114:4121   */\n      dup9\n        /* \"#utility.yul\":4105:4111   */\n      dup3\n        /* \"#utility.yul\":4094:4103   */\n      dup10\n        /* \"#utility.yul\":4090:4112   */\n      add\n        /* \"#utility.yul\":4058:4122   */\n      tag_315\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4040:4122   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3835:4132   */\n      pop\n        /* \"#utility.yul\":3176:4139   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4145:4294   */\n    tag_316:\n        /* \"#utility.yul\":4181:4188   */\n      0x00\n        /* \"#utility.yul\":4221:4287   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4214:4219   */\n      dup3\n        /* \"#utility.yul\":4210:4288   */\n      and\n        /* \"#utility.yul\":4199:4288   */\n      swap1\n      pop\n        /* \"#utility.yul\":4145:4294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4300:4415   */\n    tag_317:\n        /* \"#utility.yul\":4385:4408   */\n      tag_408\n        /* \"#utility.yul\":4402:4407   */\n      dup2\n        /* \"#utility.yul\":4385:4408   */\n      tag_316\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4380:4383   */\n      dup3\n        /* \"#utility.yul\":4373:4409   */\n      mstore\n        /* \"#utility.yul\":4300:4415   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4421:4639   */\n    tag_47:\n        /* \"#utility.yul\":4512:4516   */\n      0x00\n        /* \"#utility.yul\":4550:4552   */\n      0x20\n        /* \"#utility.yul\":4539:4548   */\n      dup3\n        /* \"#utility.yul\":4535:4553   */\n      add\n        /* \"#utility.yul\":4527:4553   */\n      swap1\n      pop\n        /* \"#utility.yul\":4563:4632   */\n      tag_410\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4618:4627   */\n      dup4\n        /* \"#utility.yul\":4614:4631   */\n      add\n        /* \"#utility.yul\":4605:4611   */\n      dup5\n        /* \"#utility.yul\":4563:4632   */\n      tag_317\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4421:4639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4645:4974   */\n    tag_50:\n        /* \"#utility.yul\":4704:4710   */\n      0x00\n        /* \"#utility.yul\":4753:4755   */\n      0x20\n        /* \"#utility.yul\":4741:4750   */\n      dup3\n        /* \"#utility.yul\":4732:4739   */\n      dup5\n        /* \"#utility.yul\":4728:4751   */\n      sub\n        /* \"#utility.yul\":4724:4756   */\n      slt\n        /* \"#utility.yul\":4721:4840   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4759:4838   */\n      tag_413\n      tag_301\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4721:4840   */\n    tag_412:\n        /* \"#utility.yul\":4879:4880   */\n      0x00\n        /* \"#utility.yul\":4904:4957   */\n      tag_414\n        /* \"#utility.yul\":4949:4956   */\n      dup5\n        /* \"#utility.yul\":4940:4946   */\n      dup3\n        /* \"#utility.yul\":4929:4938   */\n      dup6\n        /* \"#utility.yul\":4925:4947   */\n      add\n        /* \"#utility.yul\":4904:4957   */\n      tag_311\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4894:4957   */\n      swap2\n      pop\n        /* \"#utility.yul\":4850:4967   */\n      pop\n        /* \"#utility.yul\":4645:4974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4980:5454   */\n    tag_79:\n        /* \"#utility.yul\":5048:5054   */\n      0x00\n        /* \"#utility.yul\":5056:5062   */\n      dup1\n        /* \"#utility.yul\":5105:5107   */\n      0x40\n        /* \"#utility.yul\":5093:5102   */\n      dup4\n        /* \"#utility.yul\":5084:5091   */\n      dup6\n        /* \"#utility.yul\":5080:5103   */\n      sub\n        /* \"#utility.yul\":5076:5108   */\n      slt\n        /* \"#utility.yul\":5073:5192   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":5111:5190   */\n      tag_417\n      tag_301\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":5073:5192   */\n    tag_416:\n        /* \"#utility.yul\":5231:5232   */\n      0x00\n        /* \"#utility.yul\":5256:5309   */\n      tag_418\n        /* \"#utility.yul\":5301:5308   */\n      dup6\n        /* \"#utility.yul\":5292:5298   */\n      dup3\n        /* \"#utility.yul\":5281:5290   */\n      dup7\n        /* \"#utility.yul\":5277:5299   */\n      add\n        /* \"#utility.yul\":5256:5309   */\n      tag_305\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5246:5309   */\n      swap3\n      pop\n        /* \"#utility.yul\":5202:5319   */\n      pop\n        /* \"#utility.yul\":5358:5360   */\n      0x20\n        /* \"#utility.yul\":5384:5437   */\n      tag_419\n        /* \"#utility.yul\":5429:5436   */\n      dup6\n        /* \"#utility.yul\":5420:5426   */\n      dup3\n        /* \"#utility.yul\":5409:5418   */\n      dup7\n        /* \"#utility.yul\":5405:5427   */\n      add\n        /* \"#utility.yul\":5384:5437   */\n      tag_305\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5374:5437   */\n      swap2\n      pop\n        /* \"#utility.yul\":5329:5447   */\n      pop\n        /* \"#utility.yul\":4980:5454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5460:5550   */\n    tag_318:\n        /* \"#utility.yul\":5494:5501   */\n      0x00\n        /* \"#utility.yul\":5537:5542   */\n      dup2\n        /* \"#utility.yul\":5530:5543   */\n      iszero\n        /* \"#utility.yul\":5523:5544   */\n      iszero\n        /* \"#utility.yul\":5512:5544   */\n      swap1\n      pop\n        /* \"#utility.yul\":5460:5550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5556:5665   */\n    tag_319:\n        /* \"#utility.yul\":5637:5658   */\n      tag_422\n        /* \"#utility.yul\":5652:5657   */\n      dup2\n        /* \"#utility.yul\":5637:5658   */\n      tag_318\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5632:5635   */\n      dup3\n        /* \"#utility.yul\":5625:5659   */\n      mstore\n        /* \"#utility.yul\":5556:5665   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:6101   */\n    tag_101:\n        /* \"#utility.yul\":5814:5818   */\n      0x00\n        /* \"#utility.yul\":5852:5854   */\n      0x60\n        /* \"#utility.yul\":5841:5850   */\n      dup3\n        /* \"#utility.yul\":5837:5855   */\n      add\n        /* \"#utility.yul\":5829:5855   */\n      swap1\n      pop\n        /* \"#utility.yul\":5865:5936   */\n      tag_424\n        /* \"#utility.yul\":5933:5934   */\n      0x00\n        /* \"#utility.yul\":5922:5931   */\n      dup4\n        /* \"#utility.yul\":5918:5935   */\n      add\n        /* \"#utility.yul\":5909:5915   */\n      dup7\n        /* \"#utility.yul\":5865:5936   */\n      tag_306\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5946:6018   */\n      tag_425\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6003:6012   */\n      dup4\n        /* \"#utility.yul\":5999:6017   */\n      add\n        /* \"#utility.yul\":5990:5996   */\n      dup6\n        /* \"#utility.yul\":5946:6018   */\n      tag_306\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6028:6094   */\n      tag_426\n        /* \"#utility.yul\":6090:6092   */\n      0x40\n        /* \"#utility.yul\":6079:6088   */\n      dup4\n        /* \"#utility.yul\":6075:6093   */\n      add\n        /* \"#utility.yul\":6066:6072   */\n      dup5\n        /* \"#utility.yul\":6028:6094   */\n      tag_319\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5671:6101   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6107:6276   */\n    tag_320:\n        /* \"#utility.yul\":6191:6202   */\n      0x00\n        /* \"#utility.yul\":6225:6231   */\n      dup3\n        /* \"#utility.yul\":6220:6223   */\n      dup3\n        /* \"#utility.yul\":6213:6232   */\n      mstore\n        /* \"#utility.yul\":6265:6269   */\n      0x20\n        /* \"#utility.yul\":6260:6263   */\n      dup3\n        /* \"#utility.yul\":6256:6270   */\n      add\n        /* \"#utility.yul\":6241:6270   */\n      swap1\n      pop\n        /* \"#utility.yul\":6107:6276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6455   */\n    tag_321:\n        /* \"#utility.yul\":6422:6447   */\n      0x506c65617365204669727374205374616b65204e465473000000000000000000\n        /* \"#utility.yul\":6418:6419   */\n      0x00\n        /* \"#utility.yul\":6410:6416   */\n      dup3\n        /* \"#utility.yul\":6406:6420   */\n      add\n        /* \"#utility.yul\":6399:6448   */\n      mstore\n        /* \"#utility.yul\":6282:6455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_322:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_430\n        /* \"#utility.yul\":6688:6690   */\n      0x17\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_320\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_431\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_321\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7252   */\n    tag_118:\n        /* \"#utility.yul\":6999:7003   */\n      0x00\n        /* \"#utility.yul\":7037:7039   */\n      0x20\n        /* \"#utility.yul\":7026:7035   */\n      dup3\n        /* \"#utility.yul\":7022:7040   */\n      add\n        /* \"#utility.yul\":7014:7040   */\n      swap1\n      pop\n        /* \"#utility.yul\":7086:7095   */\n      dup2\n        /* \"#utility.yul\":7080:7084   */\n      dup2\n        /* \"#utility.yul\":7076:7096   */\n      sub\n        /* \"#utility.yul\":7072:7073   */\n      0x00\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7074   */\n      add\n        /* \"#utility.yul\":7050:7097   */\n      mstore\n        /* \"#utility.yul\":7114:7245   */\n      tag_433\n        /* \"#utility.yul\":7240:7244   */\n      dup2\n        /* \"#utility.yul\":7114:7245   */\n      tag_322\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7106:7245   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7258:7426   */\n    tag_323:\n        /* \"#utility.yul\":7341:7352   */\n      0x00\n        /* \"#utility.yul\":7375:7381   */\n      dup3\n        /* \"#utility.yul\":7370:7373   */\n      dup3\n        /* \"#utility.yul\":7363:7382   */\n      mstore\n        /* \"#utility.yul\":7415:7419   */\n      0x20\n        /* \"#utility.yul\":7410:7413   */\n      dup3\n        /* \"#utility.yul\":7406:7420   */\n      add\n        /* \"#utility.yul\":7391:7420   */\n      swap1\n      pop\n        /* \"#utility.yul\":7258:7426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7432:7546   */\n    tag_324:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7552:7914   */\n    tag_325:\n        /* \"#utility.yul\":7693:7696   */\n      0x00\n        /* \"#utility.yul\":7714:7779   */\n      tag_437\n        /* \"#utility.yul\":7777:7778   */\n      0x00\n        /* \"#utility.yul\":7772:7775   */\n      dup4\n        /* \"#utility.yul\":7714:7779   */\n      tag_323\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7707:7779   */\n      swap2\n      pop\n        /* \"#utility.yul\":7788:7881   */\n      tag_438\n        /* \"#utility.yul\":7877:7880   */\n      dup3\n        /* \"#utility.yul\":7788:7881   */\n      tag_324\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7906:7907   */\n      0x00\n        /* \"#utility.yul\":7901:7904   */\n      dup3\n        /* \"#utility.yul\":7897:7908   */\n      add\n        /* \"#utility.yul\":7890:7908   */\n      swap1\n      pop\n        /* \"#utility.yul\":7552:7914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7920:8668   */\n    tag_120:\n        /* \"#utility.yul\":8169:8173   */\n      0x00\n        /* \"#utility.yul\":8207:8210   */\n      0x80\n        /* \"#utility.yul\":8196:8205   */\n      dup3\n        /* \"#utility.yul\":8192:8211   */\n      add\n        /* \"#utility.yul\":8184:8211   */\n      swap1\n      pop\n        /* \"#utility.yul\":8221:8292   */\n      tag_440\n        /* \"#utility.yul\":8289:8290   */\n      0x00\n        /* \"#utility.yul\":8278:8287   */\n      dup4\n        /* \"#utility.yul\":8274:8291   */\n      add\n        /* \"#utility.yul\":8265:8271   */\n      dup7\n        /* \"#utility.yul\":8221:8292   */\n      tag_309\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8302:8374   */\n      tag_441\n        /* \"#utility.yul\":8370:8372   */\n      0x20\n        /* \"#utility.yul\":8359:8368   */\n      dup4\n        /* \"#utility.yul\":8355:8373   */\n      add\n        /* \"#utility.yul\":8346:8352   */\n      dup6\n        /* \"#utility.yul\":8302:8374   */\n      tag_309\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8384:8456   */\n      tag_442\n        /* \"#utility.yul\":8452:8454   */\n      0x40\n        /* \"#utility.yul\":8441:8450   */\n      dup4\n        /* \"#utility.yul\":8437:8455   */\n      add\n        /* \"#utility.yul\":8428:8434   */\n      dup5\n        /* \"#utility.yul\":8384:8456   */\n      tag_306\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8503:8512   */\n      dup2\n        /* \"#utility.yul\":8497:8501   */\n      dup2\n        /* \"#utility.yul\":8493:8513   */\n      sub\n        /* \"#utility.yul\":8488:8490   */\n      0x60\n        /* \"#utility.yul\":8477:8486   */\n      dup4\n        /* \"#utility.yul\":8473:8491   */\n      add\n        /* \"#utility.yul\":8466:8514   */\n      mstore\n        /* \"#utility.yul\":8531:8661   */\n      tag_443\n        /* \"#utility.yul\":8656:8660   */\n      dup2\n        /* \"#utility.yul\":8531:8661   */\n      tag_325\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8523:8661   */\n      swap1\n      pop\n        /* \"#utility.yul\":7920:8668   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8674:8845   */\n    tag_326:\n        /* \"#utility.yul\":8814:8837   */\n      0x506c656173652046697273742057697468447261770000000000000000000000\n        /* \"#utility.yul\":8810:8811   */\n      0x00\n        /* \"#utility.yul\":8802:8808   */\n      dup3\n        /* \"#utility.yul\":8798:8812   */\n      add\n        /* \"#utility.yul\":8791:8838   */\n      mstore\n        /* \"#utility.yul\":8674:8845   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8851:9217   */\n    tag_327:\n        /* \"#utility.yul\":8993:8996   */\n      0x00\n        /* \"#utility.yul\":9014:9081   */\n      tag_446\n        /* \"#utility.yul\":9078:9080   */\n      0x15\n        /* \"#utility.yul\":9073:9076   */\n      dup4\n        /* \"#utility.yul\":9014:9081   */\n      tag_320\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9007:9081   */\n      swap2\n      pop\n        /* \"#utility.yul\":9090:9183   */\n      tag_447\n        /* \"#utility.yul\":9179:9182   */\n      dup3\n        /* \"#utility.yul\":9090:9183   */\n      tag_326\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9208:9210   */\n      0x20\n        /* \"#utility.yul\":9203:9206   */\n      dup3\n        /* \"#utility.yul\":9199:9211   */\n      add\n        /* \"#utility.yul\":9192:9211   */\n      swap1\n      pop\n        /* \"#utility.yul\":8851:9217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9223:9642   */\n    tag_132:\n        /* \"#utility.yul\":9389:9393   */\n      0x00\n        /* \"#utility.yul\":9427:9429   */\n      0x20\n        /* \"#utility.yul\":9416:9425   */\n      dup3\n        /* \"#utility.yul\":9412:9430   */\n      add\n        /* \"#utility.yul\":9404:9430   */\n      swap1\n      pop\n        /* \"#utility.yul\":9476:9485   */\n      dup2\n        /* \"#utility.yul\":9470:9474   */\n      dup2\n        /* \"#utility.yul\":9466:9486   */\n      sub\n        /* \"#utility.yul\":9462:9463   */\n      0x00\n        /* \"#utility.yul\":9451:9460   */\n      dup4\n        /* \"#utility.yul\":9447:9464   */\n      add\n        /* \"#utility.yul\":9440:9487   */\n      mstore\n        /* \"#utility.yul\":9504:9635   */\n      tag_449\n        /* \"#utility.yul\":9630:9634   */\n      dup2\n        /* \"#utility.yul\":9504:9635   */\n      tag_327\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":9496:9635   */\n      swap1\n      pop\n        /* \"#utility.yul\":9223:9642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9648:9816   */\n    tag_328:\n        /* \"#utility.yul\":9788:9808   */\n      0x506c65617365204669727374205374616b650000000000000000000000000000\n        /* \"#utility.yul\":9784:9785   */\n      0x00\n        /* \"#utility.yul\":9776:9782   */\n      dup3\n        /* \"#utility.yul\":9772:9786   */\n      add\n        /* \"#utility.yul\":9765:9809   */\n      mstore\n        /* \"#utility.yul\":9648:9816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9822:10188   */\n    tag_329:\n        /* \"#utility.yul\":9964:9967   */\n      0x00\n        /* \"#utility.yul\":9985:10052   */\n      tag_452\n        /* \"#utility.yul\":10049:10051   */\n      0x12\n        /* \"#utility.yul\":10044:10047   */\n      dup4\n        /* \"#utility.yul\":9985:10052   */\n      tag_320\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9978:10052   */\n      swap2\n      pop\n        /* \"#utility.yul\":10061:10154   */\n      tag_453\n        /* \"#utility.yul\":10150:10153   */\n      dup3\n        /* \"#utility.yul\":10061:10154   */\n      tag_328\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10179:10181   */\n      0x20\n        /* \"#utility.yul\":10174:10177   */\n      dup3\n        /* \"#utility.yul\":10170:10182   */\n      add\n        /* \"#utility.yul\":10163:10182   */\n      swap1\n      pop\n        /* \"#utility.yul\":9822:10188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10194:10613   */\n    tag_138:\n        /* \"#utility.yul\":10360:10364   */\n      0x00\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10387:10396   */\n      dup3\n        /* \"#utility.yul\":10383:10401   */\n      add\n        /* \"#utility.yul\":10375:10401   */\n      swap1\n      pop\n        /* \"#utility.yul\":10447:10456   */\n      dup2\n        /* \"#utility.yul\":10441:10445   */\n      dup2\n        /* \"#utility.yul\":10437:10457   */\n      sub\n        /* \"#utility.yul\":10433:10434   */\n      0x00\n        /* \"#utility.yul\":10422:10431   */\n      dup4\n        /* \"#utility.yul\":10418:10435   */\n      add\n        /* \"#utility.yul\":10411:10458   */\n      mstore\n        /* \"#utility.yul\":10475:10606   */\n      tag_455\n        /* \"#utility.yul\":10601:10605   */\n      dup2\n        /* \"#utility.yul\":10475:10606   */\n      tag_329\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10467:10606   */\n      swap1\n      pop\n        /* \"#utility.yul\":10194:10613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10619:10799   */\n    tag_330:\n        /* \"#utility.yul\":10667:10744   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10664:10665   */\n      0x00\n        /* \"#utility.yul\":10657:10745   */\n      mstore\n        /* \"#utility.yul\":10764:10768   */\n      0x11\n        /* \"#utility.yul\":10761:10762   */\n      0x04\n        /* \"#utility.yul\":10754:10769   */\n      mstore\n        /* \"#utility.yul\":10788:10792   */\n      0x24\n        /* \"#utility.yul\":10785:10786   */\n      0x00\n        /* \"#utility.yul\":10778:10793   */\n      revert\n        /* \"#utility.yul\":10805:10996   */\n    tag_146:\n        /* \"#utility.yul\":10845:10848   */\n      0x00\n        /* \"#utility.yul\":10864:10884   */\n      tag_458\n        /* \"#utility.yul\":10882:10883   */\n      dup3\n        /* \"#utility.yul\":10864:10884   */\n      tag_303\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10859:10884   */\n      swap2\n      pop\n        /* \"#utility.yul\":10898:10918   */\n      tag_459\n        /* \"#utility.yul\":10916:10917   */\n      dup4\n        /* \"#utility.yul\":10898:10918   */\n      tag_303\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10893:10918   */\n      swap3\n      pop\n        /* \"#utility.yul\":10941:10942   */\n      dup3\n        /* \"#utility.yul\":10938:10939   */\n      dup3\n        /* \"#utility.yul\":10934:10943   */\n      add\n        /* \"#utility.yul\":10927:10943   */\n      swap1\n      pop\n        /* \"#utility.yul\":10962:10965   */\n      dup1\n        /* \"#utility.yul\":10959:10960   */\n      dup3\n        /* \"#utility.yul\":10956:10966   */\n      gt\n        /* \"#utility.yul\":10953:10989   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10969:10987   */\n      tag_461\n      tag_330\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10953:10989   */\n    tag_460:\n        /* \"#utility.yul\":10805:10996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11002:11334   */\n    tag_148:\n        /* \"#utility.yul\":11123:11127   */\n      0x00\n        /* \"#utility.yul\":11161:11163   */\n      0x40\n        /* \"#utility.yul\":11150:11159   */\n      dup3\n        /* \"#utility.yul\":11146:11164   */\n      add\n        /* \"#utility.yul\":11138:11164   */\n      swap1\n      pop\n        /* \"#utility.yul\":11174:11245   */\n      tag_463\n        /* \"#utility.yul\":11242:11243   */\n      0x00\n        /* \"#utility.yul\":11231:11240   */\n      dup4\n        /* \"#utility.yul\":11227:11244   */\n      add\n        /* \"#utility.yul\":11218:11224   */\n      dup6\n        /* \"#utility.yul\":11174:11245   */\n      tag_309\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11255:11327   */\n      tag_464\n        /* \"#utility.yul\":11323:11325   */\n      0x20\n        /* \"#utility.yul\":11312:11321   */\n      dup4\n        /* \"#utility.yul\":11308:11326   */\n      add\n        /* \"#utility.yul\":11299:11305   */\n      dup5\n        /* \"#utility.yul\":11255:11327   */\n      tag_306\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11002:11334   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11456   */\n    tag_331:\n        /* \"#utility.yul\":11410:11431   */\n      tag_466\n        /* \"#utility.yul\":11425:11430   */\n      dup2\n        /* \"#utility.yul\":11410:11431   */\n      tag_318\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11403:11408   */\n      dup2\n        /* \"#utility.yul\":11400:11432   */\n      eq\n        /* \"#utility.yul\":11390:11450   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":11446:11447   */\n      0x00\n        /* \"#utility.yul\":11443:11444   */\n      dup1\n        /* \"#utility.yul\":11436:11448   */\n      revert\n        /* \"#utility.yul\":11390:11450   */\n    tag_467:\n        /* \"#utility.yul\":11340:11456   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11462:11599   */\n    tag_332:\n        /* \"#utility.yul\":11516:11521   */\n      0x00\n        /* \"#utility.yul\":11547:11553   */\n      dup2\n        /* \"#utility.yul\":11541:11554   */\n      mload\n        /* \"#utility.yul\":11532:11554   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11593   */\n      tag_469\n        /* \"#utility.yul\":11587:11592   */\n      dup2\n        /* \"#utility.yul\":11563:11593   */\n      tag_331\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11462:11599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11605:11950   */\n    tag_152:\n        /* \"#utility.yul\":11672:11678   */\n      0x00\n        /* \"#utility.yul\":11721:11723   */\n      0x20\n        /* \"#utility.yul\":11709:11718   */\n      dup3\n        /* \"#utility.yul\":11700:11707   */\n      dup5\n        /* \"#utility.yul\":11696:11719   */\n      sub\n        /* \"#utility.yul\":11692:11724   */\n      slt\n        /* \"#utility.yul\":11689:11808   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":11727:11806   */\n      tag_472\n      tag_301\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11689:11808   */\n    tag_471:\n        /* \"#utility.yul\":11847:11848   */\n      0x00\n        /* \"#utility.yul\":11872:11933   */\n      tag_473\n        /* \"#utility.yul\":11925:11932   */\n      dup5\n        /* \"#utility.yul\":11916:11922   */\n      dup3\n        /* \"#utility.yul\":11905:11914   */\n      dup6\n        /* \"#utility.yul\":11901:11923   */\n      add\n        /* \"#utility.yul\":11872:11933   */\n      tag_332\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11862:11933   */\n      swap2\n      pop\n        /* \"#utility.yul\":11818:11943   */\n      pop\n        /* \"#utility.yul\":11605:11950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11956:12150   */\n    tag_154:\n        /* \"#utility.yul\":11996:12000   */\n      0x00\n        /* \"#utility.yul\":12016:12036   */\n      tag_475\n        /* \"#utility.yul\":12034:12035   */\n      dup3\n        /* \"#utility.yul\":12016:12036   */\n      tag_303\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12011:12036   */\n      swap2\n      pop\n        /* \"#utility.yul\":12050:12070   */\n      tag_476\n        /* \"#utility.yul\":12068:12069   */\n      dup4\n        /* \"#utility.yul\":12050:12070   */\n      tag_303\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12045:12070   */\n      swap3\n      pop\n        /* \"#utility.yul\":12094:12095   */\n      dup3\n        /* \"#utility.yul\":12091:12092   */\n      dup3\n        /* \"#utility.yul\":12087:12096   */\n      sub\n        /* \"#utility.yul\":12079:12096   */\n      swap1\n      pop\n        /* \"#utility.yul\":12118:12119   */\n      dup2\n        /* \"#utility.yul\":12112:12116   */\n      dup2\n        /* \"#utility.yul\":12109:12120   */\n      gt\n        /* \"#utility.yul\":12106:12143   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":12123:12141   */\n      tag_478\n      tag_330\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12106:12143   */\n    tag_477:\n        /* \"#utility.yul\":11956:12150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12156:12566   */\n    tag_170:\n        /* \"#utility.yul\":12196:12203   */\n      0x00\n        /* \"#utility.yul\":12219:12239   */\n      tag_480\n        /* \"#utility.yul\":12237:12238   */\n      dup3\n        /* \"#utility.yul\":12219:12239   */\n      tag_303\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12214:12239   */\n      swap2\n      pop\n        /* \"#utility.yul\":12253:12273   */\n      tag_481\n        /* \"#utility.yul\":12271:12272   */\n      dup4\n        /* \"#utility.yul\":12253:12273   */\n      tag_303\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12248:12273   */\n      swap3\n      pop\n        /* \"#utility.yul\":12308:12309   */\n      dup3\n        /* \"#utility.yul\":12305:12306   */\n      dup3\n        /* \"#utility.yul\":12301:12310   */\n      mul\n        /* \"#utility.yul\":12330:12360   */\n      tag_482\n        /* \"#utility.yul\":12348:12359   */\n      dup2\n        /* \"#utility.yul\":12330:12360   */\n      tag_303\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12319:12360   */\n      swap2\n      pop\n        /* \"#utility.yul\":12509:12510   */\n      dup3\n        /* \"#utility.yul\":12500:12507   */\n      dup3\n        /* \"#utility.yul\":12496:12511   */\n      div\n        /* \"#utility.yul\":12493:12494   */\n      dup5\n        /* \"#utility.yul\":12490:12512   */\n      eq\n        /* \"#utility.yul\":12470:12471   */\n      dup4\n        /* \"#utility.yul\":12463:12472   */\n      iszero\n        /* \"#utility.yul\":12443:12526   */\n      or\n        /* \"#utility.yul\":12420:12559   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":12539:12557   */\n      tag_484\n      tag_330\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":12420:12559   */\n    tag_483:\n        /* \"#utility.yul\":12204:12566   */\n      pop\n        /* \"#utility.yul\":12156:12566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12572:12752   */\n    tag_333:\n        /* \"#utility.yul\":12620:12697   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12617:12618   */\n      0x00\n        /* \"#utility.yul\":12610:12698   */\n      mstore\n        /* \"#utility.yul\":12717:12721   */\n      0x12\n        /* \"#utility.yul\":12714:12715   */\n      0x04\n        /* \"#utility.yul\":12707:12722   */\n      mstore\n        /* \"#utility.yul\":12741:12745   */\n      0x24\n        /* \"#utility.yul\":12738:12739   */\n      0x00\n        /* \"#utility.yul\":12731:12746   */\n      revert\n        /* \"#utility.yul\":12758:12943   */\n    tag_172:\n        /* \"#utility.yul\":12798:12799   */\n      0x00\n        /* \"#utility.yul\":12815:12835   */\n      tag_487\n        /* \"#utility.yul\":12833:12834   */\n      dup3\n        /* \"#utility.yul\":12815:12835   */\n      tag_303\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12810:12835   */\n      swap2\n      pop\n        /* \"#utility.yul\":12849:12869   */\n      tag_488\n        /* \"#utility.yul\":12867:12868   */\n      dup4\n        /* \"#utility.yul\":12849:12869   */\n      tag_303\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12844:12869   */\n      swap3\n      pop\n        /* \"#utility.yul\":12888:12889   */\n      dup3\n        /* \"#utility.yul\":12878:12913   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":12893:12911   */\n      tag_490\n      tag_333\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12878:12913   */\n    tag_489:\n        /* \"#utility.yul\":12935:12936   */\n      dup3\n        /* \"#utility.yul\":12932:12933   */\n      dup3\n        /* \"#utility.yul\":12928:12937   */\n      div\n        /* \"#utility.yul\":12923:12937   */\n      swap1\n      pop\n        /* \"#utility.yul\":12758:12943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12949:13119   */\n    tag_334:\n        /* \"#utility.yul\":13089:13111   */\n      0x4669727374204465706f73697420546f6b656e73000000000000000000000000\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13077:13083   */\n      dup3\n        /* \"#utility.yul\":13073:13087   */\n      add\n        /* \"#utility.yul\":13066:13112   */\n      mstore\n        /* \"#utility.yul\":12949:13119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13125:13491   */\n    tag_335:\n        /* \"#utility.yul\":13267:13270   */\n      0x00\n        /* \"#utility.yul\":13288:13355   */\n      tag_493\n        /* \"#utility.yul\":13352:13354   */\n      0x14\n        /* \"#utility.yul\":13347:13350   */\n      dup4\n        /* \"#utility.yul\":13288:13355   */\n      tag_320\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13281:13355   */\n      swap2\n      pop\n        /* \"#utility.yul\":13364:13457   */\n      tag_494\n        /* \"#utility.yul\":13453:13456   */\n      dup3\n        /* \"#utility.yul\":13364:13457   */\n      tag_334\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13482:13484   */\n      0x20\n        /* \"#utility.yul\":13477:13480   */\n      dup3\n        /* \"#utility.yul\":13473:13485   */\n      add\n        /* \"#utility.yul\":13466:13485   */\n      swap1\n      pop\n        /* \"#utility.yul\":13125:13491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13497:13916   */\n    tag_190:\n        /* \"#utility.yul\":13663:13667   */\n      0x00\n        /* \"#utility.yul\":13701:13703   */\n      0x20\n        /* \"#utility.yul\":13690:13699   */\n      dup3\n        /* \"#utility.yul\":13686:13704   */\n      add\n        /* \"#utility.yul\":13678:13704   */\n      swap1\n      pop\n        /* \"#utility.yul\":13750:13759   */\n      dup2\n        /* \"#utility.yul\":13744:13748   */\n      dup2\n        /* \"#utility.yul\":13740:13760   */\n      sub\n        /* \"#utility.yul\":13736:13737   */\n      0x00\n        /* \"#utility.yul\":13725:13734   */\n      dup4\n        /* \"#utility.yul\":13721:13738   */\n      add\n        /* \"#utility.yul\":13714:13761   */\n      mstore\n        /* \"#utility.yul\":13778:13909   */\n      tag_496\n        /* \"#utility.yul\":13904:13908   */\n      dup2\n        /* \"#utility.yul\":13778:13909   */\n      tag_335\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13770:13909   */\n      swap1\n      pop\n        /* \"#utility.yul\":13497:13916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13922:14142   */\n    tag_336:\n        /* \"#utility.yul\":14062:14096   */\n      0x506c6561736520556e7374616b6520796f7572206465706f7369746564204e46\n        /* \"#utility.yul\":14058:14059   */\n      0x00\n        /* \"#utility.yul\":14050:14056   */\n      dup3\n        /* \"#utility.yul\":14046:14060   */\n      add\n        /* \"#utility.yul\":14039:14097   */\n      mstore\n        /* \"#utility.yul\":14131:14134   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14126:14128   */\n      0x20\n        /* \"#utility.yul\":14118:14124   */\n      dup3\n        /* \"#utility.yul\":14114:14129   */\n      add\n        /* \"#utility.yul\":14107:14135   */\n      mstore\n        /* \"#utility.yul\":13922:14142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14148:14514   */\n    tag_337:\n        /* \"#utility.yul\":14290:14293   */\n      0x00\n        /* \"#utility.yul\":14311:14378   */\n      tag_499\n        /* \"#utility.yul\":14375:14377   */\n      0x21\n        /* \"#utility.yul\":14370:14373   */\n      dup4\n        /* \"#utility.yul\":14311:14378   */\n      tag_320\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14304:14378   */\n      swap2\n      pop\n        /* \"#utility.yul\":14387:14480   */\n      tag_500\n        /* \"#utility.yul\":14476:14479   */\n      dup3\n        /* \"#utility.yul\":14387:14480   */\n      tag_336\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14505:14507   */\n      0x40\n        /* \"#utility.yul\":14500:14503   */\n      dup3\n        /* \"#utility.yul\":14496:14508   */\n      add\n        /* \"#utility.yul\":14489:14508   */\n      swap1\n      pop\n        /* \"#utility.yul\":14148:14514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14520:14939   */\n    tag_193:\n        /* \"#utility.yul\":14686:14690   */\n      0x00\n        /* \"#utility.yul\":14724:14726   */\n      0x20\n        /* \"#utility.yul\":14713:14722   */\n      dup3\n        /* \"#utility.yul\":14709:14727   */\n      add\n        /* \"#utility.yul\":14701:14727   */\n      swap1\n      pop\n        /* \"#utility.yul\":14773:14782   */\n      dup2\n        /* \"#utility.yul\":14767:14771   */\n      dup2\n        /* \"#utility.yul\":14763:14783   */\n      sub\n        /* \"#utility.yul\":14759:14760   */\n      0x00\n        /* \"#utility.yul\":14748:14757   */\n      dup4\n        /* \"#utility.yul\":14744:14761   */\n      add\n        /* \"#utility.yul\":14737:14784   */\n      mstore\n        /* \"#utility.yul\":14801:14932   */\n      tag_502\n        /* \"#utility.yul\":14927:14931   */\n      dup2\n        /* \"#utility.yul\":14801:14932   */\n      tag_337\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14793:14932   */\n      swap1\n      pop\n        /* \"#utility.yul\":14520:14939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14945:15118   */\n    tag_338:\n        /* \"#utility.yul\":15085:15110   */\n      0x4f6e6c79204f776e65722063616e207472616e73666572000000000000000000\n        /* \"#utility.yul\":15081:15082   */\n      0x00\n        /* \"#utility.yul\":15073:15079   */\n      dup3\n        /* \"#utility.yul\":15069:15083   */\n      add\n        /* \"#utility.yul\":15062:15111   */\n      mstore\n        /* \"#utility.yul\":14945:15118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15124:15490   */\n    tag_339:\n        /* \"#utility.yul\":15266:15269   */\n      0x00\n        /* \"#utility.yul\":15287:15354   */\n      tag_505\n        /* \"#utility.yul\":15351:15353   */\n      0x17\n        /* \"#utility.yul\":15346:15349   */\n      dup4\n        /* \"#utility.yul\":15287:15354   */\n      tag_320\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15280:15354   */\n      swap2\n      pop\n        /* \"#utility.yul\":15363:15456   */\n      tag_506\n        /* \"#utility.yul\":15452:15455   */\n      dup3\n        /* \"#utility.yul\":15363:15456   */\n      tag_338\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15481:15483   */\n      0x20\n        /* \"#utility.yul\":15476:15479   */\n      dup3\n        /* \"#utility.yul\":15472:15484   */\n      add\n        /* \"#utility.yul\":15465:15484   */\n      swap1\n      pop\n        /* \"#utility.yul\":15124:15490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15496:15915   */\n    tag_210:\n        /* \"#utility.yul\":15662:15666   */\n      0x00\n        /* \"#utility.yul\":15700:15702   */\n      0x20\n        /* \"#utility.yul\":15689:15698   */\n      dup3\n        /* \"#utility.yul\":15685:15703   */\n      add\n        /* \"#utility.yul\":15677:15703   */\n      swap1\n      pop\n        /* \"#utility.yul\":15749:15758   */\n      dup2\n        /* \"#utility.yul\":15743:15747   */\n      dup2\n        /* \"#utility.yul\":15739:15759   */\n      sub\n        /* \"#utility.yul\":15735:15736   */\n      0x00\n        /* \"#utility.yul\":15724:15733   */\n      dup4\n        /* \"#utility.yul\":15720:15737   */\n      add\n        /* \"#utility.yul\":15713:15760   */\n      mstore\n        /* \"#utility.yul\":15777:15908   */\n      tag_508\n        /* \"#utility.yul\":15903:15907   */\n      dup2\n        /* \"#utility.yul\":15777:15908   */\n      tag_339\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15769:15908   */\n      swap1\n      pop\n        /* \"#utility.yul\":15496:15915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15921:16146   */\n    tag_340:\n        /* \"#utility.yul\":16061:16095   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16057:16058   */\n      0x00\n        /* \"#utility.yul\":16049:16055   */\n      dup3\n        /* \"#utility.yul\":16045:16059   */\n      add\n        /* \"#utility.yul\":16038:16096   */\n      mstore\n        /* \"#utility.yul\":16130:16138   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16125:16127   */\n      0x20\n        /* \"#utility.yul\":16117:16123   */\n      dup3\n        /* \"#utility.yul\":16113:16128   */\n      add\n        /* \"#utility.yul\":16106:16139   */\n      mstore\n        /* \"#utility.yul\":15921:16146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16152:16518   */\n    tag_341:\n        /* \"#utility.yul\":16294:16297   */\n      0x00\n        /* \"#utility.yul\":16315:16382   */\n      tag_511\n        /* \"#utility.yul\":16379:16381   */\n      0x26\n        /* \"#utility.yul\":16374:16377   */\n      dup4\n        /* \"#utility.yul\":16315:16382   */\n      tag_320\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":16308:16382   */\n      swap2\n      pop\n        /* \"#utility.yul\":16391:16484   */\n      tag_512\n        /* \"#utility.yul\":16480:16483   */\n      dup3\n        /* \"#utility.yul\":16391:16484   */\n      tag_340\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16509:16511   */\n      0x40\n        /* \"#utility.yul\":16504:16507   */\n      dup3\n        /* \"#utility.yul\":16500:16512   */\n      add\n        /* \"#utility.yul\":16493:16512   */\n      swap1\n      pop\n        /* \"#utility.yul\":16152:16518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16524:16943   */\n    tag_239:\n        /* \"#utility.yul\":16690:16694   */\n      0x00\n        /* \"#utility.yul\":16728:16730   */\n      0x20\n        /* \"#utility.yul\":16717:16726   */\n      dup3\n        /* \"#utility.yul\":16713:16731   */\n      add\n        /* \"#utility.yul\":16705:16731   */\n      swap1\n      pop\n        /* \"#utility.yul\":16777:16786   */\n      dup2\n        /* \"#utility.yul\":16771:16775   */\n      dup2\n        /* \"#utility.yul\":16767:16787   */\n      sub\n        /* \"#utility.yul\":16763:16764   */\n      0x00\n        /* \"#utility.yul\":16752:16761   */\n      dup4\n        /* \"#utility.yul\":16748:16765   */\n      add\n        /* \"#utility.yul\":16741:16788   */\n      mstore\n        /* \"#utility.yul\":16805:16936   */\n      tag_514\n        /* \"#utility.yul\":16931:16935   */\n      dup2\n        /* \"#utility.yul\":16805:16936   */\n      tag_341\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":16797:16936   */\n      swap1\n      pop\n        /* \"#utility.yul\":16524:16943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16949:17131   */\n    tag_342:\n        /* \"#utility.yul\":17089:17123   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17085:17086   */\n      0x00\n        /* \"#utility.yul\":17077:17083   */\n      dup3\n        /* \"#utility.yul\":17073:17087   */\n      add\n        /* \"#utility.yul\":17066:17124   */\n      mstore\n        /* \"#utility.yul\":16949:17131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17137:17503   */\n    tag_343:\n        /* \"#utility.yul\":17279:17282   */\n      0x00\n        /* \"#utility.yul\":17300:17367   */\n      tag_517\n        /* \"#utility.yul\":17364:17366   */\n      0x20\n        /* \"#utility.yul\":17359:17362   */\n      dup4\n        /* \"#utility.yul\":17300:17367   */\n      tag_320\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17293:17367   */\n      swap2\n      pop\n        /* \"#utility.yul\":17376:17469   */\n      tag_518\n        /* \"#utility.yul\":17465:17468   */\n      dup3\n        /* \"#utility.yul\":17376:17469   */\n      tag_342\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17494:17496   */\n      0x20\n        /* \"#utility.yul\":17489:17492   */\n      dup3\n        /* \"#utility.yul\":17485:17497   */\n      add\n        /* \"#utility.yul\":17478:17497   */\n      swap1\n      pop\n        /* \"#utility.yul\":17137:17503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17509:17928   */\n    tag_250:\n        /* \"#utility.yul\":17675:17679   */\n      0x00\n        /* \"#utility.yul\":17713:17715   */\n      0x20\n        /* \"#utility.yul\":17702:17711   */\n      dup3\n        /* \"#utility.yul\":17698:17716   */\n      add\n        /* \"#utility.yul\":17690:17716   */\n      swap1\n      pop\n        /* \"#utility.yul\":17762:17771   */\n      dup2\n        /* \"#utility.yul\":17756:17760   */\n      dup2\n        /* \"#utility.yul\":17752:17772   */\n      sub\n        /* \"#utility.yul\":17748:17749   */\n      0x00\n        /* \"#utility.yul\":17737:17746   */\n      dup4\n        /* \"#utility.yul\":17733:17750   */\n      add\n        /* \"#utility.yul\":17726:17773   */\n      mstore\n        /* \"#utility.yul\":17790:17921   */\n      tag_520\n        /* \"#utility.yul\":17916:17920   */\n      dup2\n        /* \"#utility.yul\":17790:17921   */\n      tag_343\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":17782:17921   */\n      swap1\n      pop\n        /* \"#utility.yul\":17509:17928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17934:18376   */\n    tag_254:\n        /* \"#utility.yul\":18083:18087   */\n      0x00\n        /* \"#utility.yul\":18121:18123   */\n      0x60\n        /* \"#utility.yul\":18110:18119   */\n      dup3\n        /* \"#utility.yul\":18106:18124   */\n      add\n        /* \"#utility.yul\":18098:18124   */\n      swap1\n      pop\n        /* \"#utility.yul\":18134:18205   */\n      tag_522\n        /* \"#utility.yul\":18202:18203   */\n      0x00\n        /* \"#utility.yul\":18191:18200   */\n      dup4\n        /* \"#utility.yul\":18187:18204   */\n      add\n        /* \"#utility.yul\":18178:18184   */\n      dup7\n        /* \"#utility.yul\":18134:18205   */\n      tag_309\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18215:18287   */\n      tag_523\n        /* \"#utility.yul\":18283:18285   */\n      0x20\n        /* \"#utility.yul\":18272:18281   */\n      dup4\n        /* \"#utility.yul\":18268:18286   */\n      add\n        /* \"#utility.yul\":18259:18265   */\n      dup6\n        /* \"#utility.yul\":18215:18287   */\n      tag_309\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18297:18369   */\n      tag_524\n        /* \"#utility.yul\":18365:18367   */\n      0x40\n        /* \"#utility.yul\":18354:18363   */\n      dup4\n        /* \"#utility.yul\":18350:18368   */\n      add\n        /* \"#utility.yul\":18341:18347   */\n      dup5\n        /* \"#utility.yul\":18297:18369   */\n      tag_306\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17934:18376   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18382:18611   */\n    tag_344:\n        /* \"#utility.yul\":18522:18556   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":18518:18519   */\n      0x00\n        /* \"#utility.yul\":18510:18516   */\n      dup3\n        /* \"#utility.yul\":18506:18520   */\n      add\n        /* \"#utility.yul\":18499:18557   */\n      mstore\n        /* \"#utility.yul\":18591:18603   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18586:18588   */\n      0x20\n        /* \"#utility.yul\":18578:18584   */\n      dup3\n        /* \"#utility.yul\":18574:18589   */\n      add\n        /* \"#utility.yul\":18567:18604   */\n      mstore\n        /* \"#utility.yul\":18382:18611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18617:18983   */\n    tag_345:\n        /* \"#utility.yul\":18759:18762   */\n      0x00\n        /* \"#utility.yul\":18780:18847   */\n      tag_527\n        /* \"#utility.yul\":18844:18846   */\n      0x2a\n        /* \"#utility.yul\":18839:18842   */\n      dup4\n        /* \"#utility.yul\":18780:18847   */\n      tag_320\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18773:18847   */\n      swap2\n      pop\n        /* \"#utility.yul\":18856:18949   */\n      tag_528\n        /* \"#utility.yul\":18945:18948   */\n      dup3\n        /* \"#utility.yul\":18856:18949   */\n      tag_344\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18974:18976   */\n      0x40\n        /* \"#utility.yul\":18969:18972   */\n      dup3\n        /* \"#utility.yul\":18965:18977   */\n      add\n        /* \"#utility.yul\":18958:18977   */\n      swap1\n      pop\n        /* \"#utility.yul\":18617:18983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18989:19408   */\n    tag_268:\n        /* \"#utility.yul\":19155:19159   */\n      0x00\n        /* \"#utility.yul\":19193:19195   */\n      0x20\n        /* \"#utility.yul\":19182:19191   */\n      dup3\n        /* \"#utility.yul\":19178:19196   */\n      add\n        /* \"#utility.yul\":19170:19196   */\n      swap1\n      pop\n        /* \"#utility.yul\":19242:19251   */\n      dup2\n        /* \"#utility.yul\":19236:19240   */\n      dup2\n        /* \"#utility.yul\":19232:19252   */\n      sub\n        /* \"#utility.yul\":19228:19229   */\n      0x00\n        /* \"#utility.yul\":19217:19226   */\n      dup4\n        /* \"#utility.yul\":19213:19230   */\n      add\n        /* \"#utility.yul\":19206:19253   */\n      mstore\n        /* \"#utility.yul\":19270:19401   */\n      tag_530\n        /* \"#utility.yul\":19396:19400   */\n      dup2\n        /* \"#utility.yul\":19270:19401   */\n      tag_345\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":19262:19401   */\n      swap1\n      pop\n        /* \"#utility.yul\":18989:19408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19414:19639   */\n    tag_346:\n        /* \"#utility.yul\":19554:19588   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":19550:19551   */\n      0x00\n        /* \"#utility.yul\":19542:19548   */\n      dup3\n        /* \"#utility.yul\":19538:19552   */\n      add\n        /* \"#utility.yul\":19531:19589   */\n      mstore\n        /* \"#utility.yul\":19623:19631   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19618:19620   */\n      0x20\n        /* \"#utility.yul\":19610:19616   */\n      dup3\n        /* \"#utility.yul\":19606:19621   */\n      add\n        /* \"#utility.yul\":19599:19632   */\n      mstore\n        /* \"#utility.yul\":19414:19639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19645:20011   */\n    tag_347:\n        /* \"#utility.yul\":19787:19790   */\n      0x00\n        /* \"#utility.yul\":19808:19875   */\n      tag_533\n        /* \"#utility.yul\":19872:19874   */\n      0x26\n        /* \"#utility.yul\":19867:19870   */\n      dup4\n        /* \"#utility.yul\":19808:19875   */\n      tag_320\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19801:19875   */\n      swap2\n      pop\n        /* \"#utility.yul\":19884:19977   */\n      tag_534\n        /* \"#utility.yul\":19973:19976   */\n      dup3\n        /* \"#utility.yul\":19884:19977   */\n      tag_346\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":20002:20004   */\n      0x40\n        /* \"#utility.yul\":19997:20000   */\n      dup3\n        /* \"#utility.yul\":19993:20005   */\n      add\n        /* \"#utility.yul\":19986:20005   */\n      swap1\n      pop\n        /* \"#utility.yul\":19645:20011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20017:20436   */\n    tag_275:\n        /* \"#utility.yul\":20183:20187   */\n      0x00\n        /* \"#utility.yul\":20221:20223   */\n      0x20\n        /* \"#utility.yul\":20210:20219   */\n      dup3\n        /* \"#utility.yul\":20206:20224   */\n      add\n        /* \"#utility.yul\":20198:20224   */\n      swap1\n      pop\n        /* \"#utility.yul\":20270:20279   */\n      dup2\n        /* \"#utility.yul\":20264:20268   */\n      dup2\n        /* \"#utility.yul\":20260:20280   */\n      sub\n        /* \"#utility.yul\":20256:20257   */\n      0x00\n        /* \"#utility.yul\":20245:20254   */\n      dup4\n        /* \"#utility.yul\":20241:20258   */\n      add\n        /* \"#utility.yul\":20234:20281   */\n      mstore\n        /* \"#utility.yul\":20298:20429   */\n      tag_536\n        /* \"#utility.yul\":20424:20428   */\n      dup2\n        /* \"#utility.yul\":20298:20429   */\n      tag_347\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20290:20429   */\n      swap1\n      pop\n        /* \"#utility.yul\":20017:20436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20442:20540   */\n    tag_348:\n        /* \"#utility.yul\":20493:20499   */\n      0x00\n        /* \"#utility.yul\":20527:20532   */\n      dup2\n        /* \"#utility.yul\":20521:20533   */\n      mload\n        /* \"#utility.yul\":20511:20533   */\n      swap1\n      pop\n        /* \"#utility.yul\":20442:20540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20546:20693   */\n    tag_349:\n        /* \"#utility.yul\":20647:20658   */\n      0x00\n        /* \"#utility.yul\":20684:20687   */\n      dup2\n        /* \"#utility.yul\":20669:20687   */\n      swap1\n      pop\n        /* \"#utility.yul\":20546:20693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20699:20945   */\n    tag_350:\n        /* \"#utility.yul\":20780:20781   */\n      0x00\n        /* \"#utility.yul\":20790:20903   */\n    tag_540:\n        /* \"#utility.yul\":20804:20810   */\n      dup4\n        /* \"#utility.yul\":20801:20802   */\n      dup2\n        /* \"#utility.yul\":20798:20811   */\n      lt\n        /* \"#utility.yul\":20790:20903   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":20889:20890   */\n      dup1\n        /* \"#utility.yul\":20884:20887   */\n      dup3\n        /* \"#utility.yul\":20880:20891   */\n      add\n        /* \"#utility.yul\":20874:20892   */\n      mload\n        /* \"#utility.yul\":20870:20871   */\n      dup2\n        /* \"#utility.yul\":20865:20868   */\n      dup5\n        /* \"#utility.yul\":20861:20872   */\n      add\n        /* \"#utility.yul\":20854:20893   */\n      mstore\n        /* \"#utility.yul\":20826:20828   */\n      0x20\n        /* \"#utility.yul\":20823:20824   */\n      dup2\n        /* \"#utility.yul\":20819:20829   */\n      add\n        /* \"#utility.yul\":20814:20829   */\n      swap1\n      pop\n        /* \"#utility.yul\":20790:20903   */\n      jump(tag_540)\n    tag_542:\n        /* \"#utility.yul\":20937:20938   */\n      0x00\n        /* \"#utility.yul\":20928:20934   */\n      dup5\n        /* \"#utility.yul\":20923:20926   */\n      dup5\n        /* \"#utility.yul\":20919:20935   */\n      add\n        /* \"#utility.yul\":20912:20939   */\n      mstore\n        /* \"#utility.yul\":20761:20945   */\n      pop\n        /* \"#utility.yul\":20699:20945   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20951:21337   */\n    tag_351:\n        /* \"#utility.yul\":21055:21058   */\n      0x00\n        /* \"#utility.yul\":21083:21121   */\n      tag_544\n        /* \"#utility.yul\":21115:21120   */\n      dup3\n        /* \"#utility.yul\":21083:21121   */\n      tag_348\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":21137:21225   */\n      tag_545\n        /* \"#utility.yul\":21218:21224   */\n      dup2\n        /* \"#utility.yul\":21213:21216   */\n      dup6\n        /* \"#utility.yul\":21137:21225   */\n      tag_349\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21130:21225   */\n      swap4\n      pop\n        /* \"#utility.yul\":21234:21299   */\n      tag_546\n        /* \"#utility.yul\":21292:21298   */\n      dup2\n        /* \"#utility.yul\":21287:21290   */\n      dup6\n        /* \"#utility.yul\":21280:21284   */\n      0x20\n        /* \"#utility.yul\":21273:21278   */\n      dup7\n        /* \"#utility.yul\":21269:21285   */\n      add\n        /* \"#utility.yul\":21234:21299   */\n      tag_350\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":21324:21330   */\n      dup1\n        /* \"#utility.yul\":21319:21322   */\n      dup5\n        /* \"#utility.yul\":21315:21331   */\n      add\n        /* \"#utility.yul\":21308:21331   */\n      swap2\n      pop\n        /* \"#utility.yul\":21059:21337   */\n      pop\n        /* \"#utility.yul\":20951:21337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21343:21614   */\n    tag_277:\n        /* \"#utility.yul\":21473:21476   */\n      0x00\n        /* \"#utility.yul\":21495:21588   */\n      tag_548\n        /* \"#utility.yul\":21584:21587   */\n      dup3\n        /* \"#utility.yul\":21575:21581   */\n      dup5\n        /* \"#utility.yul\":21495:21588   */\n      tag_351\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":21488:21588   */\n      swap2\n      pop\n        /* \"#utility.yul\":21605:21608   */\n      dup2\n        /* \"#utility.yul\":21598:21608   */\n      swap1\n      pop\n        /* \"#utility.yul\":21343:21614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21620:21799   */\n    tag_352:\n        /* \"#utility.yul\":21760:21791   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":21756:21757   */\n      0x00\n        /* \"#utility.yul\":21748:21754   */\n      dup3\n        /* \"#utility.yul\":21744:21758   */\n      add\n        /* \"#utility.yul\":21737:21792   */\n      mstore\n        /* \"#utility.yul\":21620:21799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21805:22171   */\n    tag_353:\n        /* \"#utility.yul\":21947:21950   */\n      0x00\n        /* \"#utility.yul\":21968:22035   */\n      tag_551\n        /* \"#utility.yul\":22032:22034   */\n      0x1d\n        /* \"#utility.yul\":22027:22030   */\n      dup4\n        /* \"#utility.yul\":21968:22035   */\n      tag_320\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":21961:22035   */\n      swap2\n      pop\n        /* \"#utility.yul\":22044:22137   */\n      tag_552\n        /* \"#utility.yul\":22133:22136   */\n      dup3\n        /* \"#utility.yul\":22044:22137   */\n      tag_352\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":22162:22164   */\n      0x20\n        /* \"#utility.yul\":22157:22160   */\n      dup3\n        /* \"#utility.yul\":22153:22165   */\n      add\n        /* \"#utility.yul\":22146:22165   */\n      swap1\n      pop\n        /* \"#utility.yul\":21805:22171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22177:22596   */\n    tag_290:\n        /* \"#utility.yul\":22343:22347   */\n      0x00\n        /* \"#utility.yul\":22381:22383   */\n      0x20\n        /* \"#utility.yul\":22370:22379   */\n      dup3\n        /* \"#utility.yul\":22366:22384   */\n      add\n        /* \"#utility.yul\":22358:22384   */\n      swap1\n      pop\n        /* \"#utility.yul\":22430:22439   */\n      dup2\n        /* \"#utility.yul\":22424:22428   */\n      dup2\n        /* \"#utility.yul\":22420:22440   */\n      sub\n        /* \"#utility.yul\":22416:22417   */\n      0x00\n        /* \"#utility.yul\":22405:22414   */\n      dup4\n        /* \"#utility.yul\":22401:22418   */\n      add\n        /* \"#utility.yul\":22394:22441   */\n      mstore\n        /* \"#utility.yul\":22458:22589   */\n      tag_554\n        /* \"#utility.yul\":22584:22588   */\n      dup2\n        /* \"#utility.yul\":22458:22589   */\n      tag_353\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":22450:22589   */\n      swap1\n      pop\n        /* \"#utility.yul\":22177:22596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22602:22701   */\n    tag_354:\n        /* \"#utility.yul\":22654:22660   */\n      0x00\n        /* \"#utility.yul\":22688:22693   */\n      dup2\n        /* \"#utility.yul\":22682:22694   */\n      mload\n        /* \"#utility.yul\":22672:22694   */\n      swap1\n      pop\n        /* \"#utility.yul\":22602:22701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22707:22809   */\n    tag_355:\n        /* \"#utility.yul\":22748:22754   */\n      0x00\n        /* \"#utility.yul\":22799:22801   */\n      0x1f\n        /* \"#utility.yul\":22795:22802   */\n      not\n        /* \"#utility.yul\":22790:22792   */\n      0x1f\n        /* \"#utility.yul\":22783:22788   */\n      dup4\n        /* \"#utility.yul\":22779:22793   */\n      add\n        /* \"#utility.yul\":22775:22803   */\n      and\n        /* \"#utility.yul\":22765:22803   */\n      swap1\n      pop\n        /* \"#utility.yul\":22707:22809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22815:23192   */\n    tag_356:\n        /* \"#utility.yul\":22903:22906   */\n      0x00\n        /* \"#utility.yul\":22931:22970   */\n      tag_558\n        /* \"#utility.yul\":22964:22969   */\n      dup3\n        /* \"#utility.yul\":22931:22970   */\n      tag_354\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":22986:23057   */\n      tag_559\n        /* \"#utility.yul\":23050:23056   */\n      dup2\n        /* \"#utility.yul\":23045:23048   */\n      dup6\n        /* \"#utility.yul\":22986:23057   */\n      tag_320\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22979:23057   */\n      swap4\n      pop\n        /* \"#utility.yul\":23066:23131   */\n      tag_560\n        /* \"#utility.yul\":23124:23130   */\n      dup2\n        /* \"#utility.yul\":23119:23122   */\n      dup6\n        /* \"#utility.yul\":23112:23116   */\n      0x20\n        /* \"#utility.yul\":23105:23110   */\n      dup7\n        /* \"#utility.yul\":23101:23117   */\n      add\n        /* \"#utility.yul\":23066:23131   */\n      tag_350\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":23156:23185   */\n      tag_561\n        /* \"#utility.yul\":23178:23184   */\n      dup2\n        /* \"#utility.yul\":23156:23185   */\n      tag_355\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":23151:23154   */\n      dup5\n        /* \"#utility.yul\":23147:23186   */\n      add\n        /* \"#utility.yul\":23140:23186   */\n      swap2\n      pop\n        /* \"#utility.yul\":22907:23192   */\n      pop\n        /* \"#utility.yul\":22815:23192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23198:23511   */\n    tag_299:\n        /* \"#utility.yul\":23311:23315   */\n      0x00\n        /* \"#utility.yul\":23349:23351   */\n      0x20\n        /* \"#utility.yul\":23338:23347   */\n      dup3\n        /* \"#utility.yul\":23334:23352   */\n      add\n        /* \"#utility.yul\":23326:23352   */\n      swap1\n      pop\n        /* \"#utility.yul\":23398:23407   */\n      dup2\n        /* \"#utility.yul\":23392:23396   */\n      dup2\n        /* \"#utility.yul\":23388:23408   */\n      sub\n        /* \"#utility.yul\":23384:23385   */\n      0x00\n        /* \"#utility.yul\":23373:23382   */\n      dup4\n        /* \"#utility.yul\":23369:23386   */\n      add\n        /* \"#utility.yul\":23362:23409   */\n      mstore\n        /* \"#utility.yul\":23426:23504   */\n      tag_563\n        /* \"#utility.yul\":23499:23503   */\n      dup2\n        /* \"#utility.yul\":23490:23496   */\n      dup5\n        /* \"#utility.yul\":23426:23504   */\n      tag_356\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":23418:23504   */\n      swap1\n      pop\n        /* \"#utility.yul\":23198:23511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c1938222690343043529fa20c731e6b671f6e08d1d743b6fbc32d8d8c3f8009164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1119": {
									"entryPoint": null,
									"id": 1119,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1014": {
									"entryPoint": 298,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 306,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1871:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:11",
														"type": ""
													}
												],
												"src": "845:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:11"
															},
															"nodeType": "YulIf",
															"src": "981:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:11",
														"type": ""
													}
												],
												"src": "928:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:11",
														"type": ""
													}
												],
												"src": "1056:143:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:552:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:32:11"
															},
															"nodeType": "YulIf",
															"src": "1326:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:128:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:129:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1732:129:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1777:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1309:6:11",
														"type": ""
													}
												],
												"src": "1205:663:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002e2838038062002e2883398181016040528101906200003791906200029b565b620000576200004b6200012a60201b60201c565b6200013260201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160058190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620002f7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022882620001fb565b9050919050565b6200023a816200021b565b81146200024657600080fd5b50565b6000815190506200025a816200022f565b92915050565b6000819050919050565b620002758162000260565b81146200028157600080fd5b50565b60008151905062000295816200026a565b92915050565b600080600060608486031215620002b757620002b6620001f6565b5b6000620002c78682870162000249565b9350506020620002da8682870162000284565b9250506040620002ed8682870162000249565b9150509250925092565b612b2180620003076000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063c45af5d81161007c578063c45af5d81461038d578063e4458b30146103bd578063e88cc2be146103ef578063ee0106d214610421578063f2fde38b1461043d578063f89d832f1461045957610158565b80638da5cb5b146102df578063934ed772146102fd578063a6021ace14610319578063a88e132f14610337578063b7171a2e14610353578063c0cd40ee1461037157610158565b80634d6ce1e5116101155780634d6ce1e514610231578063574880641461024d57806357ea89b61461027d578063715018a6146102875780637b2f247f146102915780638b73e331146102af57610158565b8063023245d71461015d5780630ccff6e91461017957806310fd4fba14610197578063150b7a02146101b5578063275bd33f146101e55780632ffce21014610201575b600080fd5b61017760048036038101906101729190611f4b565b610475565b005b6101816105fe565b60405161018e9190611f87565b60405180910390f35b61019f610604565b6040516101ac9190611fe3565b60405180910390f35b6101cf60048036038101906101ca919061208f565b61062a565b6040516101dc9190612152565b60405180910390f35b6101ff60048036038101906101fa919061216d565b61063f565b005b61021b6004803603810190610216919061216d565b61068b565b6040516102289190611f87565b60405180910390f35b61024b60048036038101906102469190611f4b565b6106a3565b005b6102676004803603810190610262919061216d565b610819565b6040516102749190611f87565b60405180910390f35b610285610831565b005b61028f610e16565b005b610299610e2a565b6040516102a69190611f87565b60405180910390f35b6102c960048036038101906102c4919061216d565b610eb1565b6040516102d69190611f87565b60405180910390f35b6102e76110ef565b6040516102f49190611fe3565b60405180910390f35b6103176004803603810190610312919061219a565b611118565b005b61032161135f565b60405161032e9190611fe3565b60405180910390f35b610351600480360381019061034c9190611f4b565b611385565b005b61035b61144c565b6040516103689190611fe3565b60405180910390f35b61038b60048036038101906103869190611f4b565b611472565b005b6103a760048036038101906103a2919061216d565b6115cb565b6040516103b49190611f87565b60405180910390f35b6103d760048036038101906103d2919061216d565b6118cf565b6040516103e6939291906121f5565b60405180910390f35b6104096004803603810190610404919061216d565b611906565b604051610418939291906121f5565b60405180910390f35b61043b6004803603810190610436919061216d565b61193d565b005b6104576004803603810190610452919061216d565b611989565b005b610473600480360381019061046e9190611f4b565b611a0c565b005b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90612289565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033846040518463ffffffff1660e01b8152600401610563939291906122e0565b600060405180830381600087803b15801561057d57600080fd5b505af1158015610591573d6000803e3d6000fd5b50505050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055505050565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600063150b7a0260e01b905095945050505050565b610647611a1e565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528060005260406000206000915090505481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90612376565b60405180910390fd5b604051806060016040528082815260200142815260200160011515815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050610816333083600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a9c909392919063ffffffff16565b50565b60076020528060005260406000206000915090505481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b7906123e2565b60405180910390fd5b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610c33576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600061096733610eb1565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610a0a939291906122e0565b600060405180830381600087803b158015610a2457600080fd5b505af1158015610a38573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385610a879190612431565b6040518363ffffffff1660e01b8152600401610aa4929190612465565b6020604051808303816000875af1158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae791906124ba565b508060086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b5991906124e7565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff02191690555050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff021916905550505050610e14565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610c8533610eb1565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385610cd29190612431565b6040518363ffffffff1660e01b8152600401610cef929190612465565b6020604051808303816000875af1158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3291906124ba565b508060086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da491906124e7565b92505081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055505050505b565b610e1e611a1e565b610e286000611b25565b565b600080600454606460086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e9e919061251b565b610ea8919061258c565b90508091505090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161561101b576000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015442610f5a91906124e7565b610f64919061258c565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610ff4919061251b565b610ffe919061251b565b9050600060648261100f919061258c565b905080925050506110ea565b6000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261106d91906124e7565b611077919061258c565b600554600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546110c7919061251b565b6110d1919061251b565b905060006064826110e2919061258c565b905080925050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90612609565b60405180910390fd5b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16611236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122d9061269b565b60405180910390fd5b604051806060016040528082815260200183815260200160011515815250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b8152600401611329939291906122e0565b600060405180830381600087803b15801561134357600080fd5b505af1158015611357573d6000803e3d6000fd5b505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61138d611a1e565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113dc91906124e7565b9250508190555080600460008282546113f591906124e7565b925050819055506114493382600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611be99092919063ffffffff16565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61147a611a1e565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150190612707565b60405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115599190612431565b9250508190555080600460008282546115729190612431565b925050819055506115c8333083600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a9c909392919063ffffffff16565b50565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615611798576000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261167491906124e7565b61167e919061258c565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461170e919061251b565b611718919061251b565b90506000606482611729919061258c565b9050600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154816117799190612431565b9250670de0b6b3a76400008361178f919061258c565b925050506118ca565b6000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117ea91906124e7565b6117f4919061258c565b600554600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611844919061251b565b61184e919061251b565b9050600060648261185f919061258c565b9050600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154816118af9190612431565b9250670de0b6b3a7640000836118c5919061258c565b925050505b919050565b60096020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60066020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b611945611a1e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611991611a1e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f790612799565b60405180910390fd5b611a0981611b25565b50565b611a14611a1e565b8060058190555050565b611a26611c6f565b73ffffffffffffffffffffffffffffffffffffffff16611a446110ef565b73ffffffffffffffffffffffffffffffffffffffff1614611a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9190612805565b60405180910390fd5b565b611b1f846323b872dd60e01b858585604051602401611abd93929190612825565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c77565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c6a8363a9059cbb60e01b8484604051602401611c08929190612465565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c77565b505050565b600033905090565b6000611cd9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d3e9092919063ffffffff16565b9050600081511115611d395780806020019051810190611cf991906124ba565b611d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2f906128ce565b60405180910390fd5b5b505050565b6060611d4d8484600085611d56565b90509392505050565b606082471015611d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9290612960565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611dc491906129f1565b60006040518083038185875af1925050503d8060008114611e01576040519150601f19603f3d011682016040523d82523d6000602084013e611e06565b606091505b5091509150611e1787838387611e23565b92505050949350505050565b60608315611e85576000835103611e7d57611e3d85611e98565b611e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7390612a54565b60405180910390fd5b5b829050611e90565b611e8f8383611ebb565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611ece5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f029190612ac9565b60405180910390fd5b600080fd5b600080fd5b6000819050919050565b611f2881611f15565b8114611f3357600080fd5b50565b600081359050611f4581611f1f565b92915050565b600060208284031215611f6157611f60611f0b565b5b6000611f6f84828501611f36565b91505092915050565b611f8181611f15565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fcd82611fa2565b9050919050565b611fdd81611fc2565b82525050565b6000602082019050611ff86000830184611fd4565b92915050565b61200781611fc2565b811461201257600080fd5b50565b60008135905061202481611ffe565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261204f5761204e61202a565b5b8235905067ffffffffffffffff81111561206c5761206b61202f565b5b60208301915083600182028301111561208857612087612034565b5b9250929050565b6000806000806000608086880312156120ab576120aa611f0b565b5b60006120b988828901612015565b95505060206120ca88828901612015565b94505060406120db88828901611f36565b935050606086013567ffffffffffffffff8111156120fc576120fb611f10565b5b61210888828901612039565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61214c81612117565b82525050565b60006020820190506121676000830184612143565b92915050565b60006020828403121561218357612182611f0b565b5b600061219184828501612015565b91505092915050565b600080604083850312156121b1576121b0611f0b565b5b60006121bf85828601611f36565b92505060206121d085828601611f36565b9150509250929050565b60008115159050919050565b6121ef816121da565b82525050565b600060608201905061220a6000830186611f78565b6122176020830185611f78565b61222460408301846121e6565b949350505050565b600082825260208201905092915050565b7f506c65617365204669727374205374616b65204e465473000000000000000000600082015250565b600061227360178361222c565b915061227e8261223d565b602082019050919050565b600060208201905081810360008301526122a281612266565b9050919050565b600082825260208201905092915050565b50565b60006122ca6000836122a9565b91506122d5826122ba565b600082019050919050565b60006080820190506122f56000830186611fd4565b6123026020830185611fd4565b61230f6040830184611f78565b8181036060830152612320816122bd565b9050949350505050565b7f506c656173652046697273742057697468447261770000000000000000000000600082015250565b600061236060158361222c565b915061236b8261232a565b602082019050919050565b6000602082019050818103600083015261238f81612353565b9050919050565b7f506c65617365204669727374205374616b650000000000000000000000000000600082015250565b60006123cc60128361222c565b91506123d782612396565b602082019050919050565b600060208201905081810360008301526123fb816123bf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061243c82611f15565b915061244783611f15565b925082820190508082111561245f5761245e612402565b5b92915050565b600060408201905061247a6000830185611fd4565b6124876020830184611f78565b9392505050565b612497816121da565b81146124a257600080fd5b50565b6000815190506124b48161248e565b92915050565b6000602082840312156124d0576124cf611f0b565b5b60006124de848285016124a5565b91505092915050565b60006124f282611f15565b91506124fd83611f15565b925082820390508181111561251557612514612402565b5b92915050565b600061252682611f15565b915061253183611f15565b925082820261253f81611f15565b9150828204841483151761255657612555612402565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061259782611f15565b91506125a283611f15565b9250826125b2576125b161255d565b5b828204905092915050565b7f4669727374204465706f73697420546f6b656e73000000000000000000000000600082015250565b60006125f360148361222c565b91506125fe826125bd565b602082019050919050565b60006020820190508181036000830152612622816125e6565b9050919050565b7f506c6561736520556e7374616b6520796f7572206465706f7369746564204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b600061268560218361222c565b915061269082612629565b604082019050919050565b600060208201905081810360008301526126b481612678565b9050919050565b7f4f6e6c79204f776e65722063616e207472616e73666572000000000000000000600082015250565b60006126f160178361222c565b91506126fc826126bb565b602082019050919050565b60006020820190508181036000830152612720816126e4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061278360268361222c565b915061278e82612727565b604082019050919050565b600060208201905081810360008301526127b281612776565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127ef60208361222c565b91506127fa826127b9565b602082019050919050565b6000602082019050818103600083015261281e816127e2565b9050919050565b600060608201905061283a6000830186611fd4565b6128476020830185611fd4565b6128546040830184611f78565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006128b8602a8361222c565b91506128c38261285c565b604082019050919050565b600060208201905081810360008301526128e7816128ab565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061294a60268361222c565b9150612955826128ee565b604082019050919050565b600060208201905081810360008301526129798161293d565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156129b4578082015181840152602081019050612999565b60008484015250505050565b60006129cb82612980565b6129d5818561298b565b93506129e5818560208601612996565b80840191505092915050565b60006129fd82846129c0565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612a3e601d8361222c565b9150612a4982612a08565b602082019050919050565b60006020820190508181036000830152612a6d81612a31565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612a9b82612a74565b612aa5818561222c565b9350612ab5818560208601612996565b612abe81612a7f565b840191505092915050565b60006020820190508181036000830152612ae38184612a90565b90509291505056fea2646970667358221220c1938222690343043529fa20c731e6b671f6e08d1d743b6fbc32d8d8c3f8009164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2E28 CODESIZE SUB DUP1 PUSH3 0x2E28 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x29B JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x12A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x228 DUP3 PUSH3 0x1FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23A DUP2 PUSH3 0x21B JUMP JUMPDEST DUP2 EQ PUSH3 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25A DUP2 PUSH3 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x275 DUP2 PUSH3 0x260 JUMP JUMPDEST DUP2 EQ PUSH3 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x295 DUP2 PUSH3 0x26A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2B7 JUMPI PUSH3 0x2B6 PUSH3 0x1F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2C7 DUP7 DUP3 DUP8 ADD PUSH3 0x249 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2DA DUP7 DUP3 DUP8 ADD PUSH3 0x284 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2ED DUP7 DUP3 DUP8 ADD PUSH3 0x249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2B21 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC45AF5D8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC45AF5D8 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xE4458B30 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xE88CC2BE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xEE0106D2 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xF89D832F EQ PUSH2 0x459 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x934ED772 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xA6021ACE EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xA88E132F EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xB7171A2E EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x371 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x4D6CE1E5 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4D6CE1E5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x57488064 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x7B2F247F EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8B73E331 EQ PUSH2 0x2AF JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x23245D7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xCCFF6E9 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x10FD4FBA EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x275BD33F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x2FFCE210 EQ PUSH2 0x201 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0xE16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x1118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH2 0x135F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1472 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x193D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x1989 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x563 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72A SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x816 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC33 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x967 CALLER PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 DUP6 PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA4 SWAP3 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xC85 CALLER PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 DUP6 PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP3 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0xE28 PUSH1 0x0 PUSH2 0x1B25 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD PUSH1 0x64 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE9E SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x101B JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0xF64 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122D SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1329 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x138D PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1449 CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BE9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x147A PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP1 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15C8 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1798 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1674 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x167E SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x1718 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1729 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x178F SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17EA SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x17F4 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1844 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x18AF SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x18C5 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1945 PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1991 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F7 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A09 DUP2 PUSH2 0x1B25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A14 PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1A26 PUSH2 0x1C6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A44 PUSH2 0x10EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A91 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B1F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1ABD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C6A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C08 SWAP3 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D3E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D39 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CF9 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH2 0x1D38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2F SWAP1 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D4D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D92 SWAP1 PUSH2 0x2960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DC4 SWAP2 SWAP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E17 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1E23 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E85 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1E7D JUMPI PUSH2 0x1E3D DUP6 PUSH2 0x1E98 JUMP JUMPDEST PUSH2 0x1E7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E73 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0x1E8F DUP4 DUP4 PUSH2 0x1EBB JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1ECE JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F28 DUP2 PUSH2 0x1F15 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F45 DUP2 PUSH2 0x1F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH2 0x1F60 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6F DUP5 DUP3 DUP6 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1F15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCD DUP3 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDD DUP2 PUSH2 0x1FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2007 DUP2 PUSH2 0x1FC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2024 DUP2 PUSH2 0x1FFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x202A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x202F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2088 JUMPI PUSH2 0x2087 PUSH2 0x2034 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP9 DUP3 DUP10 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20CA DUP9 DUP3 DUP10 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x20DB DUP9 DUP3 DUP10 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x1F10 JUMP JUMPDEST JUMPDEST PUSH2 0x2108 DUP9 DUP3 DUP10 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214C DUP2 PUSH2 0x2117 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2167 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2183 JUMPI PUSH2 0x2182 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2191 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BF DUP6 DUP3 DUP7 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21D0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EF DUP2 PUSH2 0x21DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x220A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2217 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2224 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21E6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B65204E465473000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2273 PUSH1 0x17 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x227E DUP3 PUSH2 0x223D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22A2 DUP2 PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CA PUSH1 0x0 DUP4 PUSH2 0x22A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x22D5 DUP3 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2302 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x230F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2320 DUP2 PUSH2 0x22BD JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x506C656173652046697273742057697468447261770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2360 PUSH1 0x15 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x236B DUP3 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238F DUP2 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CC PUSH1 0x12 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x23D7 DUP3 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23FB DUP2 PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x243C DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x2447 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x245F JUMPI PUSH2 0x245E PUSH2 0x2402 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x247A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2487 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2497 DUP2 PUSH2 0x21DA JUMP JUMPDEST DUP2 EQ PUSH2 0x24A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B4 DUP2 PUSH2 0x248E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x24CF PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24DE DUP5 DUP3 DUP6 ADD PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F2 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FD DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2515 JUMPI PUSH2 0x2514 PUSH2 0x2402 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x253F DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2556 JUMPI PUSH2 0x2555 PUSH2 0x2402 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2597 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A2 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25B2 JUMPI PUSH2 0x25B1 PUSH2 0x255D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4669727374204465706F73697420546F6B656E73000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F3 PUSH1 0x14 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x25FE DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2622 DUP2 PUSH2 0x25E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520556E7374616B6520796F7572206465706F7369746564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2685 PUSH1 0x21 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x2690 DUP3 PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B4 DUP2 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F776E65722063616E207472616E73666572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F1 PUSH1 0x17 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x26FC DUP3 PUSH2 0x26BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2720 DUP2 PUSH2 0x26E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2783 PUSH1 0x26 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x278E DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B2 DUP2 PUSH2 0x2776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EF PUSH1 0x20 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x27FA DUP3 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281E DUP2 PUSH2 0x27E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x283A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2847 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2854 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B8 PUSH1 0x2A DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x28C3 DUP3 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E7 DUP2 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A PUSH1 0x26 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x2955 DUP3 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2979 DUP2 PUSH2 0x293D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2999 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CB DUP3 PUSH2 0x2980 JUMP JUMPDEST PUSH2 0x29D5 DUP2 DUP6 PUSH2 0x298B JUMP JUMPDEST SWAP4 POP PUSH2 0x29E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2996 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29FD DUP3 DUP5 PUSH2 0x29C0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3E PUSH1 0x1D DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A49 DUP3 PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A6D DUP2 PUSH2 0x2A31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9B DUP3 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x2AA5 DUP2 DUP6 PUSH2 0x222C JUMP JUMPDEST SWAP4 POP PUSH2 0x2AB5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x2ABE DUP2 PUSH2 0x2A7F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AE3 DUP2 DUP5 PUSH2 0x2A90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP4 DUP3 0x22 PUSH10 0x343043529FA20C731E6 0xB6 PUSH18 0xF6E08D1D743B6FBC32D8D8C3F8009164736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "348:8014:10:-:0;;;1357:235;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1467:14:10;1451:13;;:30;;;;;;;;;;;;;;;;;;1498:15;1491:4;:22;;;;1538:13;1523:12;;:28;;;;;;;;;;;;;;;;;;1575:10;1561:11;;:24;;;;;;;;;;;;;;;;;;1357:235;;;348:8014;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;348:8014:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminAddToken_1159": {
									"entryPoint": 5234,
									"id": 1159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@AdminWithDrawToken_1187": {
									"entryPoint": 4997,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@DepositNFT_1633": {
									"entryPoint": 4376,
									"id": 1633,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@Deposit_1247": {
									"entryPoint": 1699,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Details_1079": {
									"entryPoint": 6406,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ERC20Address_1056": {
									"entryPoint": 4959,
									"id": 1056,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ERC721address_1052": {
									"entryPoint": 5196,
									"id": 1052,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OwnerTokens_1087": {
									"entryPoint": 1675,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Reward_1083": {
									"entryPoint": 2073,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UpdateERC20_1570": {
									"entryPoint": 1599,
									"id": 1570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@UpdateERC721_1558": {
									"entryPoint": 6461,
									"id": 1558,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@UpdateRatePersentage_1582": {
									"entryPoint": 6668,
									"id": 1582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@UserRate_1092": {
									"entryPoint": 6351,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Utilization_1206": {
									"entryPoint": 3626,
									"id": 1206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@Withdraw_1368": {
									"entryPoint": 2097,
									"id": 1368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_506": {
									"entryPoint": 7287,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 6686,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1014": {
									"entryPoint": 7279,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1001": {
									"entryPoint": 7867,
									"id": 1001,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 6949,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateIntrest_1546": {
									"entryPoint": 3761,
									"id": 1546,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_826": {
									"entryPoint": 7510,
									"id": 826,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_762": {
									"entryPoint": 7486,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_690": {
									"entryPoint": 7832,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_1687": {
									"entryPoint": 1578,
									"id": 1687,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owenerERC20_1054": {
									"entryPoint": 1540,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 4335,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 3606,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_284": {
									"entryPoint": 6812,
									"id": 284,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_258": {
									"entryPoint": 7145,
									"id": 258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@showReward_1468": {
									"entryPoint": 5579,
									"id": 1468,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalOwnerToken_1058": {
									"entryPoint": 1534,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 6537,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_957": {
									"entryPoint": 7715,
									"id": 957,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawNFT_1668": {
									"entryPoint": 1141,
									"id": 1668,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10277,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9317,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8693,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 10023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80": {
									"entryPoint": 9915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937": {
									"entryPoint": 9661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9": {
									"entryPoint": 8765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 10332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab": {
									"entryPoint": 9769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23514:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:11"
															},
															"nodeType": "YulIf",
															"src": "470:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:11",
														"type": ""
													}
												],
												"src": "417:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:11",
														"type": ""
													}
												],
												"src": "545:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:11"
															},
															"nodeType": "YulIf",
															"src": "766:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:11",
														"type": ""
													}
												],
												"src": "690:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:11",
														"type": ""
													}
												],
												"src": "1025:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:11",
														"type": ""
													}
												],
												"src": "1149:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:11",
														"type": ""
													}
												],
												"src": "1377:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:11",
														"type": ""
													}
												],
												"src": "1509:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:11",
														"type": ""
													}
												],
												"src": "1611:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:11",
														"type": ""
													}
												],
												"src": "1735:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:11"
															},
															"nodeType": "YulIf",
															"src": "2016:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1999:5:11",
														"type": ""
													}
												],
												"src": "1963:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2121:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2129:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:11",
														"type": ""
													}
												],
												"src": "2091:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2325:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2342:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2335:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2335:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2236:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2448:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2468:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2458:12:11"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "2359:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2591:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2581:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2581:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2482:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2692:478:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2741:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2743:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2743:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2743:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2720:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2728:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2716:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2716:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2735:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:35:11"
															},
															"nodeType": "YulIf",
															"src": "2702:122:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2833:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2906:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "2908:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2908:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2908:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2875:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:30:11"
															},
															"nodeType": "YulIf",
															"src": "2872:117:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2998:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3022:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2998:8:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3081:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3083:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3083:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "3046:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3060:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3068:4:11",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3056:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3056:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3042:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3042:32:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3076:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3039:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:41:11"
															},
															"nodeType": "YulIf",
															"src": "3036:128:11"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2659:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2667:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2675:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2685:6:11",
														"type": ""
													}
												],
												"src": "2618:552:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3312:827:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3359:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3361:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3361:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3361:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3333:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3342:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3329:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3354:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3325:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:33:11"
															},
															"nodeType": "YulIf",
															"src": "3322:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3452:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3467:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3481:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3471:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3496:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3531:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3542:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3527:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3527:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3551:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3506:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3506:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3496:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3579:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3594:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3608:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3598:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3624:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3659:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3670:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3655:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3655:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3679:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3634:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3624:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3707:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3722:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3736:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3726:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3752:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3787:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3798:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3783:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3783:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3807:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3762:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3752:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3835:297:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3850:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3881:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3892:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3877:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3877:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3864:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3864:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3854:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3943:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3945:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3945:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3945:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3915:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3923:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3909:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4040:82:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4094:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4105:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4090:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4090:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4114:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4058:31:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4058:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4040:6:11"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4048:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3261:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3273:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3281:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3289:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3297:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3305:6:11",
														"type": ""
													}
												],
												"src": "3176:963:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4214:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4199:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4171:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4181:7:11",
														"type": ""
													}
												],
												"src": "4145:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4363:52:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4380:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4402:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4385:16:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4385:23:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4373:36:11"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4351:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4358:3:11",
														"type": ""
													}
												],
												"src": "4300:115:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:122:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4527:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4539:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4527:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4605:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4563:41:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:69:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:69:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4489:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4501:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4512:4:11",
														"type": ""
													}
												],
												"src": "4421:218:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4711:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4757:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4759:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4759:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4759:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4732:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4753:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4724:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:32:11"
															},
															"nodeType": "YulIf",
															"src": "4721:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4850:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4865:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4879:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4869:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4894:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4929:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4940:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4925:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4925:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4949:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4904:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4894:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4681:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4692:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4704:6:11",
														"type": ""
													}
												],
												"src": "4645:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5063:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5109:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5111:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5111:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5111:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5084:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5093:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5080:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5080:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5105:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5076:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:32:11"
															},
															"nodeType": "YulIf",
															"src": "5073:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5202:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5217:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5231:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5221:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5246:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5281:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5292:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5277:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5277:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5301:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5256:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5256:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5246:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5329:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5344:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5348:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5374:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5409:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5420:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5405:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5405:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5429:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5384:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5384:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5374:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5025:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5036:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5048:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5056:6:11",
														"type": ""
													}
												],
												"src": "4980:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5502:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5512:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5537:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5530:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5530:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5523:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5512:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5484:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5494:7:11",
														"type": ""
													}
												],
												"src": "5460:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5615:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5632:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5652:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5637:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5637:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5625:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5625:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5603:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5610:3:11",
														"type": ""
													}
												],
												"src": "5556:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5819:282:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5829:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5841:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5852:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5829:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5909:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5922:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5865:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5865:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5990:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5946:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6066:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6090:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6028:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:66:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5775:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5787:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5795:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5803:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5814:4:11",
														"type": ""
													}
												],
												"src": "5671:430:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6203:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6220:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6225:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6213:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6213:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6241:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6260:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6265:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6256:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6241:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6175:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6180:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6191:11:11",
														"type": ""
													}
												],
												"src": "6107:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6388:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6410:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6418:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6406:14:11"
																	},
																	{
																		"hexValue": "506c65617365204669727374205374616b65204e465473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6422:25:11",
																		"type": "",
																		"value": "Please First Stake NFTs"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6399:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6380:6:11",
														"type": ""
													}
												],
												"src": "6282:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:11",
														"type": ""
													}
												],
												"src": "6461:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7004:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7014:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7026:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7037:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7014:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7080:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7086:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7076:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7050:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7106:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7240:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7114:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7114:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7106:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6984:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6999:4:11",
														"type": ""
													}
												],
												"src": "6833:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7353:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7370:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7375:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7363:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7363:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7391:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7410:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7406:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7406:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7391:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7325:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7330:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7341:11:11",
														"type": ""
													}
												],
												"src": "7258:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7538:8:11",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7530:6:11",
														"type": ""
													}
												],
												"src": "7432:114:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:217:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:72:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7772:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7777:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7714:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7714:65:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7707:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7877:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7788:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7788:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7788:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7890:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7901:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7906:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7890:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7685:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7693:3:11",
														"type": ""
													}
												],
												"src": "7552:362:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8174:494:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8184:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8196:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8207:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8192:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8184:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8265:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8289:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8221:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8346:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8359:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8370:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8355:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8355:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8302:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8302:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8428:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8441:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8452:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8384:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8384:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8384:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8497:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8493:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8466:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8523:138:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8656:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8531:123:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:130:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8523:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8130:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8142:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8150:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8158:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8169:4:11",
														"type": ""
													}
												],
												"src": "7920:748:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8780:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8802:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8810:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8798:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8798:14:11"
																	},
																	{
																		"hexValue": "506c65617365204669727374205769746844726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8814:23:11",
																		"type": "",
																		"value": "Please First WithDraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8791:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8791:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8791:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8772:6:11",
														"type": ""
													}
												],
												"src": "8674:171:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8997:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9007:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9073:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9078:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9014:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9007:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9179:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d",
																	"nodeType": "YulIdentifier",
																	"src": "9090:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9090:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9090:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9192:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9203:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9208:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9199:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9192:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8985:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8993:3:11",
														"type": ""
													}
												],
												"src": "8851:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9394:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9416:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9412:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9451:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9462:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9447:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9447:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9470:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9476:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9466:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9466:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9440:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9440:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9440:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9496:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9630:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9504:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9504:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9496:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9374:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9389:4:11",
														"type": ""
													}
												],
												"src": "9223:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9754:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9776:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9784:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:14:11"
																	},
																	{
																		"hexValue": "506c65617365204669727374205374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9788:20:11",
																		"type": "",
																		"value": "Please First Stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9765:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9765:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9765:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9746:6:11",
														"type": ""
													}
												],
												"src": "9648:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9968:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9978:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10044:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10049:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9985:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9985:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10150:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
																	"nodeType": "YulIdentifier",
																	"src": "10061:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10061:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10163:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10174:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10179:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10170:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10163:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9956:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9964:3:11",
														"type": ""
													}
												],
												"src": "9822:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10365:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10375:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10387:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10375:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10422:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10433:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10418:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10418:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10441:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10447:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10437:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10437:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10411:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10411:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10411:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10467:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10601:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10475:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10475:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10467:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10345:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10360:4:11",
														"type": ""
													}
												],
												"src": "10194:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10647:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10664:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10667:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10657:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10657:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10761:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10764:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10754:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10754:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10754:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10788:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10778:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10778:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10778:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10619:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10849:147:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10859:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10882:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10864:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10859:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10893:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10916:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10898:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10898:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10893:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10927:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10938:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10941:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10934:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10934:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10927:3:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10967:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10969:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10969:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10969:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10959:1:11"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10962:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10956:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10956:10:11"
															},
															"nodeType": "YulIf",
															"src": "10953:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10836:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10839:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10845:3:11",
														"type": ""
													}
												],
												"src": "10805:191:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11128:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11138:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11150:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11161:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11146:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11146:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11138:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11218:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11231:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11242:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11227:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11227:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11174:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11174:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11312:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11323:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11308:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11308:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11255:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11255:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11255:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11092:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11104:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11112:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11123:4:11",
														"type": ""
													}
												],
												"src": "11002:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11380:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11434:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11443:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11446:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11436:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11436:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11436:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11403:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11425:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11410:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11410:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11400:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11400:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11393:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11393:40:11"
															},
															"nodeType": "YulIf",
															"src": "11390:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11373:5:11",
														"type": ""
													}
												],
												"src": "11340:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11522:77:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11532:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11547:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11541:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11541:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11532:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11587:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11563:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11563:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11500:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11508:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11516:5:11",
														"type": ""
													}
												],
												"src": "11462:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11679:271:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11725:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11727:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11727:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11727:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11700:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11709:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11696:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11696:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11721:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:32:11"
															},
															"nodeType": "YulIf",
															"src": "11689:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "11818:125:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11833:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11847:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11837:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11862:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11905:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11916:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11901:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11901:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11925:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11872:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11872:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11862:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11649:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11660:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11672:6:11",
														"type": ""
													}
												],
												"src": "11605:345:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12001:149:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12011:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12034:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12016:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12016:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12011:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12045:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12068:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12050:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12050:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12045:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12079:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12091:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12094:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12079:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12121:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12123:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12123:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12123:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12112:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12118:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12109:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:11:11"
															},
															"nodeType": "YulIf",
															"src": "12106:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11987:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11990:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11996:4:11",
														"type": ""
													}
												],
												"src": "11956:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12204:362:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12214:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12237:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12219:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12219:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12214:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12248:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12271:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12253:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12253:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12248:1:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12282:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12305:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12308:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12301:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12301:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12286:11:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12319:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12348:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12330:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12330:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12319:7:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12537:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12539:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12539:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12539:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12470:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12463:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12463:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12493:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12500:7:11"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12509:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12496:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12496:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12490:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12490:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12443:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12443:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:113:11"
															},
															"nodeType": "YulIf",
															"src": "12420:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12187:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12190:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12196:7:11",
														"type": ""
													}
												],
												"src": "12156:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12600:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12617:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12620:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12610:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12610:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12610:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12714:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12717:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12707:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12707:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12738:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12741:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12731:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12731:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12731:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12572:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12800:143:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12810:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12833:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12815:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12815:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12810:1:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12844:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12867:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12849:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12844:1:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12891:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12893:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12893:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12893:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12888:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12881:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12881:9:11"
															},
															"nodeType": "YulIf",
															"src": "12878:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12923:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12932:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12935:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12928:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12928:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12923:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12789:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12792:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12798:1:11",
														"type": ""
													}
												],
												"src": "12758:185:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13055:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13077:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13085:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13073:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13073:14:11"
																	},
																	{
																		"hexValue": "4669727374204465706f73697420546f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13089:22:11",
																		"type": "",
																		"value": "First Deposit Tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13066:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13066:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13066:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13047:6:11",
														"type": ""
													}
												],
												"src": "12949:170:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13271:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13281:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13347:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13352:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13288:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13288:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13453:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
																	"nodeType": "YulIdentifier",
																	"src": "13364:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13364:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13466:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13482:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13473:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13466:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13259:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13267:3:11",
														"type": ""
													}
												],
												"src": "13125:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13668:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13678:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13690:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13701:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13686:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13678:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13725:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13736:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13721:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13721:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13744:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13750:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13740:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13740:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13714:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13714:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13714:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13770:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13904:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13778:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13778:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13770:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13648:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13663:4:11",
														"type": ""
													}
												],
												"src": "13497:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14028:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14050:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14058:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14046:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14046:14:11"
																	},
																	{
																		"hexValue": "506c6561736520556e7374616b6520796f7572206465706f7369746564204e46",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14062:34:11",
																		"type": "",
																		"value": "Please Unstake your deposited NF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14039:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14039:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14039:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14118:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14126:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14114:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14114:15:11"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14131:3:11",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14107:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14107:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14020:6:11",
														"type": ""
													}
												],
												"src": "13922:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14294:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14304:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14370:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14375:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14311:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14304:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14476:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
																	"nodeType": "YulIdentifier",
																	"src": "14387:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14387:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14387:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14489:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14500:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14505:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14496:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14496:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14489:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14282:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14290:3:11",
														"type": ""
													}
												],
												"src": "14148:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14691:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14701:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14713:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14724:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14709:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14709:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14701:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14748:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14759:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14744:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14744:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14767:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14773:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14763:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14763:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14737:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14737:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14737:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14793:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14927:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14801:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14801:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14793:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14671:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14686:4:11",
														"type": ""
													}
												],
												"src": "14520:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15051:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15073:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15081:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15069:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15069:14:11"
																	},
																	{
																		"hexValue": "4f6e6c79204f776e65722063616e207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15085:25:11",
																		"type": "",
																		"value": "Only Owner can transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15062:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15062:49:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15062:49:11"
														}
													]
												},
												"name": "store_literal_in_memory_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15043:6:11",
														"type": ""
													}
												],
												"src": "14945:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15270:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15280:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15346:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15351:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15287:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15287:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15280:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15452:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80",
																	"nodeType": "YulIdentifier",
																	"src": "15363:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15363:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15363:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15465:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15476:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15481:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15472:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15472:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15465:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15258:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15266:3:11",
														"type": ""
													}
												],
												"src": "15124:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15667:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15677:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15689:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15700:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15685:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15685:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15677:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15724:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15735:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15720:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15743:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15749:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15739:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15739:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15713:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15713:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15769:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15903:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15777:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15769:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15647:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15662:4:11",
														"type": ""
													}
												],
												"src": "15496:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16027:119:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16049:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16057:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16045:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16045:14:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16061:34:11",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16038:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16038:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16038:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16117:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16125:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16113:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16113:15:11"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16130:8:11",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16106:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16106:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16106:33:11"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16019:6:11",
														"type": ""
													}
												],
												"src": "15921:225:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16298:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16308:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16374:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16379:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16315:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16315:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16308:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16480:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16391:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16391:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16391:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16493:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16504:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16509:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16500:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16500:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16493:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16286:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16294:3:11",
														"type": ""
													}
												],
												"src": "16152:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16695:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16705:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16717:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16728:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16713:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16713:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16705:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16752:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16763:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16748:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16748:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16771:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16777:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16767:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16767:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16741:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16741:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16741:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16797:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16931:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16805:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16805:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16797:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16675:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16690:4:11",
														"type": ""
													}
												],
												"src": "16524:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17055:76:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17077:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17085:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17073:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17073:14:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17089:34:11",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17066:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17066:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17066:58:11"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17047:6:11",
														"type": ""
													}
												],
												"src": "16949:182:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17283:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17293:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17359:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17364:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17300:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17300:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17293:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17465:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "17376:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17376:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17376:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17478:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17489:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17494:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17485:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17485:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17478:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17271:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17279:3:11",
														"type": ""
													}
												],
												"src": "17137:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17680:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17690:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17702:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17713:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17698:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17698:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17690:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17737:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17748:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17733:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17733:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17756:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17762:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17752:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17752:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17726:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17726:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17782:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17916:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17790:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17790:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17782:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17660:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17675:4:11",
														"type": ""
													}
												],
												"src": "17509:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18088:288:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18098:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18110:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18121:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18106:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18106:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18098:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18178:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18191:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18202:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18187:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18187:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18134:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18134:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18134:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18259:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18272:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18283:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18268:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18268:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18215:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18215:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18215:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18341:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18354:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18365:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18350:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18350:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18297:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18297:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18297:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18044:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18056:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18064:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18072:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18083:4:11",
														"type": ""
													}
												],
												"src": "17934:442:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18488:123:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18510:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18518:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18506:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18506:14:11"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18522:34:11",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18499:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18499:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18499:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18578:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18586:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18574:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18574:15:11"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18591:12:11",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18567:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18567:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18567:37:11"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18480:6:11",
														"type": ""
													}
												],
												"src": "18382:229:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18763:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18773:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18839:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18844:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18780:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18780:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18773:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18945:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "18856:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18856:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18856:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18958:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18969:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18974:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18965:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18965:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18958:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18751:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18759:3:11",
														"type": ""
													}
												],
												"src": "18617:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19160:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19170:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19182:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19193:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19178:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19178:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19170:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19217:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19228:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19213:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19213:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19236:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19242:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19232:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19232:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19206:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19206:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19206:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19262:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19396:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19270:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19270:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19262:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19140:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19155:4:11",
														"type": ""
													}
												],
												"src": "18989:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19520:119:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19542:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19550:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19538:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19538:14:11"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19554:34:11",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19531:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19531:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19531:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19610:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19618:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19606:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19606:15:11"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19623:8:11",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19599:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19599:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19599:33:11"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19512:6:11",
														"type": ""
													}
												],
												"src": "19414:225:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19791:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19801:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19867:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19872:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19808:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19808:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19801:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19973:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "19884:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19884:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19884:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19986:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19997:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20002:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19993:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19993:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19986:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19779:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19787:3:11",
														"type": ""
													}
												],
												"src": "19645:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20188:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20198:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20210:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20221:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20206:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20206:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20198:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20245:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20256:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20241:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20241:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20264:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20270:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20260:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20260:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20234:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20234:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20234:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20290:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20424:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20298:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20298:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20290:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20168:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20183:4:11",
														"type": ""
													}
												],
												"src": "20017:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20500:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20511:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20527:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20521:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20521:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20511:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20483:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20493:6:11",
														"type": ""
													}
												],
												"src": "20442:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20659:34:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20669:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20684:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20669:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20631:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20636:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20647:11:11",
														"type": ""
													}
												],
												"src": "20546:147:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20761:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20771:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20780:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20775:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20840:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "20865:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20870:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20861:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20861:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "20884:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20889:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20880:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20880:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "20874:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20874:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20854:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20854:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20854:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20801:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20804:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20798:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20798:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20812:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20814:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20823:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20826:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20819:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20819:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20814:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20794:3:11",
																"statements": []
															},
															"src": "20790:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "20923:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20928:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20919:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20919:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20937:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20912:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20912:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20912:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20743:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20748:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20753:6:11",
														"type": ""
													}
												],
												"src": "20699:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21059:278:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21069:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21115:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21083:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21083:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21073:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21130:95:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21213:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21218:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21137:75:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21137:88:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21130:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21273:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21280:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21269:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21269:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21287:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21292:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21234:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21234:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21234:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21308:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21319:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21324:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21315:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21315:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21308:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21040:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21047:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21055:3:11",
														"type": ""
													}
												],
												"src": "20951:386:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21477:137:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21488:100:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21575:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21584:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21495:79:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21495:93:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21488:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21598:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21605:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21598:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21456:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21462:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21473:3:11",
														"type": ""
													}
												],
												"src": "21343:271:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21726:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21748:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21756:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21744:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21744:14:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21760:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21737:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21737:55:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21737:55:11"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21718:6:11",
														"type": ""
													}
												],
												"src": "21620:179:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21951:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21961:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22027:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22032:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21968:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21968:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21961:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22133:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "22044:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22044:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22044:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22146:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22157:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22162:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22153:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22153:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22146:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21939:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21947:3:11",
														"type": ""
													}
												],
												"src": "21805:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22348:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22358:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22370:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22381:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22366:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22366:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22358:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22405:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22416:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22401:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22401:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22424:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22430:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22420:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22420:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22394:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22394:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22394:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22450:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22584:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22458:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22458:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22450:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22328:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22343:4:11",
														"type": ""
													}
												],
												"src": "22177:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22661:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22672:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22688:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22682:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22682:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22672:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22644:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22654:6:11",
														"type": ""
													}
												],
												"src": "22602:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22755:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22765:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22783:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22790:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22779:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22779:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22799:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22795:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22795:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22775:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22765:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22738:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22748:6:11",
														"type": ""
													}
												],
												"src": "22707:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22907:285:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22917:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22964:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22931:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22931:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22921:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22979:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23045:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23050:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22986:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22986:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22979:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23105:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23112:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23101:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23119:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23124:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "23066:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23066:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23066:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23140:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23151:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23178:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "23156:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23156:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23147:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23147:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23140:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22888:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22895:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22903:3:11",
														"type": ""
													}
												],
												"src": "22815:377:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23316:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23326:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23338:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23349:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23334:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23334:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23326:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23373:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23384:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23369:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23369:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23392:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23398:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23388:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23388:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23362:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23362:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23362:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23418:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23490:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23499:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23426:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23426:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23418:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23288:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23300:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23311:4:11",
														"type": ""
													}
												],
												"src": "23198:313:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please First Stake NFTs\")\n\n    }\n\n    function abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please First WithDraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please First Stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937(memPtr) {\n\n        mstore(add(memPtr, 0), \"First Deposit Tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please Unstake your deposited NF\")\n\n        mstore(add(memPtr, 32), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Owner can transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063c45af5d81161007c578063c45af5d81461038d578063e4458b30146103bd578063e88cc2be146103ef578063ee0106d214610421578063f2fde38b1461043d578063f89d832f1461045957610158565b80638da5cb5b146102df578063934ed772146102fd578063a6021ace14610319578063a88e132f14610337578063b7171a2e14610353578063c0cd40ee1461037157610158565b80634d6ce1e5116101155780634d6ce1e514610231578063574880641461024d57806357ea89b61461027d578063715018a6146102875780637b2f247f146102915780638b73e331146102af57610158565b8063023245d71461015d5780630ccff6e91461017957806310fd4fba14610197578063150b7a02146101b5578063275bd33f146101e55780632ffce21014610201575b600080fd5b61017760048036038101906101729190611f4b565b610475565b005b6101816105fe565b60405161018e9190611f87565b60405180910390f35b61019f610604565b6040516101ac9190611fe3565b60405180910390f35b6101cf60048036038101906101ca919061208f565b61062a565b6040516101dc9190612152565b60405180910390f35b6101ff60048036038101906101fa919061216d565b61063f565b005b61021b6004803603810190610216919061216d565b61068b565b6040516102289190611f87565b60405180910390f35b61024b60048036038101906102469190611f4b565b6106a3565b005b6102676004803603810190610262919061216d565b610819565b6040516102749190611f87565b60405180910390f35b610285610831565b005b61028f610e16565b005b610299610e2a565b6040516102a69190611f87565b60405180910390f35b6102c960048036038101906102c4919061216d565b610eb1565b6040516102d69190611f87565b60405180910390f35b6102e76110ef565b6040516102f49190611fe3565b60405180910390f35b6103176004803603810190610312919061219a565b611118565b005b61032161135f565b60405161032e9190611fe3565b60405180910390f35b610351600480360381019061034c9190611f4b565b611385565b005b61035b61144c565b6040516103689190611fe3565b60405180910390f35b61038b60048036038101906103869190611f4b565b611472565b005b6103a760048036038101906103a2919061216d565b6115cb565b6040516103b49190611f87565b60405180910390f35b6103d760048036038101906103d2919061216d565b6118cf565b6040516103e6939291906121f5565b60405180910390f35b6104096004803603810190610404919061216d565b611906565b604051610418939291906121f5565b60405180910390f35b61043b6004803603810190610436919061216d565b61193d565b005b6104576004803603810190610452919061216d565b611989565b005b610473600480360381019061046e9190611f4b565b611a0c565b005b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb90612289565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033846040518463ffffffff1660e01b8152600401610563939291906122e0565b600060405180830381600087803b15801561057d57600080fd5b505af1158015610591573d6000803e3d6000fd5b50505050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055505050565b60045481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600063150b7a0260e01b905095945050505050565b610647611a1e565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60086020528060005260406000206000915090505481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90612376565b60405180910390fd5b604051806060016040528082815260200142815260200160011515815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050610816333083600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a9c909392919063ffffffff16565b50565b60076020528060005260406000206000915090505481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b7906123e2565b60405180910390fd5b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610c33576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050600061096733610eb1565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3033600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518463ffffffff1660e01b8152600401610a0a939291906122e0565b600060405180830381600087803b158015610a2457600080fd5b505af1158015610a38573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385610a879190612431565b6040518363ffffffff1660e01b8152600401610aa4929190612465565b6020604051808303816000875af1158015610ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae791906124ba565b508060086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b5991906124e7565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff02191690555050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff021916905550505050610e14565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610c8533610eb1565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385610cd29190612431565b6040518363ffffffff1660e01b8152600401610cef929190612465565b6020604051808303816000875af1158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3291906124ba565b508060086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da491906124e7565b92505081905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff0219169055505050505b565b610e1e611a1e565b610e286000611b25565b565b600080600454606460086000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e9e919061251b565b610ea8919061258c565b90508091505090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161561101b576000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015442610f5a91906124e7565b610f64919061258c565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610ff4919061251b565b610ffe919061251b565b9050600060648261100f919061258c565b905080925050506110ea565b6000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261106d91906124e7565b611077919061258c565b600554600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546110c7919061251b565b6110d1919061251b565b905060006064826110e2919061258c565b905080925050505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166111a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119e90612609565b60405180910390fd5b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16611236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122d9061269b565b60405180910390fd5b604051806060016040528082815260200183815260200160011515815250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b8152600401611329939291906122e0565b600060405180830381600087803b15801561134357600080fd5b505af1158015611357573d6000803e3d6000fd5b505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61138d611a1e565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113dc91906124e7565b9250508190555080600460008282546113f591906124e7565b925050819055506114493382600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611be99092919063ffffffff16565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61147a611a1e565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150190612707565b60405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115599190612431565b9250508190555080600460008282546115729190612431565b925050819055506115c8333083600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a9c909392919063ffffffff16565b50565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615611798576000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101544261167491906124e7565b61167e919061258c565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461170e919061251b565b611718919061251b565b90506000606482611729919061258c565b9050600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154816117799190612431565b9250670de0b6b3a76400008361178f919061258c565b925050506118ca565b6000603c600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154426117ea91906124e7565b6117f4919061258c565b600554600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611844919061251b565b61184e919061251b565b9050600060648261185f919061258c565b9050600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154816118af9190612431565b9250670de0b6b3a7640000836118c5919061258c565b925050505b919050565b60096020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60066020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b611945611a1e565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611991611a1e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f790612799565b60405180910390fd5b611a0981611b25565b50565b611a14611a1e565b8060058190555050565b611a26611c6f565b73ffffffffffffffffffffffffffffffffffffffff16611a446110ef565b73ffffffffffffffffffffffffffffffffffffffff1614611a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9190612805565b60405180910390fd5b565b611b1f846323b872dd60e01b858585604051602401611abd93929190612825565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c77565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c6a8363a9059cbb60e01b8484604051602401611c08929190612465565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c77565b505050565b600033905090565b6000611cd9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611d3e9092919063ffffffff16565b9050600081511115611d395780806020019051810190611cf991906124ba565b611d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2f906128ce565b60405180910390fd5b5b505050565b6060611d4d8484600085611d56565b90509392505050565b606082471015611d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9290612960565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611dc491906129f1565b60006040518083038185875af1925050503d8060008114611e01576040519150601f19603f3d011682016040523d82523d6000602084013e611e06565b606091505b5091509150611e1787838387611e23565b92505050949350505050565b60608315611e85576000835103611e7d57611e3d85611e98565b611e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7390612a54565b60405180910390fd5b5b829050611e90565b611e8f8383611ebb565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611ece5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f029190612ac9565b60405180910390fd5b600080fd5b600080fd5b6000819050919050565b611f2881611f15565b8114611f3357600080fd5b50565b600081359050611f4581611f1f565b92915050565b600060208284031215611f6157611f60611f0b565b5b6000611f6f84828501611f36565b91505092915050565b611f8181611f15565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fcd82611fa2565b9050919050565b611fdd81611fc2565b82525050565b6000602082019050611ff86000830184611fd4565b92915050565b61200781611fc2565b811461201257600080fd5b50565b60008135905061202481611ffe565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261204f5761204e61202a565b5b8235905067ffffffffffffffff81111561206c5761206b61202f565b5b60208301915083600182028301111561208857612087612034565b5b9250929050565b6000806000806000608086880312156120ab576120aa611f0b565b5b60006120b988828901612015565b95505060206120ca88828901612015565b94505060406120db88828901611f36565b935050606086013567ffffffffffffffff8111156120fc576120fb611f10565b5b61210888828901612039565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61214c81612117565b82525050565b60006020820190506121676000830184612143565b92915050565b60006020828403121561218357612182611f0b565b5b600061219184828501612015565b91505092915050565b600080604083850312156121b1576121b0611f0b565b5b60006121bf85828601611f36565b92505060206121d085828601611f36565b9150509250929050565b60008115159050919050565b6121ef816121da565b82525050565b600060608201905061220a6000830186611f78565b6122176020830185611f78565b61222460408301846121e6565b949350505050565b600082825260208201905092915050565b7f506c65617365204669727374205374616b65204e465473000000000000000000600082015250565b600061227360178361222c565b915061227e8261223d565b602082019050919050565b600060208201905081810360008301526122a281612266565b9050919050565b600082825260208201905092915050565b50565b60006122ca6000836122a9565b91506122d5826122ba565b600082019050919050565b60006080820190506122f56000830186611fd4565b6123026020830185611fd4565b61230f6040830184611f78565b8181036060830152612320816122bd565b9050949350505050565b7f506c656173652046697273742057697468447261770000000000000000000000600082015250565b600061236060158361222c565b915061236b8261232a565b602082019050919050565b6000602082019050818103600083015261238f81612353565b9050919050565b7f506c65617365204669727374205374616b650000000000000000000000000000600082015250565b60006123cc60128361222c565b91506123d782612396565b602082019050919050565b600060208201905081810360008301526123fb816123bf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061243c82611f15565b915061244783611f15565b925082820190508082111561245f5761245e612402565b5b92915050565b600060408201905061247a6000830185611fd4565b6124876020830184611f78565b9392505050565b612497816121da565b81146124a257600080fd5b50565b6000815190506124b48161248e565b92915050565b6000602082840312156124d0576124cf611f0b565b5b60006124de848285016124a5565b91505092915050565b60006124f282611f15565b91506124fd83611f15565b925082820390508181111561251557612514612402565b5b92915050565b600061252682611f15565b915061253183611f15565b925082820261253f81611f15565b9150828204841483151761255657612555612402565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061259782611f15565b91506125a283611f15565b9250826125b2576125b161255d565b5b828204905092915050565b7f4669727374204465706f73697420546f6b656e73000000000000000000000000600082015250565b60006125f360148361222c565b91506125fe826125bd565b602082019050919050565b60006020820190508181036000830152612622816125e6565b9050919050565b7f506c6561736520556e7374616b6520796f7572206465706f7369746564204e4660008201527f5400000000000000000000000000000000000000000000000000000000000000602082015250565b600061268560218361222c565b915061269082612629565b604082019050919050565b600060208201905081810360008301526126b481612678565b9050919050565b7f4f6e6c79204f776e65722063616e207472616e73666572000000000000000000600082015250565b60006126f160178361222c565b91506126fc826126bb565b602082019050919050565b60006020820190508181036000830152612720816126e4565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061278360268361222c565b915061278e82612727565b604082019050919050565b600060208201905081810360008301526127b281612776565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127ef60208361222c565b91506127fa826127b9565b602082019050919050565b6000602082019050818103600083015261281e816127e2565b9050919050565b600060608201905061283a6000830186611fd4565b6128476020830185611fd4565b6128546040830184611f78565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006128b8602a8361222c565b91506128c38261285c565b604082019050919050565b600060208201905081810360008301526128e7816128ab565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061294a60268361222c565b9150612955826128ee565b604082019050919050565b600060208201905081810360008301526129798161293d565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156129b4578082015181840152602081019050612999565b60008484015250505050565b60006129cb82612980565b6129d5818561298b565b93506129e5818560208601612996565b80840191505092915050565b60006129fd82846129c0565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612a3e601d8361222c565b9150612a4982612a08565b602082019050919050565b60006020820190508181036000830152612a6d81612a31565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000612a9b82612a74565b612aa5818561222c565b9350612ab5818560208601612996565b612abe81612a7f565b840191505092915050565b60006020820190508181036000830152612ae38184612a90565b90509291505056fea2646970667358221220c1938222690343043529fa20c731e6b671f6e08d1d743b6fbc32d8d8c3f8009164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC45AF5D8 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC45AF5D8 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xE4458B30 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xE88CC2BE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xEE0106D2 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xF89D832F EQ PUSH2 0x459 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x934ED772 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xA6021ACE EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xA88E132F EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xB7171A2E EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x371 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x4D6CE1E5 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x4D6CE1E5 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x57488064 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x7B2F247F EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8B73E331 EQ PUSH2 0x2AF JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x23245D7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xCCFF6E9 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x10FD4FBA EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x275BD33F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x2FFCE210 EQ PUSH2 0x201 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH2 0x831 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH2 0xE16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x1118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH2 0x135F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1385 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1472 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x193D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH2 0x1989 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x563 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72A SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x816 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC33 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x967 CALLER PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS CALLER PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 DUP6 PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA4 SWAP3 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xC85 CALLER PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 DUP6 PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP3 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0xE28 PUSH1 0x0 PUSH2 0x1B25 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD PUSH1 0x64 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE9E SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x101B JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0xF64 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1077 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x10D1 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119E SWAP1 PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122D SWAP1 PUSH2 0x269B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1329 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x138D PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1449 CALLER DUP3 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BE9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x147A PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP1 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15C8 CALLER ADDRESS DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1798 JUMPI PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1674 SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x167E SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x1718 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x1729 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x178F SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17EA SWAP2 SWAP1 PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x17F4 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1844 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x184E SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP1 POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 PUSH2 0x18AF SWAP2 SWAP1 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x18C5 SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1945 PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1991 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F7 SWAP1 PUSH2 0x2799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A09 DUP2 PUSH2 0x1B25 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A14 PUSH2 0x1A1E JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1A26 PUSH2 0x1C6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A44 PUSH2 0x10EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A91 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B1F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1ABD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C6A DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C08 SWAP3 SWAP2 SWAP1 PUSH2 0x2465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D3E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1D39 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CF9 SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST PUSH2 0x1D38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2F SWAP1 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D4D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1D9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D92 SWAP1 PUSH2 0x2960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1DC4 SWAP2 SWAP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E06 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E17 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1E23 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E85 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1E7D JUMPI PUSH2 0x1E3D DUP6 PUSH2 0x1E98 JUMP JUMPDEST PUSH2 0x1E7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E73 SWAP1 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0x1E8F DUP4 DUP4 PUSH2 0x1EBB JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1ECE JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F28 DUP2 PUSH2 0x1F15 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F45 DUP2 PUSH2 0x1F1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH2 0x1F60 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6F DUP5 DUP3 DUP6 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1F15 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCD DUP3 PUSH2 0x1FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDD DUP2 PUSH2 0x1FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2007 DUP2 PUSH2 0x1FC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2024 DUP2 PUSH2 0x1FFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x202A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x202F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2088 JUMPI PUSH2 0x2087 PUSH2 0x2034 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20AB JUMPI PUSH2 0x20AA PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B9 DUP9 DUP3 DUP10 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20CA DUP9 DUP3 DUP10 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x20DB DUP9 DUP3 DUP10 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x1F10 JUMP JUMPDEST JUMPDEST PUSH2 0x2108 DUP9 DUP3 DUP10 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214C DUP2 PUSH2 0x2117 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2167 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2183 JUMPI PUSH2 0x2182 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2191 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BF DUP6 DUP3 DUP7 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21D0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EF DUP2 PUSH2 0x21DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x220A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2217 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2224 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21E6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B65204E465473000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2273 PUSH1 0x17 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x227E DUP3 PUSH2 0x223D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22A2 DUP2 PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CA PUSH1 0x0 DUP4 PUSH2 0x22A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x22D5 DUP3 PUSH2 0x22BA JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2302 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x230F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2320 DUP2 PUSH2 0x22BD JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x506C656173652046697273742057697468447261770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2360 PUSH1 0x15 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x236B DUP3 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238F DUP2 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374205374616B650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CC PUSH1 0x12 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x23D7 DUP3 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23FB DUP2 PUSH2 0x23BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x243C DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x2447 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x245F JUMPI PUSH2 0x245E PUSH2 0x2402 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x247A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2487 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2497 DUP2 PUSH2 0x21DA JUMP JUMPDEST DUP2 EQ PUSH2 0x24A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B4 DUP2 PUSH2 0x248E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x24CF PUSH2 0x1F0B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24DE DUP5 DUP3 DUP6 ADD PUSH2 0x24A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F2 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x24FD DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2515 JUMPI PUSH2 0x2514 PUSH2 0x2402 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x253F DUP2 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2556 JUMPI PUSH2 0x2555 PUSH2 0x2402 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2597 DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x25A2 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25B2 JUMPI PUSH2 0x25B1 PUSH2 0x255D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4669727374204465706F73697420546F6B656E73000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F3 PUSH1 0x14 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x25FE DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2622 DUP2 PUSH2 0x25E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520556E7374616B6520796F7572206465706F7369746564204E46 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2685 PUSH1 0x21 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x2690 DUP3 PUSH2 0x2629 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B4 DUP2 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79204F776E65722063616E207472616E73666572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F1 PUSH1 0x17 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x26FC DUP3 PUSH2 0x26BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2720 DUP2 PUSH2 0x26E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2783 PUSH1 0x26 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x278E DUP3 PUSH2 0x2727 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B2 DUP2 PUSH2 0x2776 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EF PUSH1 0x20 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x27FA DUP3 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281E DUP2 PUSH2 0x27E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x283A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2847 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x2854 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B8 PUSH1 0x2A DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x28C3 DUP3 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E7 DUP2 PUSH2 0x28AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A PUSH1 0x26 DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x2955 DUP3 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2979 DUP2 PUSH2 0x293D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2999 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CB DUP3 PUSH2 0x2980 JUMP JUMPDEST PUSH2 0x29D5 DUP2 DUP6 PUSH2 0x298B JUMP JUMPDEST SWAP4 POP PUSH2 0x29E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2996 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29FD DUP3 DUP5 PUSH2 0x29C0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3E PUSH1 0x1D DUP4 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x2A49 DUP3 PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A6D DUP2 PUSH2 0x2A31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9B DUP3 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x2AA5 DUP2 DUP6 PUSH2 0x222C JUMP JUMPDEST SWAP4 POP PUSH2 0x2AB5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2996 JUMP JUMPDEST PUSH2 0x2ABE DUP2 PUSH2 0x2A7F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AE3 DUP2 DUP5 PUSH2 0x2A90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SWAP4 DUP3 0x22 PUSH10 0x343043529FA20C731E6 0xB6 PUSH18 0xF6E08D1D743B6FBC32D8D8C3F8009164736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "348:8014:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7935:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;535:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8189:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6719:107;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;878:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3168:269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;833:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3632:877;;;:::i;:::-;;1831:101:0;;;:::i;:::-;;2713:162:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5689:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7361:362:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;502:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2300:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;436:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1818:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4702:723;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;785:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6433:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7008:110:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7935:249;7999:8;:20;8008:10;7999:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;7991:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;8070:13;;;;;;;;;;;8062:39;;;8110:4;8117:10;8128:8;8062:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8157:8;:20;8166:10;8157:20;;;;;;;;;;;;;;;;8150:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7935:249;:::o;535:27::-;;;;:::o;470:26::-;;;;;;;;;;;;;:::o;8189:171::-;8287:6;8312:41;;;8305:48;;8189:171;;;;;;;:::o;6719:107::-;1094:13:0;:11;:13::i;:::-;6806::10::1;6791:12;;:28;;;;;;;;;;;;;;;;;;6719:107:::0;:::o;878:45::-;;;;;;;;;;;;;;;;;:::o;3168:269::-;3228:7;:19;3236:10;3228:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3227:26;3219:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3310:36;;;;;;;;3317:7;3310:36;;;;3325:15;3310:36;;;;3341:4;3310:36;;;;;3288:7;:19;3296:10;3288:19;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3356:74;3394:10;3414:4;3422:7;3363:12;;;;;;;;;;;3356:37;;;;:74;;;;;;:::i;:::-;3168:269;:::o;833:39::-;;;;;;;;;;;;;;;;;:::o;3632:877::-;3677:7;:19;3685:10;3677:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3669:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3738:8;:20;3747:10;3738:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;3734:765;;;3779:11;3793:7;:19;3801:10;3793:19;;;;;;;;;;;;;;;:29;;;3779:43;;3836:11;3850:28;3867:10;3850:16;:28::i;:::-;3836:42;;3900:13;;;;;;;;;;;3892:39;;;3940:4;3947:10;3958:8;:20;3967:10;3958:20;;;;;;;;;;;;;;;:28;;;3892:98;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4011:12;;;;;;;;;;;4004:29;;;4034:10;4055:6;4046;:15;;;;:::i;:::-;4004:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4104:6;4076:11;:24;4088:11;;;;;;;;;;;4076:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;4131:8;:20;4140:10;4131:20;;;;;;;;;;;;;;;;4124:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4172:7;:19;4180:10;4172:19;;;;;;;;;;;;;;;;4165:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:437;;3734:765;;;4229:11;4243:7;:19;4251:10;4243:19;;;;;;;;;;;;;;;:29;;;4229:43;;4286:11;4300:28;4317:10;4300:16;:28::i;:::-;4286:42;;4349:12;;;;;;;;;;;4342:29;;;4372:10;4393:6;4384;:15;;;;:::i;:::-;4342:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4442:6;4414:11;:24;4426:11;;;;;;;;;;;4414:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;4469:7;:19;4477:10;4469:19;;;;;;;;;;;;;;;;4462:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:284;;3734:765;3632:877::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2713:162:10:-;2756:7;2775:15;2826;;2821:3;2794:11;:24;2806:11;;;;;;;;;;;2794:24;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;2793:48;;;;:::i;:::-;2775:66;;2858:10;2851:17;;;2713:162;:::o;5689:562::-;5748:7;5770:8;:13;5779:3;5770:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;5766:479;;;5813:14;5926:2;5902:7;:12;5910:3;5902:12;;;;;;;;;;;;;;;:22;;;5884:15;:40;;;;:::i;:::-;5883:45;;;;:::i;:::-;5856:8;:13;5865:3;5856:13;;;;;;;;;;;;;;;:22;;;5831:7;:12;5839:3;5831:12;;;;;;;;;;;;;;;:22;;;:47;;;;:::i;:::-;5830:99;;;;:::i;:::-;5813:116;;5943:16;5974:3;5962:9;:15;;;;:::i;:::-;5943:34;;5998:11;5991:18;;;;;;5766:479;6056:14;6151:2;6127:7;:12;6135:3;6127:12;;;;;;;;;;;;;;;:22;;;6109:15;:40;;;;:::i;:::-;6108:45;;;;:::i;:::-;6099:4;;6074:7;:12;6082:3;6074:12;;;;;;;;;;;;;;;:22;;;:29;;;;:::i;:::-;6073:81;;;;:::i;:::-;6056:98;;6168:16;6199:3;6187:9;:15;;;;:::i;:::-;6168:34;;6223:11;6216:18;;;;5689:562;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;7361:362:10:-;7435:7;:19;7443:10;7435:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;7427:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;7502:8;:20;7511:10;7502:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;7494:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7598:30;;;;;;;;7608:5;7598:30;;;;7614:8;7598:30;;;;7623:4;7598:30;;;;;7575:8;:20;7584:10;7575:20;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7647:13;;;;;;;;;;;7639:39;;;7679:10;7698:4;7704:8;7639:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7361:362;;:::o;502:27::-;;;;;;;;;;;;;:::o;2300:205::-;1094:13:0;:11;:13::i;:::-;2394:6:10::1;2367:11;:23;2379:10;2367:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2429:6;2410:15;;:25;;;;;;;:::i;:::-;;;;;;;;2445:53;2479:10;2491:6;2452:12;;;;;;;;;;;2445:33;;;;:53;;;;;:::i;:::-;2300:205:::0;:::o;436:28::-;;;;;;;;;;;;;:::o;1818:290::-;1094:13:0;:11;:13::i;:::-;1901:11:10::1;;;;;;;;;;;1889:23;;:10;:23;;;1881:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:7;1949:11;:23;1961:10;1949:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2011:7;1992:15;;:26;;;;;;;:::i;:::-;;;;;;;;2028:73;2066:10;2086:4;2093:7;2035:12;;;;;;;;;;;2028:37;;;;:73;;;;;;:::i;:::-;1818:290:::0;:::o;4702:723::-;4755:11;4786:8;:13;4795:3;4786:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;4782:628;;;4829:14;4942:2;4918:7;:12;4926:3;4918:12;;;;;;;;;;;;;;;:22;;;4900:15;:40;;;;:::i;:::-;4899:45;;;;:::i;:::-;4872:8;:13;4881:3;4872:13;;;;;;;;;;;;;;;:22;;;4847:7;:12;4855:3;4847:12;;;;;;;;;;;;;;;:22;;;:47;;;;:::i;:::-;4846:99;;;;:::i;:::-;4829:116;;4959:16;4990:3;4978:9;:15;;;;:::i;:::-;4959:34;;5030:7;:12;5038:3;5030:12;;;;;;;;;;;;;;;:22;;;5016:11;:36;;;;:::i;:::-;5007:45;;5080:19;5073:6;:26;;;;:::i;:::-;5066:33;;;;;;4782:628;5147:14;5242:2;5218:7;:12;5226:3;5218:12;;;;;;;;;;;;;;;:22;;;5200:15;:40;;;;:::i;:::-;5199:45;;;;:::i;:::-;5190:4;;5165:7;:12;5173:3;5165:12;;;;;;;;;;;;;;;:22;;;:29;;;;:::i;:::-;5164:81;;;;:::i;:::-;5147:98;;5259:16;5290:3;5278:9;:15;;;;:::i;:::-;5259:34;;5330:7;:12;5338:3;5330:12;;;;;;;;;;;;;;;:22;;;5316:11;:36;;;;:::i;:::-;5307:45;;5380:19;5373:6;:26;;;;:::i;:::-;5366:33;;;;4702:723;;;;:::o;929:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;785:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6433:109::-;1094:13:0;:11;:13::i;:::-;6521:14:10::1;6505:13;;:30;;;;;;;;;;;;;;;;;;6433:109:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;7008:110:10:-;1094:13:0;:11;:13::i;:::-;7096:15:10::1;7089:4;:22;;;;7008:110:::0;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;974:241:3:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;763:205:3:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;3747:706:3:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:7:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:11;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:117::-;2345:1;2342;2335:12;2359:117;2468:1;2465;2458:12;2482:117;2591:1;2588;2581:12;2618:552;2675:8;2685:6;2735:3;2728:4;2720:6;2716:17;2712:27;2702:122;;2743:79;;:::i;:::-;2702:122;2856:6;2843:20;2833:30;;2886:18;2878:6;2875:30;2872:117;;;2908:79;;:::i;:::-;2872:117;3022:4;3014:6;3010:17;2998:29;;3076:3;3068:4;3060:6;3056:17;3046:8;3042:32;3039:41;3036:128;;;3083:79;;:::i;:::-;3036:128;2618:552;;;;;:::o;3176:963::-;3273:6;3281;3289;3297;3305;3354:3;3342:9;3333:7;3329:23;3325:33;3322:120;;;3361:79;;:::i;:::-;3322:120;3481:1;3506:53;3551:7;3542:6;3531:9;3527:22;3506:53;:::i;:::-;3496:63;;3452:117;3608:2;3634:53;3679:7;3670:6;3659:9;3655:22;3634:53;:::i;:::-;3624:63;;3579:118;3736:2;3762:53;3807:7;3798:6;3787:9;3783:22;3762:53;:::i;:::-;3752:63;;3707:118;3892:2;3881:9;3877:18;3864:32;3923:18;3915:6;3912:30;3909:117;;;3945:79;;:::i;:::-;3909:117;4058:64;4114:7;4105:6;4094:9;4090:22;4058:64;:::i;:::-;4040:82;;;;3835:297;3176:963;;;;;;;;:::o;4145:149::-;4181:7;4221:66;4214:5;4210:78;4199:89;;4145:149;;;:::o;4300:115::-;4385:23;4402:5;4385:23;:::i;:::-;4380:3;4373:36;4300:115;;:::o;4421:218::-;4512:4;4550:2;4539:9;4535:18;4527:26;;4563:69;4629:1;4618:9;4614:17;4605:6;4563:69;:::i;:::-;4421:218;;;;:::o;4645:329::-;4704:6;4753:2;4741:9;4732:7;4728:23;4724:32;4721:119;;;4759:79;;:::i;:::-;4721:119;4879:1;4904:53;4949:7;4940:6;4929:9;4925:22;4904:53;:::i;:::-;4894:63;;4850:117;4645:329;;;;:::o;4980:474::-;5048:6;5056;5105:2;5093:9;5084:7;5080:23;5076:32;5073:119;;;5111:79;;:::i;:::-;5073:119;5231:1;5256:53;5301:7;5292:6;5281:9;5277:22;5256:53;:::i;:::-;5246:63;;5202:117;5358:2;5384:53;5429:7;5420:6;5409:9;5405:22;5384:53;:::i;:::-;5374:63;;5329:118;4980:474;;;;;:::o;5460:90::-;5494:7;5537:5;5530:13;5523:21;5512:32;;5460:90;;;:::o;5556:109::-;5637:21;5652:5;5637:21;:::i;:::-;5632:3;5625:34;5556:109;;:::o;5671:430::-;5814:4;5852:2;5841:9;5837:18;5829:26;;5865:71;5933:1;5922:9;5918:17;5909:6;5865:71;:::i;:::-;5946:72;6014:2;6003:9;5999:18;5990:6;5946:72;:::i;:::-;6028:66;6090:2;6079:9;6075:18;6066:6;6028:66;:::i;:::-;5671:430;;;;;;:::o;6107:169::-;6191:11;6225:6;6220:3;6213:19;6265:4;6260:3;6256:14;6241:29;;6107:169;;;;:::o;6282:173::-;6422:25;6418:1;6410:6;6406:14;6399:49;6282:173;:::o;6461:366::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:419::-;6999:4;7037:2;7026:9;7022:18;7014:26;;7086:9;7080:4;7076:20;7072:1;7061:9;7057:17;7050:47;7114:131;7240:4;7114:131;:::i;:::-;7106:139;;6833:419;;;:::o;7258:168::-;7341:11;7375:6;7370:3;7363:19;7415:4;7410:3;7406:14;7391:29;;7258:168;;;;:::o;7432:114::-;;:::o;7552:362::-;7693:3;7714:65;7777:1;7772:3;7714:65;:::i;:::-;7707:72;;7788:93;7877:3;7788:93;:::i;:::-;7906:1;7901:3;7897:11;7890:18;;7552:362;;;:::o;7920:748::-;8169:4;8207:3;8196:9;8192:19;8184:27;;8221:71;8289:1;8278:9;8274:17;8265:6;8221:71;:::i;:::-;8302:72;8370:2;8359:9;8355:18;8346:6;8302:72;:::i;:::-;8384;8452:2;8441:9;8437:18;8428:6;8384:72;:::i;:::-;8503:9;8497:4;8493:20;8488:2;8477:9;8473:18;8466:48;8531:130;8656:4;8531:130;:::i;:::-;8523:138;;7920:748;;;;;;:::o;8674:171::-;8814:23;8810:1;8802:6;8798:14;8791:47;8674:171;:::o;8851:366::-;8993:3;9014:67;9078:2;9073:3;9014:67;:::i;:::-;9007:74;;9090:93;9179:3;9090:93;:::i;:::-;9208:2;9203:3;9199:12;9192:19;;8851:366;;;:::o;9223:419::-;9389:4;9427:2;9416:9;9412:18;9404:26;;9476:9;9470:4;9466:20;9462:1;9451:9;9447:17;9440:47;9504:131;9630:4;9504:131;:::i;:::-;9496:139;;9223:419;;;:::o;9648:168::-;9788:20;9784:1;9776:6;9772:14;9765:44;9648:168;:::o;9822:366::-;9964:3;9985:67;10049:2;10044:3;9985:67;:::i;:::-;9978:74;;10061:93;10150:3;10061:93;:::i;:::-;10179:2;10174:3;10170:12;10163:19;;9822:366;;;:::o;10194:419::-;10360:4;10398:2;10387:9;10383:18;10375:26;;10447:9;10441:4;10437:20;10433:1;10422:9;10418:17;10411:47;10475:131;10601:4;10475:131;:::i;:::-;10467:139;;10194:419;;;:::o;10619:180::-;10667:77;10664:1;10657:88;10764:4;10761:1;10754:15;10788:4;10785:1;10778:15;10805:191;10845:3;10864:20;10882:1;10864:20;:::i;:::-;10859:25;;10898:20;10916:1;10898:20;:::i;:::-;10893:25;;10941:1;10938;10934:9;10927:16;;10962:3;10959:1;10956:10;10953:36;;;10969:18;;:::i;:::-;10953:36;10805:191;;;;:::o;11002:332::-;11123:4;11161:2;11150:9;11146:18;11138:26;;11174:71;11242:1;11231:9;11227:17;11218:6;11174:71;:::i;:::-;11255:72;11323:2;11312:9;11308:18;11299:6;11255:72;:::i;:::-;11002:332;;;;;:::o;11340:116::-;11410:21;11425:5;11410:21;:::i;:::-;11403:5;11400:32;11390:60;;11446:1;11443;11436:12;11390:60;11340:116;:::o;11462:137::-;11516:5;11547:6;11541:13;11532:22;;11563:30;11587:5;11563:30;:::i;:::-;11462:137;;;;:::o;11605:345::-;11672:6;11721:2;11709:9;11700:7;11696:23;11692:32;11689:119;;;11727:79;;:::i;:::-;11689:119;11847:1;11872:61;11925:7;11916:6;11905:9;11901:22;11872:61;:::i;:::-;11862:71;;11818:125;11605:345;;;;:::o;11956:194::-;11996:4;12016:20;12034:1;12016:20;:::i;:::-;12011:25;;12050:20;12068:1;12050:20;:::i;:::-;12045:25;;12094:1;12091;12087:9;12079:17;;12118:1;12112:4;12109:11;12106:37;;;12123:18;;:::i;:::-;12106:37;11956:194;;;;:::o;12156:410::-;12196:7;12219:20;12237:1;12219:20;:::i;:::-;12214:25;;12253:20;12271:1;12253:20;:::i;:::-;12248:25;;12308:1;12305;12301:9;12330:30;12348:11;12330:30;:::i;:::-;12319:41;;12509:1;12500:7;12496:15;12493:1;12490:22;12470:1;12463:9;12443:83;12420:139;;12539:18;;:::i;:::-;12420:139;12204:362;12156:410;;;;:::o;12572:180::-;12620:77;12617:1;12610:88;12717:4;12714:1;12707:15;12741:4;12738:1;12731:15;12758:185;12798:1;12815:20;12833:1;12815:20;:::i;:::-;12810:25;;12849:20;12867:1;12849:20;:::i;:::-;12844:25;;12888:1;12878:35;;12893:18;;:::i;:::-;12878:35;12935:1;12932;12928:9;12923:14;;12758:185;;;;:::o;12949:170::-;13089:22;13085:1;13077:6;13073:14;13066:46;12949:170;:::o;13125:366::-;13267:3;13288:67;13352:2;13347:3;13288:67;:::i;:::-;13281:74;;13364:93;13453:3;13364:93;:::i;:::-;13482:2;13477:3;13473:12;13466:19;;13125:366;;;:::o;13497:419::-;13663:4;13701:2;13690:9;13686:18;13678:26;;13750:9;13744:4;13740:20;13736:1;13725:9;13721:17;13714:47;13778:131;13904:4;13778:131;:::i;:::-;13770:139;;13497:419;;;:::o;13922:220::-;14062:34;14058:1;14050:6;14046:14;14039:58;14131:3;14126:2;14118:6;14114:15;14107:28;13922:220;:::o;14148:366::-;14290:3;14311:67;14375:2;14370:3;14311:67;:::i;:::-;14304:74;;14387:93;14476:3;14387:93;:::i;:::-;14505:2;14500:3;14496:12;14489:19;;14148:366;;;:::o;14520:419::-;14686:4;14724:2;14713:9;14709:18;14701:26;;14773:9;14767:4;14763:20;14759:1;14748:9;14744:17;14737:47;14801:131;14927:4;14801:131;:::i;:::-;14793:139;;14520:419;;;:::o;14945:173::-;15085:25;15081:1;15073:6;15069:14;15062:49;14945:173;:::o;15124:366::-;15266:3;15287:67;15351:2;15346:3;15287:67;:::i;:::-;15280:74;;15363:93;15452:3;15363:93;:::i;:::-;15481:2;15476:3;15472:12;15465:19;;15124:366;;;:::o;15496:419::-;15662:4;15700:2;15689:9;15685:18;15677:26;;15749:9;15743:4;15739:20;15735:1;15724:9;15720:17;15713:47;15777:131;15903:4;15777:131;:::i;:::-;15769:139;;15496:419;;;:::o;15921:225::-;16061:34;16057:1;16049:6;16045:14;16038:58;16130:8;16125:2;16117:6;16113:15;16106:33;15921:225;:::o;16152:366::-;16294:3;16315:67;16379:2;16374:3;16315:67;:::i;:::-;16308:74;;16391:93;16480:3;16391:93;:::i;:::-;16509:2;16504:3;16500:12;16493:19;;16152:366;;;:::o;16524:419::-;16690:4;16728:2;16717:9;16713:18;16705:26;;16777:9;16771:4;16767:20;16763:1;16752:9;16748:17;16741:47;16805:131;16931:4;16805:131;:::i;:::-;16797:139;;16524:419;;;:::o;16949:182::-;17089:34;17085:1;17077:6;17073:14;17066:58;16949:182;:::o;17137:366::-;17279:3;17300:67;17364:2;17359:3;17300:67;:::i;:::-;17293:74;;17376:93;17465:3;17376:93;:::i;:::-;17494:2;17489:3;17485:12;17478:19;;17137:366;;;:::o;17509:419::-;17675:4;17713:2;17702:9;17698:18;17690:26;;17762:9;17756:4;17752:20;17748:1;17737:9;17733:17;17726:47;17790:131;17916:4;17790:131;:::i;:::-;17782:139;;17509:419;;;:::o;17934:442::-;18083:4;18121:2;18110:9;18106:18;18098:26;;18134:71;18202:1;18191:9;18187:17;18178:6;18134:71;:::i;:::-;18215:72;18283:2;18272:9;18268:18;18259:6;18215:72;:::i;:::-;18297;18365:2;18354:9;18350:18;18341:6;18297:72;:::i;:::-;17934:442;;;;;;:::o;18382:229::-;18522:34;18518:1;18510:6;18506:14;18499:58;18591:12;18586:2;18578:6;18574:15;18567:37;18382:229;:::o;18617:366::-;18759:3;18780:67;18844:2;18839:3;18780:67;:::i;:::-;18773:74;;18856:93;18945:3;18856:93;:::i;:::-;18974:2;18969:3;18965:12;18958:19;;18617:366;;;:::o;18989:419::-;19155:4;19193:2;19182:9;19178:18;19170:26;;19242:9;19236:4;19232:20;19228:1;19217:9;19213:17;19206:47;19270:131;19396:4;19270:131;:::i;:::-;19262:139;;18989:419;;;:::o;19414:225::-;19554:34;19550:1;19542:6;19538:14;19531:58;19623:8;19618:2;19610:6;19606:15;19599:33;19414:225;:::o;19645:366::-;19787:3;19808:67;19872:2;19867:3;19808:67;:::i;:::-;19801:74;;19884:93;19973:3;19884:93;:::i;:::-;20002:2;19997:3;19993:12;19986:19;;19645:366;;;:::o;20017:419::-;20183:4;20221:2;20210:9;20206:18;20198:26;;20270:9;20264:4;20260:20;20256:1;20245:9;20241:17;20234:47;20298:131;20424:4;20298:131;:::i;:::-;20290:139;;20017:419;;;:::o;20442:98::-;20493:6;20527:5;20521:12;20511:22;;20442:98;;;:::o;20546:147::-;20647:11;20684:3;20669:18;;20546:147;;;;:::o;20699:246::-;20780:1;20790:113;20804:6;20801:1;20798:13;20790:113;;;20889:1;20884:3;20880:11;20874:18;20870:1;20865:3;20861:11;20854:39;20826:2;20823:1;20819:10;20814:15;;20790:113;;;20937:1;20928:6;20923:3;20919:16;20912:27;20761:184;20699:246;;;:::o;20951:386::-;21055:3;21083:38;21115:5;21083:38;:::i;:::-;21137:88;21218:6;21213:3;21137:88;:::i;:::-;21130:95;;21234:65;21292:6;21287:3;21280:4;21273:5;21269:16;21234:65;:::i;:::-;21324:6;21319:3;21315:16;21308:23;;21059:278;20951:386;;;;:::o;21343:271::-;21473:3;21495:93;21584:3;21575:6;21495:93;:::i;:::-;21488:100;;21605:3;21598:10;;21343:271;;;;:::o;21620:179::-;21760:31;21756:1;21748:6;21744:14;21737:55;21620:179;:::o;21805:366::-;21947:3;21968:67;22032:2;22027:3;21968:67;:::i;:::-;21961:74;;22044:93;22133:3;22044:93;:::i;:::-;22162:2;22157:3;22153:12;22146:19;;21805:366;;;:::o;22177:419::-;22343:4;22381:2;22370:9;22366:18;22358:26;;22430:9;22424:4;22420:20;22416:1;22405:9;22401:17;22394:47;22458:131;22584:4;22458:131;:::i;:::-;22450:139;;22177:419;;;:::o;22602:99::-;22654:6;22688:5;22682:12;22672:22;;22602:99;;;:::o;22707:102::-;22748:6;22799:2;22795:7;22790:2;22783:5;22779:14;22775:28;22765:38;;22707:102;;;:::o;22815:377::-;22903:3;22931:39;22964:5;22931:39;:::i;:::-;22986:71;23050:6;23045:3;22986:71;:::i;:::-;22979:78;;23066:65;23124:6;23119:3;23112:4;23105:5;23101:16;23066:65;:::i;:::-;23156:29;23178:6;23156:29;:::i;:::-;23151:3;23147:39;23140:46;;22907:285;22815:377;;;;:::o;23198:313::-;23311:4;23349:2;23338:9;23334:18;23326:26;;23398:9;23392:4;23388:20;23384:1;23373:9;23369:17;23362:47;23426:78;23499:4;23490:6;23426:78;:::i;:::-;23418:86;;23198:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2208200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AdminAddToken(uint256)": "infinite",
								"AdminWithDrawToken(uint256)": "infinite",
								"Deposit(uint256)": "infinite",
								"DepositNFT(uint256,uint256)": "infinite",
								"Details(address)": "infinite",
								"ERC20Address()": "2581",
								"ERC721address()": "2625",
								"OwnerTokens(address)": "2948",
								"Reward(address)": "2859",
								"UpdateERC20(address)": "27098",
								"UpdateERC721(address)": "27074",
								"UpdateRatePersentage(uint256)": "24916",
								"UserRate(address)": "infinite",
								"Utilization()": "infinite",
								"Withdraw()": "infinite",
								"calculateIntrest(address)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owenerERC20()": "2582",
								"owner()": "2545",
								"renounceOwnership()": "30487",
								"showReward(address)": "infinite",
								"totalOwnerToken()": "2475",
								"transferOwnership(address)": "30854",
								"withdrawNFT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1357,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1467,
									"end": 1481,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1464,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1451,
									"end": 1464,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1481,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1495,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1491,
									"end": 1513,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1513,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1513,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1538,
									"end": 1551,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1535,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1523,
									"end": 1535,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1575,
									"end": 1585,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1561,
									"end": 1585,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1592,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 8362,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1938222690343043529fa20c731e6b671f6e08d1d743b6fbc32d8d8c3f8009164736f6c63430008130033",
									".code": [
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "C45AF5D8"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "C45AF5D8"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "E4458B30"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "E88CC2BE"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "EE0106D2"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "F89D832F"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "934ED772"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "A6021ACE"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "A88E132F"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "B7171A2E"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "C0CD40EE"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "4D6CE1E5"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "4D6CE1E5"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "57488064"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "57EA89B6"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "7B2F247F"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "8B73E331"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "23245D7"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "CCFF6E9"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "10FD4FBA"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "275BD33F"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "2FFCE210"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 348,
											"end": 8362,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7935,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7935,
											"end": 8184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 535,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 535,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8189,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8189,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 8189,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6719,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6719,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 878,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 878,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 878,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3168,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3168,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 833,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 833,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 833,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3632,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2713,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2713,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5689,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5689,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5689,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7361,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7361,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 502,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 502,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2300,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2300,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 436,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 436,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1818,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1818,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4702,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4702,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4702,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 929,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 929,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 929,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 785,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 785,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 785,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6433,
											"end": 6542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6433,
											"end": 6542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7008,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 7008,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8007,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8018,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7999,
											"end": 8025,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 7991,
											"end": 8052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 7991,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8070,
											"end": 8083,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8101,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8101,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8101,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 8110,
											"end": 8114,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8128,
											"end": 8136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 8062,
											"end": 8140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8165,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8176,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8150,
											"end": 8177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 8184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 535,
											"end": 562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 535,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 470,
											"end": 496,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 470,
											"end": 496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8353,
											"name": "PUSH",
											"source": 10,
											"value": "150B7A02"
										},
										{
											"begin": 8312,
											"end": 8353,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8312,
											"end": 8353,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6791,
											"end": 6803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 878,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3235,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3247,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3228,
											"end": 3253,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3227,
											"end": 3253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3219,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3219,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3325,
											"end": 3340,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3306,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3418,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3363,
											"end": 3375,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3356,
											"end": 3393,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3356,
											"end": 3393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 833,
											"end": 872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3632,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3695,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3677,
											"end": 3702,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3669,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3669,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3757,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3738,
											"end": 3764,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3800,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3811,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3812,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3822,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3867,
											"end": 3877,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3850,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3878,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3850,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3931,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3931,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3931,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3957,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3966,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3977,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3892,
											"end": 3990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3892,
											"end": 3990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4033,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4034,
											"end": 4044,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4052,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4046,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4004,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4004,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4087,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4088,
											"end": 4099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4076,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4139,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4150,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4190,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4261,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4262,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4272,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4272,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4317,
											"end": 4327,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4300,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4328,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4300,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4349,
											"end": 4361,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4371,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4342,
											"end": 4371,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4371,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4372,
											"end": 4382,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4384,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4342,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4342,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4425,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4426,
											"end": 4437,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4414,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4414,
											"end": 4448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4487,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4215,
											"end": 4499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4215,
											"end": 4499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3734,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2841,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2841,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2824,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2817,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2794,
											"end": 2824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2794,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2824,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2794,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2793,
											"end": 2841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2793,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2793,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2868,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2713,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 5755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5778,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5782,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5783,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 6245,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5766,
											"end": 6245,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 5902,
											"end": 5909,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5913,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5914,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5924,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5902,
											"end": 5924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5924,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5899,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5884,
											"end": 5924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5884,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5924,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5884,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5883,
											"end": 5928,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5883,
											"end": 5928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5928,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5883,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5864,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5869,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5878,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5838,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5842,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5853,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 5831,
											"end": 5878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5831,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5878,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 5831,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 5830,
											"end": 5929,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5830,
											"end": 5929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5929,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 5830,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5962,
											"end": 5977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5962,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5943,
											"end": 5977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6009,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 6245,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5766,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6153,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6139,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6149,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6127,
											"end": 6149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6149,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6124,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6109,
											"end": 6149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 6109,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6149,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 6109,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6108,
											"end": 6153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6108,
											"end": 6153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6153,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6108,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6103,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6103,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6081,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6096,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 6074,
											"end": 6103,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6074,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6103,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 6074,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6073,
											"end": 6154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6073,
											"end": 6154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6073,
											"end": 6154,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6073,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6184,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6202,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6187,
											"end": 6196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 6187,
											"end": 6202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 6187,
											"end": 6202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6202,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 6187,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5689,
											"end": 6251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7442,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7453,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7435,
											"end": 7460,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 7427,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7427,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7510,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7511,
											"end": 7521,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7522,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7502,
											"end": 7528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7494,
											"end": 7565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 7494,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7622,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7627,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7583,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7584,
											"end": 7594,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7595,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7678,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7639,
											"end": 7678,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7678,
											"name": "PUSH",
											"source": 10,
											"value": "B88D4FDE"
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7698,
											"end": 7702,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7704,
											"end": 7712,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7639,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 529,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 502,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2389,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2367,
											"end": 2400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2400,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2410,
											"end": 2435,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2435,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2479,
											"end": 2489,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2445,
											"end": 2478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 2445,
											"end": 2498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 464,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 436,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1899,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1881,
											"end": 1939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1881,
											"end": 1939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1971,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1949,
											"end": 1982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1982,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1992,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1992,
											"end": 2018,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1992,
											"end": 2018,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2066,
											"end": 2076,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2090,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2093,
											"end": 2100,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2028,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2028,
											"end": 2101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4794,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4798,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4799,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4786,
											"end": 4805,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4782,
											"end": 5410,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4782,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4782,
											"end": 5410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 4918,
											"end": 4925,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4929,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4900,
											"end": 4940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 4900,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4940,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4900,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4899,
											"end": 4944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 4944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4899,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 4944,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 4899,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4880,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4884,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4894,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4894,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4854,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4869,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4847,
											"end": 4894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4847,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4894,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4847,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4846,
											"end": 4945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4846,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4945,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4846,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 4978,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5037,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5042,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5052,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5016,
											"end": 5052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5016,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5052,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5016,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5073,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5073,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5099,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5066,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 5066,
											"end": 5099,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4782,
											"end": 5410,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4782,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "PUSH",
											"source": 10,
											"value": "3C"
										},
										{
											"begin": 5218,
											"end": 5225,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5229,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5215,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5200,
											"end": 5240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5200,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5240,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5200,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5199,
											"end": 5244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5199,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5244,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5199,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5194,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5190,
											"end": 5194,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5172,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5165,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5165,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5164,
											"end": 5245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5164,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5245,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5164,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5293,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5278,
											"end": 5287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5278,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5278,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5259,
											"end": 5293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5337,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5352,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5327,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5316,
											"end": 5352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5316,
											"end": 5352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5352,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5316,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5307,
											"end": 5352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5373,
											"end": 5399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5373,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5373,
											"end": 5399,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5373,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4702,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 929,
											"end": 976,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 929,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 785,
											"end": 827,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 785,
											"end": 827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6521,
											"end": 6535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6505,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6535,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7096,
											"end": 7111,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7089,
											"end": 7111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7111,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7111,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1139,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 902,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 875,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2353,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 2236,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2347,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2359,
											"end": 2476,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 2359,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2468,
											"end": 2469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2599,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 2482,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2675,
											"end": 2683,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2728,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2726,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2739,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 2702,
											"end": 2824,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2743,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 2743,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 2743,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2743,
											"end": 2822,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 2743,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2824,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 2702,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2989,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 2872,
											"end": 2989,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 2908,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 2908,
											"end": 2987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2987,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 2908,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2989,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 2872,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3022,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3027,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3060,
											"end": 3066,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3056,
											"end": 3073,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3046,
											"end": 3054,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3039,
											"end": 3080,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3036,
											"end": 3164,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3036,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 3036,
											"end": 3164,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 3083,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3083,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3162,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 3083,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3036,
											"end": 3164,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 3036,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2618,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3357,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3342,
											"end": 3351,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3333,
											"end": 3340,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3329,
											"end": 3352,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3358,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3442,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 3322,
											"end": 3442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 3361,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3361,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3440,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 3361,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3442,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 3322,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3482,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 3551,
											"end": 3558,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3527,
											"end": 3549,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3506,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 3506,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3559,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3608,
											"end": 3610,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3670,
											"end": 3676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3655,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3634,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3687,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 3634,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3624,
											"end": 3687,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3624,
											"end": 3687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3736,
											"end": 3738,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3783,
											"end": 3805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 3762,
											"end": 3815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 3762,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3815,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3707,
											"end": 3825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3894,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3877,
											"end": 3895,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3896,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 3942,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4026,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 3909,
											"end": 4026,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 3945,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3945,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4024,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 3945,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4026,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 3909,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4105,
											"end": 4111,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4090,
											"end": 4112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 4058,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4058,
											"end": 4122,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 4058,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4040,
											"end": 4122,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4040,
											"end": 4122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4040,
											"end": 4122,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4040,
											"end": 4122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 4132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 4139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4294,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4145,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4181,
											"end": 4188,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4287,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4214,
											"end": 4219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4288,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4288,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4294,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4415,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4300,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 4402,
											"end": 4407,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4385,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4385,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 4385,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4373,
											"end": 4409,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4639,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 4421,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4512,
											"end": 4516,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4539,
											"end": 4548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4627,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4563,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 4563,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4639,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4639,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4974,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4645,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4710,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4755,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4739,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4724,
											"end": 4756,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4759,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 4759,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 4721,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4879,
											"end": 4880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4925,
											"end": 4947,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 4904,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4894,
											"end": 4957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4974,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4974,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4645,
											"end": 4974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5048,
											"end": 5054,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5062,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5105,
											"end": 5107,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5093,
											"end": 5102,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5084,
											"end": 5091,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5080,
											"end": 5103,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5108,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5192,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5073,
											"end": 5192,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5111,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 5111,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5190,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5111,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5073,
											"end": 5192,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5073,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5231,
											"end": 5232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5292,
											"end": 5298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5277,
											"end": 5299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5256,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5309,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5256,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5246,
											"end": 5309,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5246,
											"end": 5309,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5319,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5429,
											"end": 5436,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5409,
											"end": 5418,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5405,
											"end": 5427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5384,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5437,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 5384,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5374,
											"end": 5437,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5374,
											"end": 5437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5550,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 5460,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5494,
											"end": 5501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5543,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5523,
											"end": 5544,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5550,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5550,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5556,
											"end": 5665,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 5556,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 5637,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 5659,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5556,
											"end": 5665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5556,
											"end": 5665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5556,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5814,
											"end": 5818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5852,
											"end": 5854,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5837,
											"end": 5855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5829,
											"end": 5855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5829,
											"end": 5855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5933,
											"end": 5934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5865,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5865,
											"end": 5936,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 5865,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5946,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6012,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5946,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5946,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5946,
											"end": 6018,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 5946,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 6090,
											"end": 6092,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6028,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6094,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 6028,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 6101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6276,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 6107,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6191,
											"end": 6202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6220,
											"end": 6223,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6263,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6256,
											"end": 6270,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6270,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6276,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6276,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6455,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6282,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6422,
											"end": 6447,
											"name": "PUSH",
											"source": 11,
											"value": "506C65617365204669727374205374616B65204E465473000000000000000000"
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6406,
											"end": 6420,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6399,
											"end": 6448,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6455,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 6624,
											"end": 6691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 6700,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6461,
											"end": 6827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 7252,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 6833,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7003,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7039,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7026,
											"end": 7035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7022,
											"end": 7040,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7040,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7076,
											"end": 7096,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7057,
											"end": 7074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7050,
											"end": 7097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7114,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 7240,
											"end": 7244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7114,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 7114,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7114,
											"end": 7245,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 7114,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 7252,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 7252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 7252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 7252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7426,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 7258,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7341,
											"end": 7352,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7363,
											"end": 7382,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7415,
											"end": 7419,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7410,
											"end": 7413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7406,
											"end": 7420,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7391,
											"end": 7420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7391,
											"end": 7420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7258,
											"end": 7426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7432,
											"end": 7546,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 7432,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7432,
											"end": 7546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7432,
											"end": 7546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7552,
											"end": 7914,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 7552,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7693,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 7777,
											"end": 7778,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7775,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 7714,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7779,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 7714,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 7877,
											"end": 7880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 7788,
											"end": 7881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7906,
											"end": 7907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7897,
											"end": 7908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7552,
											"end": 7914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7552,
											"end": 7914,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7552,
											"end": 7914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7552,
											"end": 7914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8169,
											"end": 8173,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8210,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8196,
											"end": 8205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8184,
											"end": 8211,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8184,
											"end": 8211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8221,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 8289,
											"end": 8290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8287,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8274,
											"end": 8291,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8265,
											"end": 8271,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8221,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 8221,
											"end": 8292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8221,
											"end": 8292,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 8221,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 8370,
											"end": 8372,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8359,
											"end": 8368,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8355,
											"end": 8373,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 8302,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8374,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 8302,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8384,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 8452,
											"end": 8454,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8441,
											"end": 8450,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8428,
											"end": 8434,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8384,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 8384,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8384,
											"end": 8456,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 8384,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8503,
											"end": 8512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 8501,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8493,
											"end": 8513,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8466,
											"end": 8514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8531,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 8656,
											"end": 8660,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8531,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 8531,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8531,
											"end": 8661,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 8531,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8523,
											"end": 8661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8523,
											"end": 8661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 8668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8674,
											"end": 8845,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 8674,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8814,
											"end": 8837,
											"name": "PUSH",
											"source": 11,
											"value": "506C656173652046697273742057697468447261770000000000000000000000"
										},
										{
											"begin": 8810,
											"end": 8811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8798,
											"end": 8812,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8791,
											"end": 8838,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8674,
											"end": 8845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8674,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 9217,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 8851,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 8996,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9014,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9078,
											"end": 9080,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 9073,
											"end": 9076,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9014,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 9014,
											"end": 9081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9014,
											"end": 9081,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9014,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9007,
											"end": 9081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9007,
											"end": 9081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9090,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 9179,
											"end": 9182,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9090,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 9090,
											"end": 9183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9090,
											"end": 9183,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 9090,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9203,
											"end": 9206,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9211,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9211,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9211,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 9217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 9217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 9217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 9217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9642,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 9223,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9389,
											"end": 9393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9416,
											"end": 9425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9412,
											"end": 9430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9404,
											"end": 9430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9404,
											"end": 9430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9476,
											"end": 9485,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9470,
											"end": 9474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9466,
											"end": 9486,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9462,
											"end": 9463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9460,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9447,
											"end": 9464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9440,
											"end": 9487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9504,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 9630,
											"end": 9634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9504,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 9504,
											"end": 9635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9504,
											"end": 9635,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 9504,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9496,
											"end": 9635,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9496,
											"end": 9635,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9642,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9816,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 9648,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9788,
											"end": 9808,
											"name": "PUSH",
											"source": 11,
											"value": "506C65617365204669727374205374616B650000000000000000000000000000"
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9772,
											"end": 9786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9822,
											"end": 10188,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 9822,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9964,
											"end": 9967,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9985,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 10049,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 10044,
											"end": 10047,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 9985,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10052,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 9985,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9978,
											"end": 10052,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9978,
											"end": 10052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 10150,
											"end": 10153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 10061,
											"end": 10154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10154,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 10061,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10179,
											"end": 10181,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10174,
											"end": 10177,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10163,
											"end": 10182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10163,
											"end": 10182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9822,
											"end": 10188,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9822,
											"end": 10188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9822,
											"end": 10188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9822,
											"end": 10188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10613,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 10194,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10360,
											"end": 10364,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10375,
											"end": 10401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10375,
											"end": 10401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10447,
											"end": 10456,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10441,
											"end": 10445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10437,
											"end": 10457,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10433,
											"end": 10434,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10422,
											"end": 10431,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10418,
											"end": 10435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10411,
											"end": 10458,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 10475,
											"end": 10606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10606,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 10475,
											"end": 10606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10467,
											"end": 10606,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10467,
											"end": 10606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10619,
											"end": 10799,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 10619,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10667,
											"end": 10744,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10664,
											"end": 10665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10657,
											"end": 10745,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10761,
											"end": 10762,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10754,
											"end": 10769,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10778,
											"end": 10793,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10996,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 10805,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10845,
											"end": 10848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 10882,
											"end": 10883,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10864,
											"end": 10884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10859,
											"end": 10884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10859,
											"end": 10884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 10916,
											"end": 10917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10898,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10893,
											"end": 10918,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10893,
											"end": 10918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10941,
											"end": 10942,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10938,
											"end": 10939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 10943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10927,
											"end": 10943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10927,
											"end": 10943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10962,
											"end": 10965,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10959,
											"end": 10960,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 10989,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 10953,
											"end": 10989,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 10969,
											"end": 10987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 10969,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 10989,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 10953,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10996,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10996,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10805,
											"end": 10996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11123,
											"end": 11127,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11146,
											"end": 11164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11138,
											"end": 11164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11138,
											"end": 11164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11174,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 11242,
											"end": 11243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11231,
											"end": 11240,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11227,
											"end": 11244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11218,
											"end": 11224,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11174,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 11174,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11174,
											"end": 11245,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 11174,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11255,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 11323,
											"end": 11325,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11308,
											"end": 11326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11299,
											"end": 11305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11255,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 11255,
											"end": 11327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11255,
											"end": 11327,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 11255,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11340,
											"end": 11456,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 11340,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11410,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 11425,
											"end": 11430,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11410,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 11410,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11410,
											"end": 11431,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 11410,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11403,
											"end": 11408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11400,
											"end": 11432,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 11390,
											"end": 11450,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11436,
											"end": 11448,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11450,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 11390,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11340,
											"end": 11456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11340,
											"end": 11456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11599,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 11462,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11516,
											"end": 11521,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11547,
											"end": 11553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11541,
											"end": 11554,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11532,
											"end": 11554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11532,
											"end": 11554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11563,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11587,
											"end": 11592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11563,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 11563,
											"end": 11593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11563,
											"end": 11593,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11563,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11599,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11462,
											"end": 11599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11950,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 11605,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11672,
											"end": 11678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11721,
											"end": 11723,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11700,
											"end": 11707,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11696,
											"end": 11719,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11692,
											"end": 11724,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11808,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 11689,
											"end": 11808,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11727,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 11727,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 11727,
											"end": 11806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11727,
											"end": 11806,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 11727,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11689,
											"end": 11808,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 11689,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11847,
											"end": 11848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 11925,
											"end": 11932,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11916,
											"end": 11922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11901,
											"end": 11923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11872,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 11872,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11872,
											"end": 11933,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 11872,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11933,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11818,
											"end": 11943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11950,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11950,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11956,
											"end": 12150,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 11956,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12000,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12016,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12011,
											"end": 12036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12011,
											"end": 12036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 12068,
											"end": 12069,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12050,
											"end": 12070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12094,
											"end": 12095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12092,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12087,
											"end": 12096,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12079,
											"end": 12096,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12079,
											"end": 12096,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12118,
											"end": 12119,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12112,
											"end": 12116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12109,
											"end": 12120,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12106,
											"end": 12143,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12106,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12106,
											"end": 12143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 12123,
											"end": 12141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 12123,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12106,
											"end": 12143,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12106,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11956,
											"end": 12150,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11956,
											"end": 12150,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11956,
											"end": 12150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11956,
											"end": 12150,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11956,
											"end": 12150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12566,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 12156,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12196,
											"end": 12203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 12237,
											"end": 12238,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12219,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12219,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12219,
											"end": 12239,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 12219,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 12239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 12239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12253,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12253,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12253,
											"end": 12273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12253,
											"end": 12273,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 12253,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12248,
											"end": 12273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12306,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12330,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 12348,
											"end": 12359,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12330,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12330,
											"end": 12360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12330,
											"end": 12360,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 12330,
											"end": 12360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12319,
											"end": 12360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12319,
											"end": 12360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12509,
											"end": 12510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12500,
											"end": 12507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12496,
											"end": 12511,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12493,
											"end": 12494,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12490,
											"end": 12512,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12470,
											"end": 12471,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12443,
											"end": 12526,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12420,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 12420,
											"end": 12559,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 12539,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12420,
											"end": 12559,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 12420,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12566,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12566,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12572,
											"end": 12752,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 12572,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12620,
											"end": 12697,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12617,
											"end": 12618,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12610,
											"end": 12698,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12717,
											"end": 12721,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 12714,
											"end": 12715,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12707,
											"end": 12722,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12741,
											"end": 12745,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12738,
											"end": 12739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12731,
											"end": 12746,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12943,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 12758,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12833,
											"end": 12834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12815,
											"end": 12835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 12815,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12810,
											"end": 12835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12810,
											"end": 12835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 12867,
											"end": 12868,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12849,
											"end": 12869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 12849,
											"end": 12869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12844,
											"end": 12869,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12844,
											"end": 12869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12888,
											"end": 12889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12878,
											"end": 12913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 12878,
											"end": 12913,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12893,
											"end": 12911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 12893,
											"end": 12911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 12893,
											"end": 12911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12893,
											"end": 12911,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 12893,
											"end": 12911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12878,
											"end": 12913,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 12878,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12935,
											"end": 12936,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12932,
											"end": 12933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12928,
											"end": 12937,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12923,
											"end": 12937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12923,
											"end": 12937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12943,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12758,
											"end": 12943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 13119,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 12949,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13089,
											"end": 13111,
											"name": "PUSH",
											"source": 11,
											"value": "4669727374204465706F73697420546F6B656E73000000000000000000000000"
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13077,
											"end": 13083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13066,
											"end": 13112,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 13119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 13119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13125,
											"end": 13491,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 13125,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13267,
											"end": 13270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13288,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13352,
											"end": 13354,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13288,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 13288,
											"end": 13355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13288,
											"end": 13355,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 13288,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13281,
											"end": 13355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13281,
											"end": 13355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13364,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13453,
											"end": 13456,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13364,
											"end": 13457,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 13364,
											"end": 13457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13364,
											"end": 13457,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 13364,
											"end": 13457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13482,
											"end": 13484,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13473,
											"end": 13485,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13466,
											"end": 13485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13466,
											"end": 13485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13125,
											"end": 13491,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13125,
											"end": 13491,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13125,
											"end": 13491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13125,
											"end": 13491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13916,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 13497,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13663,
											"end": 13667,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13701,
											"end": 13703,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13678,
											"end": 13704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13678,
											"end": 13704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13750,
											"end": 13759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13744,
											"end": 13748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13760,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13721,
											"end": 13738,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13714,
											"end": 13761,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 13904,
											"end": 13908,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 13778,
											"end": 13909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13909,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 13778,
											"end": 13909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13770,
											"end": 13909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13770,
											"end": 13909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13916,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13916,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 14142,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 13922,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14062,
											"end": 14096,
											"name": "PUSH",
											"source": 11,
											"value": "506C6561736520556E7374616B6520796F7572206465706F7369746564204E46"
										},
										{
											"begin": 14058,
											"end": 14059,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14056,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14046,
											"end": 14060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14039,
											"end": 14097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14131,
											"end": 14134,
											"name": "PUSH",
											"source": 11,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14126,
											"end": 14128,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14124,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14114,
											"end": 14129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14107,
											"end": 14135,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 14142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13922,
											"end": 14142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14514,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 14148,
											"end": 14514,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14290,
											"end": 14293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14311,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 14375,
											"end": 14377,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 14370,
											"end": 14373,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 14311,
											"end": 14378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14378,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 14311,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14304,
											"end": 14378,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14304,
											"end": 14378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 14476,
											"end": 14479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 14387,
											"end": 14480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14480,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 14387,
											"end": 14480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14505,
											"end": 14507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14500,
											"end": 14503,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14496,
											"end": 14508,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14489,
											"end": 14508,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14489,
											"end": 14508,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14514,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14514,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14514,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14148,
											"end": 14514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14939,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 14520,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14686,
											"end": 14690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14724,
											"end": 14726,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14713,
											"end": 14722,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14709,
											"end": 14727,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14701,
											"end": 14727,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14701,
											"end": 14727,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14773,
											"end": 14782,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14767,
											"end": 14771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14760,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14757,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14744,
											"end": 14761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14737,
											"end": 14784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 14927,
											"end": 14931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 14801,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14932,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 14801,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14939,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14520,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14945,
											"end": 15118,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 14945,
											"end": 15118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15085,
											"end": 15110,
											"name": "PUSH",
											"source": 11,
											"value": "4F6E6C79204F776E65722063616E207472616E73666572000000000000000000"
										},
										{
											"begin": 15081,
											"end": 15082,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15073,
											"end": 15079,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15083,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15062,
											"end": 15111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14945,
											"end": 15118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14945,
											"end": 15118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15490,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 15124,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15266,
											"end": 15269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15287,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 15351,
											"end": 15353,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 15346,
											"end": 15349,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15287,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 15287,
											"end": 15354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15287,
											"end": 15354,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 15287,
											"end": 15354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15280,
											"end": 15354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15280,
											"end": 15354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 15452,
											"end": 15455,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 15363,
											"end": 15456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15363,
											"end": 15456,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 15363,
											"end": 15456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15481,
											"end": 15483,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15476,
											"end": 15479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15472,
											"end": 15484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15465,
											"end": 15484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15465,
											"end": 15484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15124,
											"end": 15490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 15915,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 15496,
											"end": 15915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15662,
											"end": 15666,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15700,
											"end": 15702,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15689,
											"end": 15698,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15685,
											"end": 15703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15677,
											"end": 15703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15677,
											"end": 15703,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15749,
											"end": 15758,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15743,
											"end": 15747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15739,
											"end": 15759,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15735,
											"end": 15736,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15724,
											"end": 15733,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15720,
											"end": 15737,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15713,
											"end": 15760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15777,
											"end": 15908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 15903,
											"end": 15907,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15777,
											"end": 15908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 15777,
											"end": 15908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15777,
											"end": 15908,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 15777,
											"end": 15908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15769,
											"end": 15908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15769,
											"end": 15908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 15915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 15915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 15915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15496,
											"end": 15915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15921,
											"end": 16146,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 15921,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16061,
											"end": 16095,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16057,
											"end": 16058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16049,
											"end": 16055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16045,
											"end": 16059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16038,
											"end": 16096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16130,
											"end": 16138,
											"name": "PUSH",
											"source": 11,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16125,
											"end": 16127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16117,
											"end": 16123,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16106,
											"end": 16139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15921,
											"end": 16146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15921,
											"end": 16146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16518,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 16152,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16294,
											"end": 16297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 16379,
											"end": 16381,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 16374,
											"end": 16377,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16315,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 16315,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16315,
											"end": 16382,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 16315,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16308,
											"end": 16382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16391,
											"end": 16484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16480,
											"end": 16483,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16391,
											"end": 16484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 16391,
											"end": 16484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16391,
											"end": 16484,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 16391,
											"end": 16484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16509,
											"end": 16511,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16504,
											"end": 16507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16500,
											"end": 16512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16493,
											"end": 16512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16493,
											"end": 16512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16152,
											"end": 16518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16524,
											"end": 16943,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 16524,
											"end": 16943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16690,
											"end": 16694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16728,
											"end": 16730,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16717,
											"end": 16726,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16713,
											"end": 16731,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16705,
											"end": 16731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16705,
											"end": 16731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16777,
											"end": 16786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16767,
											"end": 16787,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16752,
											"end": 16761,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16748,
											"end": 16765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16741,
											"end": 16788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 16931,
											"end": 16935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 16805,
											"end": 16936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16805,
											"end": 16936,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 16805,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16797,
											"end": 16936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16797,
											"end": 16936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16524,
											"end": 16943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16524,
											"end": 16943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16524,
											"end": 16943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16524,
											"end": 16943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16949,
											"end": 17131,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 16949,
											"end": 17131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17089,
											"end": 17123,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17085,
											"end": 17086,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17077,
											"end": 17083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17073,
											"end": 17087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17066,
											"end": 17124,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16949,
											"end": 17131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16949,
											"end": 17131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17503,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 17137,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17279,
											"end": 17282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17300,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 17364,
											"end": 17366,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17359,
											"end": 17362,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17300,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 17300,
											"end": 17367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17300,
											"end": 17367,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 17300,
											"end": 17367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17293,
											"end": 17367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17293,
											"end": 17367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17376,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 17465,
											"end": 17468,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17376,
											"end": 17469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 17376,
											"end": 17469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17376,
											"end": 17469,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 17376,
											"end": 17469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17494,
											"end": 17496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17485,
											"end": 17497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17478,
											"end": 17497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17478,
											"end": 17497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17928,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 17509,
											"end": 17928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17675,
											"end": 17679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17713,
											"end": 17715,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17702,
											"end": 17711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17698,
											"end": 17716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17690,
											"end": 17716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17690,
											"end": 17716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17762,
											"end": 17771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17756,
											"end": 17760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17752,
											"end": 17772,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17748,
											"end": 17749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17737,
											"end": 17746,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17733,
											"end": 17750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17726,
											"end": 17773,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17790,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 17916,
											"end": 17920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17790,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 17790,
											"end": 17921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17790,
											"end": 17921,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 17790,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 17921,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17782,
											"end": 17921,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18083,
											"end": 18087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18121,
											"end": 18123,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18110,
											"end": 18119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18106,
											"end": 18124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18098,
											"end": 18124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18098,
											"end": 18124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18134,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 18202,
											"end": 18203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18191,
											"end": 18200,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18187,
											"end": 18204,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18178,
											"end": 18184,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18134,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 18134,
											"end": 18205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18134,
											"end": 18205,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 18134,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18215,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 18283,
											"end": 18285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18272,
											"end": 18281,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18268,
											"end": 18286,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18259,
											"end": 18265,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18215,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 18215,
											"end": 18287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18215,
											"end": 18287,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 18215,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18297,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 18365,
											"end": 18367,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18354,
											"end": 18363,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18350,
											"end": 18368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18341,
											"end": 18347,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18297,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 18297,
											"end": 18369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18297,
											"end": 18369,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 18297,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17934,
											"end": 18376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18382,
											"end": 18611,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 18382,
											"end": 18611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18522,
											"end": 18556,
											"name": "PUSH",
											"source": 11,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 18518,
											"end": 18519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18516,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18506,
											"end": 18520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18499,
											"end": 18557,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18591,
											"end": 18603,
											"name": "PUSH",
											"source": 11,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 18586,
											"end": 18588,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18578,
											"end": 18584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18574,
											"end": 18589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18567,
											"end": 18604,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18382,
											"end": 18611,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18382,
											"end": 18611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18617,
											"end": 18983,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 18617,
											"end": 18983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18759,
											"end": 18762,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18780,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 18844,
											"end": 18846,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 18839,
											"end": 18842,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18780,
											"end": 18847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 18780,
											"end": 18847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18780,
											"end": 18847,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 18780,
											"end": 18847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18773,
											"end": 18847,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18773,
											"end": 18847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18856,
											"end": 18949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 18945,
											"end": 18948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18856,
											"end": 18949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 18856,
											"end": 18949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18856,
											"end": 18949,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 18856,
											"end": 18949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18974,
											"end": 18976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18969,
											"end": 18972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18965,
											"end": 18977,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18958,
											"end": 18977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18958,
											"end": 18977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18617,
											"end": 18983,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18617,
											"end": 18983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18617,
											"end": 18983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18617,
											"end": 18983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18989,
											"end": 19408,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 18989,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19155,
											"end": 19159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19193,
											"end": 19195,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19182,
											"end": 19191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19178,
											"end": 19196,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19170,
											"end": 19196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19170,
											"end": 19196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19242,
											"end": 19251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19236,
											"end": 19240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19232,
											"end": 19252,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19228,
											"end": 19229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19217,
											"end": 19226,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19213,
											"end": 19230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19206,
											"end": 19253,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19270,
											"end": 19401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 19396,
											"end": 19400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19270,
											"end": 19401,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 19270,
											"end": 19401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19270,
											"end": 19401,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 19270,
											"end": 19401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19262,
											"end": 19401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19262,
											"end": 19401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18989,
											"end": 19408,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18989,
											"end": 19408,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18989,
											"end": 19408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18989,
											"end": 19408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19414,
											"end": 19639,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 19414,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19554,
											"end": 19588,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 19550,
											"end": 19551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19542,
											"end": 19548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19538,
											"end": 19552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19531,
											"end": 19589,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19623,
											"end": 19631,
											"name": "PUSH",
											"source": 11,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19618,
											"end": 19620,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19610,
											"end": 19616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19606,
											"end": 19621,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19599,
											"end": 19632,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19414,
											"end": 19639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19414,
											"end": 19639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19645,
											"end": 20011,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 19645,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19787,
											"end": 19790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19808,
											"end": 19875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 19872,
											"end": 19874,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 19867,
											"end": 19870,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19808,
											"end": 19875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 19808,
											"end": 19875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19808,
											"end": 19875,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 19808,
											"end": 19875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19801,
											"end": 19875,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19801,
											"end": 19875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19884,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 19973,
											"end": 19976,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19884,
											"end": 19977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 19884,
											"end": 19977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19884,
											"end": 19977,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 19884,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20002,
											"end": 20004,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19997,
											"end": 20000,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19993,
											"end": 20005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19986,
											"end": 20005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19986,
											"end": 20005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19645,
											"end": 20011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19645,
											"end": 20011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19645,
											"end": 20011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19645,
											"end": 20011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20436,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 20017,
											"end": 20436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20183,
											"end": 20187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20221,
											"end": 20223,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20210,
											"end": 20219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20198,
											"end": 20224,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20198,
											"end": 20224,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20270,
											"end": 20279,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20264,
											"end": 20268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20260,
											"end": 20280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20256,
											"end": 20257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20245,
											"end": 20254,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20241,
											"end": 20258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20234,
											"end": 20281,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20298,
											"end": 20429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 20424,
											"end": 20428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20298,
											"end": 20429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 20298,
											"end": 20429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20298,
											"end": 20429,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 20298,
											"end": 20429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20290,
											"end": 20429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20290,
											"end": 20429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20017,
											"end": 20436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20442,
											"end": 20540,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 20442,
											"end": 20540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20493,
											"end": 20499,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20527,
											"end": 20532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20521,
											"end": 20533,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20511,
											"end": 20533,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20511,
											"end": 20533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20442,
											"end": 20540,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20442,
											"end": 20540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20442,
											"end": 20540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20442,
											"end": 20540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20693,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 20546,
											"end": 20693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20647,
											"end": 20658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20684,
											"end": 20687,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20669,
											"end": 20687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20669,
											"end": 20687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20546,
											"end": 20693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20699,
											"end": 20945,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 20699,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20780,
											"end": 20781,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20804,
											"end": 20810,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20801,
											"end": 20802,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20798,
											"end": 20811,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 20889,
											"end": 20890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 20884,
											"end": 20887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20880,
											"end": 20891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20874,
											"end": 20892,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20870,
											"end": 20871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20865,
											"end": 20868,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20861,
											"end": 20872,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20854,
											"end": 20893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20826,
											"end": 20828,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20823,
											"end": 20824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20819,
											"end": 20829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20814,
											"end": 20829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20814,
											"end": 20829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 20790,
											"end": 20903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 20938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20928,
											"end": 20934,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20923,
											"end": 20926,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20919,
											"end": 20935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20912,
											"end": 20939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20761,
											"end": 20945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20699,
											"end": 20945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20699,
											"end": 20945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20699,
											"end": 20945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20699,
											"end": 20945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 21337,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 20951,
											"end": 21337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21055,
											"end": 21058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21083,
											"end": 21121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 21115,
											"end": 21120,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21083,
											"end": 21121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 21083,
											"end": 21121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21083,
											"end": 21121,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 21083,
											"end": 21121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21137,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 21218,
											"end": 21224,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21213,
											"end": 21216,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21137,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 21137,
											"end": 21225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21137,
											"end": 21225,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 21137,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21130,
											"end": 21225,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21130,
											"end": 21225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21234,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 21292,
											"end": 21298,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21287,
											"end": 21290,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21280,
											"end": 21284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21273,
											"end": 21278,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 21269,
											"end": 21285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21234,
											"end": 21299,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 21234,
											"end": 21299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21234,
											"end": 21299,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 21234,
											"end": 21299,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21324,
											"end": 21330,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 21319,
											"end": 21322,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21315,
											"end": 21331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21308,
											"end": 21331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21308,
											"end": 21331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21059,
											"end": 21337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 21337,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 21337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 21337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 21337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20951,
											"end": 21337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21343,
											"end": 21614,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 21343,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21473,
											"end": 21476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21495,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 21584,
											"end": 21587,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21575,
											"end": 21581,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21495,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 21495,
											"end": 21588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21495,
											"end": 21588,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 21495,
											"end": 21588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21488,
											"end": 21588,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21488,
											"end": 21588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21605,
											"end": 21608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21598,
											"end": 21608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21598,
											"end": 21608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21343,
											"end": 21614,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21343,
											"end": 21614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21343,
											"end": 21614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21343,
											"end": 21614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21343,
											"end": 21614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21620,
											"end": 21799,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 21620,
											"end": 21799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21760,
											"end": 21791,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 21756,
											"end": 21757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21748,
											"end": 21754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21744,
											"end": 21758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21737,
											"end": 21792,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21620,
											"end": 21799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21620,
											"end": 21799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 22171,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 21805,
											"end": 22171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21947,
											"end": 21950,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21968,
											"end": 22035,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 22032,
											"end": 22034,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 22027,
											"end": 22030,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21968,
											"end": 22035,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 21968,
											"end": 22035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21968,
											"end": 22035,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 21968,
											"end": 22035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21961,
											"end": 22035,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21961,
											"end": 22035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22044,
											"end": 22137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 22133,
											"end": 22136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22044,
											"end": 22137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 22044,
											"end": 22137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22044,
											"end": 22137,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 22044,
											"end": 22137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22162,
											"end": 22164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22157,
											"end": 22160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22153,
											"end": 22165,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22146,
											"end": 22165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22146,
											"end": 22165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 22171,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 22171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 22171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21805,
											"end": 22171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22177,
											"end": 22596,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 22177,
											"end": 22596,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22343,
											"end": 22347,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22381,
											"end": 22383,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22370,
											"end": 22379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22366,
											"end": 22384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22358,
											"end": 22384,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22358,
											"end": 22384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22430,
											"end": 22439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22424,
											"end": 22428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22420,
											"end": 22440,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 22416,
											"end": 22417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22405,
											"end": 22414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22401,
											"end": 22418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22394,
											"end": 22441,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22458,
											"end": 22589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 22584,
											"end": 22588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22458,
											"end": 22589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 22458,
											"end": 22589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22458,
											"end": 22589,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 22458,
											"end": 22589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22450,
											"end": 22589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22450,
											"end": 22589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22177,
											"end": 22596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22177,
											"end": 22596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22177,
											"end": 22596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22177,
											"end": 22596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22602,
											"end": 22701,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 22602,
											"end": 22701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22654,
											"end": 22660,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22688,
											"end": 22693,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22682,
											"end": 22694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22672,
											"end": 22694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22672,
											"end": 22694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22602,
											"end": 22701,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22602,
											"end": 22701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22602,
											"end": 22701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22602,
											"end": 22701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22707,
											"end": 22809,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 22707,
											"end": 22809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22748,
											"end": 22754,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22799,
											"end": 22801,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 22795,
											"end": 22802,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 22790,
											"end": 22792,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 22783,
											"end": 22788,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22779,
											"end": 22793,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22775,
											"end": 22803,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 22803,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22765,
											"end": 22803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22707,
											"end": 22809,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22707,
											"end": 22809,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22707,
											"end": 22809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22707,
											"end": 22809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22815,
											"end": 23192,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 22815,
											"end": 23192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22903,
											"end": 22906,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22931,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 22964,
											"end": 22969,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22931,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 22931,
											"end": 22970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22931,
											"end": 22970,
											"name": "tag",
											"source": 11,
											"value": "558"
										},
										{
											"begin": 22931,
											"end": 22970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22986,
											"end": 23057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 23050,
											"end": 23056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23045,
											"end": 23048,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22986,
											"end": 23057,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 22986,
											"end": 23057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22986,
											"end": 23057,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 22986,
											"end": 23057,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22979,
											"end": 23057,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 22979,
											"end": 23057,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23066,
											"end": 23131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 23124,
											"end": 23130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23119,
											"end": 23122,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23112,
											"end": 23116,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23105,
											"end": 23110,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 23101,
											"end": 23117,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23066,
											"end": 23131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 23066,
											"end": 23131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23066,
											"end": 23131,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 23066,
											"end": 23131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23156,
											"end": 23185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 23178,
											"end": 23184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23156,
											"end": 23185,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 23156,
											"end": 23185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23156,
											"end": 23185,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 23156,
											"end": 23185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23151,
											"end": 23154,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23147,
											"end": 23186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23140,
											"end": 23186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23140,
											"end": 23186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22907,
											"end": 23192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22815,
											"end": 23192,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22815,
											"end": 23192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22815,
											"end": 23192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22815,
											"end": 23192,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22815,
											"end": 23192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23198,
											"end": 23511,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 23198,
											"end": 23511,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23311,
											"end": 23315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23349,
											"end": 23351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23338,
											"end": 23347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23334,
											"end": 23352,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23326,
											"end": 23352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23326,
											"end": 23352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23398,
											"end": 23407,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23392,
											"end": 23396,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23388,
											"end": 23408,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23384,
											"end": 23385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23373,
											"end": 23382,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23369,
											"end": 23386,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23362,
											"end": 23409,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23426,
											"end": 23504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 23499,
											"end": 23503,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23490,
											"end": 23496,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23426,
											"end": 23504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 23426,
											"end": 23504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23426,
											"end": 23504,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 23426,
											"end": 23504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23418,
											"end": 23504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23418,
											"end": 23504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23198,
											"end": 23511,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23198,
											"end": 23511,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23198,
											"end": 23511,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23198,
											"end": 23511,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23198,
											"end": 23511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Token&NFTStaking/Contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AdminAddToken(uint256)": "c0cd40ee",
							"AdminWithDrawToken(uint256)": "a88e132f",
							"Deposit(uint256)": "4d6ce1e5",
							"DepositNFT(uint256,uint256)": "934ed772",
							"Details(address)": "e88cc2be",
							"ERC20Address()": "a6021ace",
							"ERC721address()": "b7171a2e",
							"OwnerTokens(address)": "2ffce210",
							"Reward(address)": "57488064",
							"UpdateERC20(address)": "275bd33f",
							"UpdateERC721(address)": "ee0106d2",
							"UpdateRatePersentage(uint256)": "f89d832f",
							"UserRate(address)": "e4458b30",
							"Utilization()": "7b2f247f",
							"Withdraw()": "57ea89b6",
							"calculateIntrest(address)": "8b73e331",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owenerERC20()": "10fd4fba",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"showReward(address)": "c45af5d8",
							"totalOwnerToken()": "0ccff6e9",
							"transferOwnership(address)": "f2fde38b",
							"withdrawNFT(uint256)": "023245d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC721address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ratePersentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ERC20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AdminAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AdminWithDrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"DepositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Details\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestake\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"check\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC20Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC721address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20Address\",\"type\":\"address\"}],\"name\":\"UpdateERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC721address\",\"type\":\"address\"}],\"name\":\"UpdateERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratePersentage\",\"type\":\"uint256\"}],\"name\":\"UpdateRatePersentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"check\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Utilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"calculateIntrest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owenerERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"showReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOwnerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIds\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token&NFTStaking/Contract.sol\":\"ERC20Stakeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Token&NFTStaking/Contract.sol\":{\"keccak256\":\"0x1f6919af41e9134bab0288f4c638cf15ab73a0901af6226fe7516732a2ad4a2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d296a204ecba8e9c663500649089cc824f9bee05a23cc2fcd4764651eed27f86\",\"dweb:/ipfs/QmVFpv4t74mzUsgkfEGHaSQj4VbVvytScrhvJGYmdx3MXE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1052,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "ERC721address",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1054,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "owenerERC20",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1056,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "ERC20Address",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1058,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "totalOwnerToken",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1060,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "rate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1079,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "Details",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(Staker)1067_storage)"
							},
							{
								"astId": 1083,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "Reward",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1087,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "OwnerTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1092,
								"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
								"label": "UserRate",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(StakerNFT)1074_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Staker)1067_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC20Stakeable.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1067_storage"
							},
							"t_mapping(t_address,t_struct(StakerNFT)1074_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC20Stakeable.StakerNFT)",
								"numberOfBytes": "32",
								"value": "t_struct(StakerNFT)1074_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Staker)1067_storage": {
								"encoding": "inplace",
								"label": "struct ERC20Stakeable.Staker",
								"members": [
									{
										"astId": 1062,
										"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
										"label": "deposited",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1064,
										"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
										"label": "timestake",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1066,
										"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
										"label": "check",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(StakerNFT)1074_storage": {
								"encoding": "inplace",
								"label": "struct ERC20Stakeable.StakerNFT",
								"members": [
									{
										"astId": 1069,
										"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
										"label": "userRate",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1071,
										"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1073,
										"contract": "contracts/Token&NFTStaking/Contract.sol:ERC20Stakeable",
										"label": "check",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1024
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1025,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1024,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1024
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							226
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1519:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1568:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1585:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1604:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:2"
									},
									"scope": 226,
									"src": "1446:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1950:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:2"
									},
									"scope": 226,
									"src": "1934:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2240:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:2"
									},
									"scope": 226,
									"src": "2189:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "620:1631:2",
							"usedErrors": []
						}
					],
					"src": "114:2138:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1002
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"SafeERC20": [
							507
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 191,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 227,
							"src": "164:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 1003,
							"src": "211:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 232,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 235,
									"libraryName": {
										"id": 233,
										"name": "Address",
										"nameLocations": [
											"737:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "737:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:3",
									"typeName": {
										"id": 234,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "865:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "895:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 249,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "925:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 252,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "950:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "954:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 247,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 245,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "875:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "875:86:3"
											}
										]
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"794:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "794:6:3"
													},
													"referencedDeclaration": 190,
													"src": "794:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "816:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "836:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:3"
									},
									"scope": 507,
									"src": "763:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1102:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1162:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1162:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "1191:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1197:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "1201:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1112:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1009:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1009:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1031:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1053:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1073:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:3"
									},
									"scope": 507,
									"src": "974:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1581:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "1830:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 304,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 302,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 290,
																					"src": "1877:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 300,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "1846:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "1846:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2001:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 319,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "2031:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2031:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 322,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2055:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2064:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 317,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 315,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1981:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1505:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1505:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1505:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1527:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1552:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:3"
									},
									"scope": 507,
									"src": "1475:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2200:194:3",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2210:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 344,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 346,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "2264:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 340,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2233:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:3",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2233:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 348,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2275:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2310:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 355,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2340:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2340:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 358,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2364:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 359,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2373:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2290:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:3"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2124:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2124:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2124:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:3"
									},
									"scope": 507,
									"src": "2084:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2516:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:3",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2550:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 384,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 380,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 378,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "2604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 376,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2573:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "2573:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2634:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "2650:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 385,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 391,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:3"
													},
													{
														"assignments": [
															393
														],
														"declarations": [
															{
																"constant": false,
																"id": 393,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2715:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2738:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2753:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2792:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 402,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "2822:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "2822:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 405,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "2846:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2855:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 400,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 398,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2772:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:3"
													}
												]
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2440:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2440:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2440:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2462:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:3"
									},
									"scope": 507,
									"src": "2400:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3107:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3117:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3152:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3139:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3139:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3181:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "3188:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3197:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3204:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3214:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3217:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3220:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "3168:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3232:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3253:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3290:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3304:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2921:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$226",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 226,
														"src": "2921:12:3"
													},
													"referencedDeclaration": 226,
													"src": "2921:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$226",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2949:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2972:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3020:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:3"
									},
									"scope": 507,
									"src": "2892:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3817:636:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "4166:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4220:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "4200:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "4192:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 488,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4275:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "4271:176:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "4298:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 495,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4370:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 496,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 493,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 492,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3776:6:3"
													},
													"referencedDeclaration": 190,
													"src": "3776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3790:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:3"
									},
									"scope": 507,
									"src": "3747:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 508,
							"src": "707:3748:3",
							"usedErrors": []
						}
					],
					"src": "115:4341:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1036
						],
						"IERC721": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1037,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 512,
										"name": "IERC165",
										"nameLocations": [
											"271:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1036,
										"src": "271:7:4"
									},
									"id": 513,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1036
							],
							"name": "IERC721",
							"nameLocation": "260:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 522,
									"name": "Transfer",
									"nameLocation": "384:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "415:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "435:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:4"
									},
									"src": "378:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 531,
									"name": "Approval",
									"nameLocation": "571:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "580:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "603:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "629:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:4"
									},
									"src": "565:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 540,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "803:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "826:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:4"
									},
									"src": "782:85:4"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:4"
									},
									"scope": 623,
									"src": "954:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1187:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1227:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:4"
									},
									"scope": 623,
									"src": "1170:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1866:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:4"
									},
									"scope": 623,
									"src": "1809:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2679:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2701:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:4"
									},
									"scope": 623,
									"src": "2644:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3526:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3568:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:4"
									},
									"scope": 623,
									"src": "3495:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4079:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4091:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:4"
									},
									"scope": 623,
									"src": "4062:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4464:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4482:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:4"
									},
									"scope": 623,
									"src": "4437:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4678:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4718:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:4"
									},
									"scope": 623,
									"src": "4657:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4911:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4926:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4967:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:4"
									},
									"scope": 623,
									"src": "4885:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 624,
							"src": "250:4725:4",
							"usedErrors": []
						}
					],
					"src": "108:4868:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							641
						]
					},
					"id": 642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 641,
							"linearizedBaseContracts": [
								641
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "859:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "885:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "907:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "932:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:5"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "976:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 637,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:5"
									},
									"scope": 641,
									"src": "824:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 642,
							"src": "294:692:5",
							"usedErrors": []
						}
					],
					"src": "116:871:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							1036
						],
						"IERC721": [
							623
						],
						"IERC721Enumerable": [
							672
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 644,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 624,
							"src": "154:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 646,
										"name": "IERC721",
										"nameLocations": [
											"348:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "348:7:6"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 645,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 672,
							"linearizedBaseContracts": [
								672,
								623,
								1036
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:6"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "495:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:6"
									},
									"scope": 672,
									"src": "449:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "715:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "768:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:6"
									},
									"scope": 672,
									"src": "686:91:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "974:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:6"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1012:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:6"
									},
									"scope": 672,
									"src": "952:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 673,
							"src": "317:706:6",
							"usedErrors": []
						}
					],
					"src": "129:895:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 675,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 683,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 688,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1002,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 701,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		],
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 699,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													710,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 709,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 717,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 711,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 713,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1002,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3555:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3594:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3602:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 734,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "3572:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 733,
												"id": 740,
												"nodeType": "Return",
												"src": "3565:79:7"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1002,
									"src": "3466:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "4020:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4059:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 758,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4076:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 754,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "4037:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 753,
												"id": 760,
												"nodeType": "Return",
												"src": "4030:59:7"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3904:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3928:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3955:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:7"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4006:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:7"
									},
									"scope": 1002,
									"src": "3873:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "4601:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "4640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 777,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 774,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "4618:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 773,
												"id": 780,
												"nodeType": "Return",
												"src": "4611:94:7"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:7"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4587:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:7"
									},
									"scope": 1002,
									"src": "4458:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "5139:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 799,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		],
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 797,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 802,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5182:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:7"
											},
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "5241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "5255:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"id": 815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "5308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 811,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "5282:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 813,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5301:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5357:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 821,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 822,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5386:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 818,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5330:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 795,
												"id": 824,
												"nodeType": "Return",
												"src": "5323:76:7"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5024:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5074:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:7"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5125:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:7"
									},
									"scope": 1002,
									"src": "4960:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "5683:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "5719:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "5727:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 836,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															872
														],
														"referencedDeclaration": 872,
														"src": "5700:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 835,
												"id": 841,
												"nodeType": "Return",
												"src": "5693:80:7"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:7"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5669:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:7"
									},
									"scope": 1002,
									"src": "5583:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "6122:168:7",
										"statements": [
											{
												"assignments": [
													856,
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "6133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 855,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "6147:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 857,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "6192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6174:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6249:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 867,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "6258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 868,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "6270:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 864,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "6214:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 870,
												"nodeType": "Return",
												"src": "6207:76:7"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6001:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6025:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6052:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:7"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6108:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:7"
									},
									"scope": 1002,
									"src": "5964:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "6566:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 883,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "6604:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "6612:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 882,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															889,
															918
														],
														"referencedDeclaration": 918,
														"src": "6583:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 881,
												"id": 887,
												"nodeType": "Return",
												"src": "6576:84:7"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:7"
									},
									"scope": 1002,
									"src": "6469:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "7008:170:7",
										"statements": [
											{
												"assignments": [
													902,
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "7019:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 901,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "7033:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 903,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"arguments": [
														{
															"id": 907,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7080:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 905,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7060:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "7137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 913,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7146:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 914,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "7158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 910,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "7102:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 900,
												"id": 916,
												"nodeType": "Return",
												"src": "7095:76:7"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:7"
									},
									"scope": 1002,
									"src": "6853:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "7660:434:7",
										"statements": [
											{
												"condition": {
													"id": 932,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "7674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "8030:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "8052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 951,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "8064:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 949,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "8044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:7"
														}
													]
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "7670:418:7",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "7683:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 933,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "7701:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "7697:286:7",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "7725:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 939,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "7927:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 938,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "7916:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 937,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 946,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "8003:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 931,
															"id": 947,
															"nodeType": "Return",
															"src": "7996:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7511:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7557:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7590:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:7"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7646:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:7"
									},
									"scope": 1002,
									"src": "7466:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "8475:135:7",
										"statements": [
											{
												"condition": {
													"id": 969,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 960,
													"src": "8489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "8546:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 974,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "8568:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 975,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "8580:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 973,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "8560:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:7"
														}
													]
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "8485:119:7",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "8498:42:7",
													"statements": [
														{
															"expression": {
																"id": 970,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "8519:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 968,
															"id": 971,
															"nodeType": "Return",
															"src": "8512:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8372:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8405:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:7"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8461:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:7"
									},
									"scope": 1002,
									"src": "8315:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "8699:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 988,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "9105:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 995,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "9126:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 994,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:7"
														}
													]
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "8771:379:7",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "8798:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:7",
																	"valueSize": 1
																}
															],
															"id": 992,
															"nodeType": "InlineAssembly",
															"src": "8947:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "8633:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "8658:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:7"
									},
									"scope": 1002,
									"src": "8616:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1003,
							"src": "194:8964:7",
							"usedErrors": []
						}
					],
					"src": "101:9058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1024
						]
					},
					"id": 1025,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1005,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1010,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1012,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1024,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1024,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1025,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1036
						]
					},
					"id": 1037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1036,
							"linearizedBaseContracts": [
								1036
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1036,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1037,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"contracts/Token&NFTStaking/Contract.sol": {
				"ast": {
					"absolutePath": "contracts/Token&NFTStaking/Contract.sol",
					"exportedSymbols": {
						"Address": [
							1002
						],
						"Context": [
							1024
						],
						"ERC20Stakeable": [
							1688
						],
						"IERC165": [
							1036
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"IERC721": [
							623
						],
						"IERC721Enumerable": [
							672
						],
						"IERC721Receiver": [
							641
						],
						"Ownable": [
							112
						],
						"SafeERC20": [
							507
						]
					},
					"id": 1689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "56:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 113,
							"src": "81:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 508,
							"src": "134:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 673,
							"src": "200:79:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 642,
							"src": "280:66:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1043,
										"name": "Ownable",
										"nameLocations": [
											"375:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "375:7:10"
									},
									"id": 1044,
									"nodeType": "InheritanceSpecifier",
									"src": "375:7:10"
								},
								{
									"baseName": {
										"id": 1045,
										"name": "IERC721Receiver",
										"nameLocations": [
											"383:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 641,
										"src": "383:15:10"
									},
									"id": 1046,
									"nodeType": "InheritanceSpecifier",
									"src": "383:15:10"
								}
							],
							"canonicalName": "ERC20Stakeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1688,
							"linearizedBaseContracts": [
								1688,
								641,
								112,
								1024
							],
							"name": "ERC20Stakeable",
							"nameLocation": "357:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1050,
									"libraryName": {
										"id": 1047,
										"name": "SafeERC20",
										"nameLocations": [
											"410:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 507,
										"src": "410:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "404:27:10",
									"typeName": {
										"id": 1049,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1048,
											"name": "IERC20",
											"nameLocations": [
												"424:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "424:6:10"
										},
										"referencedDeclaration": 190,
										"src": "424:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b7171a2e",
									"id": 1052,
									"mutability": "mutable",
									"name": "ERC721address",
									"nameLocation": "451:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "436:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1051,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "10fd4fba",
									"id": 1054,
									"mutability": "mutable",
									"name": "owenerERC20",
									"nameLocation": "485:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "470:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1053,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6021ace",
									"id": 1056,
									"mutability": "mutable",
									"name": "ERC20Address",
									"nameLocation": "517:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "502:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1055,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "502:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ccff6e9",
									"id": 1058,
									"mutability": "mutable",
									"name": "totalOwnerToken",
									"nameLocation": "547:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "535:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1057,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "535:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1060,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "573:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "568:9:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "568:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "ERC20Stakeable.Staker",
									"id": 1067,
									"members": [
										{
											"constant": false,
											"id": 1062,
											"mutability": "mutable",
											"name": "deposited",
											"nameLocation": "615:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1067,
											"src": "607:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1061,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "607:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1064,
											"mutability": "mutable",
											"name": "timestake",
											"nameLocation": "642:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1067,
											"src": "634:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1063,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "634:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1066,
											"mutability": "mutable",
											"name": "check",
											"nameLocation": "666:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1067,
											"src": "661:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1065,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "661:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "590:6:10",
									"nodeType": "StructDefinition",
									"scope": 1688,
									"src": "583:96:10",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC20Stakeable.StakerNFT",
									"id": 1074,
									"members": [
										{
											"constant": false,
											"id": 1069,
											"mutability": "mutable",
											"name": "userRate",
											"nameLocation": "719:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1074,
											"src": "711:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1068,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "711:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "745:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1074,
											"src": "737:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1070,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "737:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1073,
											"mutability": "mutable",
											"name": "check",
											"nameLocation": "767:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1074,
											"src": "762:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1072,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "762:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakerNFT",
									"nameLocation": "691:9:10",
									"nodeType": "StructDefinition",
									"scope": 1688,
									"src": "684:96:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e88cc2be",
									"id": 1079,
									"mutability": "mutable",
									"name": "Details",
									"nameLocation": "820:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "785:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
										"typeString": "mapping(address => struct ERC20Stakeable.Staker)"
									},
									"typeName": {
										"id": 1078,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1075,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "785:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
											"typeString": "mapping(address => struct ERC20Stakeable.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1077,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1076,
												"name": "Staker",
												"nameLocations": [
													"805:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1067,
												"src": "805:6:10"
											},
											"referencedDeclaration": 1067,
											"src": "805:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1067_storage_ptr",
												"typeString": "struct ERC20Stakeable.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57488064",
									"id": 1083,
									"mutability": "mutable",
									"name": "Reward",
									"nameLocation": "866:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "833:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1082,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1080,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "833:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1081,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "853:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ffce210",
									"id": 1087,
									"mutability": "mutable",
									"name": "OwnerTokens",
									"nameLocation": "912:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "878:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1086,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1084,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "887:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "878:26:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1085,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "898:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e4458b30",
									"id": 1092,
									"mutability": "mutable",
									"name": "UserRate",
									"nameLocation": "968:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1688,
									"src": "929:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
										"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT)"
									},
									"typeName": {
										"id": 1091,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1088,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "938:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "929:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
											"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1090,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1089,
												"name": "StakerNFT",
												"nameLocations": [
													"949:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1074,
												"src": "949:9:10"
											},
											"referencedDeclaration": 1074,
											"src": "949:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakerNFT_$1074_storage_ptr",
												"typeString": "struct ERC20Stakeable.StakerNFT"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "1441:151:10",
										"statements": [
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "1451:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1102,
														"name": "_ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "1467:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1451:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "1451:30:10"
											},
											{
												"expression": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1105,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1491:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1106,
														"name": "_ratePersentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1498:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1491:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "1491:22:10"
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1109,
														"name": "ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "1523:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1110,
														"name": "_ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "1538:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1523:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "1523:28:10"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1113,
														"name": "owenerERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1561:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1114,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1575:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1579:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1575:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1561:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "1561:24:10"
											}
										]
									},
									"id": 1119,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_ERC721address",
												"nameLocation": "1377:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1369:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_ratePersentage",
												"nameLocation": "1401:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1393:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_ERC20Address",
												"nameLocation": "1426:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "1418:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:72:10"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:0:10"
									},
									"scope": 1688,
									"src": "1357:235:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "1871:237:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1127,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1889:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1893:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1889:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1129,
																"name": "owenerERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "1901:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1889:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204f776e65722063616e207472616e73666572",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1913:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80",
																"typeString": "literal_string \"Only Owner can transfer\""
															},
															"value": "Only Owner can transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28c1cb577aa40b9e795d347404ee0993f194817ea72e74d9b4f95c5c18354b80",
																"typeString": "literal_string \"Only Owner can transfer\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1881:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "1881:58:10"
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1134,
															"name": "OwnerTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "1949:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1137,
														"indexExpression": {
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1961:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1965:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1961:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1949:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1138,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "1975:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1949:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1949:33:10"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "totalOwnerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1992:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1142,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2011:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1992:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "1992:26:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2066:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2070:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2066:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1153,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2086:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2078:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1151,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2078:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2078:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2093:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1146,
																	"name": "ERC20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2035:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1145,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2028:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2028:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2049:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "2028:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2028:73:10"
											}
										]
									},
									"functionSelector": "c0cd40ee",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1123,
												"name": "onlyOwner",
												"nameLocations": [
													"1862:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1862:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1862:9:10"
										}
									],
									"name": "AdminAddToken",
									"nameLocation": "1827:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1846:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1841:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:14:10"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:0:10"
									},
									"scope": 1688,
									"src": "1818:290:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "2357:148:10",
										"statements": [
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1166,
															"name": "OwnerTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2367:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"expression": {
																"id": 1167,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2379:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2383:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2379:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2367:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1170,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "2394:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2367:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "2367:33:10"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "totalOwnerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2410:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1174,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "2429:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2410:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "2410:25:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2479:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2483:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2479:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "2491:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "ERC20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2452:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1177,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2445:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2445:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2466:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "2445:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2445:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2445:53:10"
											}
										]
									},
									"functionSelector": "a88e132f",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1163,
												"name": "onlyOwner",
												"nameLocations": [
													"2348:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2348:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2348:9:10"
										}
									],
									"name": "AdminWithDrawToken",
									"nameLocation": "2309:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2333:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2328:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2328:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2327:13:10"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2357:0:10"
									},
									"scope": 1688,
									"src": "2300:205:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "2765:110:10",
										"statements": [
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "Persentage",
														"nameLocation": "2780:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "2775:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1192,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2775:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1194,
																		"name": "OwnerTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "2794:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1196,
																	"indexExpression": {
																		"id": 1195,
																		"name": "owenerERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "2806:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2794:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2821:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2794:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1199,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2793:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1200,
														"name": "totalOwnerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2826:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2793:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2775:66:10"
											},
											{
												"expression": {
													"id": 1203,
													"name": "Persentage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1193,
													"src": "2858:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1204,
												"nodeType": "Return",
												"src": "2851:17:10"
											}
										]
									},
									"functionSelector": "7b2f247f",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Utilization",
									"nameLocation": "2722:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2733:2:10"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2756:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:9:10"
									},
									"scope": 1688,
									"src": "2713:162:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "3209:228:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3227:26:10",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1212,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "3228:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1215,
																	"indexExpression": {
																		"expression": {
																			"id": 1213,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3236:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3240:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3236:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3228:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1067_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3248:5:10",
																"memberName": "check",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1066,
																"src": "3228:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204669727374205769746844726177",
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3254:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d",
																"typeString": "literal_string \"Please First WithDraw\""
															},
															"value": "Please First WithDraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79bec14e0e6d2eafd9dc2978f3b2f873c68c443dadf7f8a79d5a26018702e95d",
																"typeString": "literal_string \"Please First WithDraw\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3219:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "3219:59:10"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1221,
															"name": "Details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3288:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
															}
														},
														"id": 1224,
														"indexExpression": {
															"expression": {
																"id": 1222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3296:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3300:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3296:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3288:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1067_storage",
															"typeString": "struct ERC20Stakeable.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1226,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "3317:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1227,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3325:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3331:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3325:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3341:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1225,
															"name": "Staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3310:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Staker_$1067_storage_ptr_$",
																"typeString": "type(struct ERC20Stakeable.Staker storage pointer)"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3310:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1067_memory_ptr",
															"typeString": "struct ERC20Stakeable.Staker memory"
														}
													},
													"src": "3288:58:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1067_storage",
														"typeString": "struct ERC20Stakeable.Staker storage ref"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "3288:58:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1237,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3394:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3398:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3394:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1241,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3414:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3406:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1239,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3406:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3406:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "3422:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1234,
																	"name": "ERC20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "3363:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1233,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3356:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3356:20:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3377:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "3356:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3356:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "3356:74:10"
											}
										]
									},
									"functionSelector": "4d6ce1e5",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Deposit",
									"nameLocation": "3177:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3193:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3185:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3184:17:10"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:10"
									},
									"scope": 1688,
									"src": "3168:269:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "3659:850:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1251,
																	"name": "Details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "3677:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																	}
																},
																"id": 1254,
																"indexExpression": {
																	"expression": {
																		"id": 1252,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3685:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3689:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3685:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3677:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1067_storage",
																	"typeString": "struct ERC20Stakeable.Staker storage ref"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3697:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1066,
															"src": "3677:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204669727374205374616b65",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3703:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
																"typeString": "literal_string \"Please First Stake\""
															},
															"value": "Please First Stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_53c8d237d2d31edafe54f154d90626ffdd2ceb4ec1cb5e919017840ee802a1cd",
																"typeString": "literal_string \"Please First Stake\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3669:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3669:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "3669:55:10"
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1259,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3738:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"expression": {
																"id": 1260,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3747:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3751:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3747:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3738:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3759:5:10",
													"memberName": "check",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1073,
													"src": "3738:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "4215:284:10",
													"statements": [
														{
															"assignments": [
																1328
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1328,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "4234:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1365,
																	"src": "4229:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1327,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4229:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1334,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1329,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "4243:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1332,
																	"indexExpression": {
																		"expression": {
																			"id": 1330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4251:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4255:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4251:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4243:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1067_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4263:9:10",
																"memberName": "deposited",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1062,
																"src": "4243:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4229:43:10"
														},
														{
															"assignments": [
																1336
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1336,
																	"mutability": "mutable",
																	"name": "newval",
																	"nameLocation": "4291:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1365,
																	"src": "4286:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1335,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4286:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1341,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1338,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4317:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4321:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4317:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1337,
																	"name": "calculateIntrest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "4300:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4300:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4286:42:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1346,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4372:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4376:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4372:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1348,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "4384:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1349,
																			"name": "newval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1336,
																			"src": "4393:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4384:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1343,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1056,
																				"src": "4349:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1342,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4342:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4342:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4363:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 157,
																	"src": "4342:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4342:58:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "4342:58:10"
														},
														{
															"expression": {
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1353,
																		"name": "OwnerTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "4414:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1355,
																	"indexExpression": {
																		"id": 1354,
																		"name": "owenerERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "4426:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4414:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1356,
																	"name": "newval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "4442:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4414:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1358,
															"nodeType": "ExpressionStatement",
															"src": "4414:34:10"
														},
														{
															"expression": {
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4462:26:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1359,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "4469:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1362,
																	"indexExpression": {
																		"expression": {
																			"id": 1360,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4477:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4481:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4477:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4469:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1067_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1364,
															"nodeType": "ExpressionStatement",
															"src": "4462:26:10"
														}
													]
												},
												"id": 1366,
												"nodeType": "IfStatement",
												"src": "3734:765:10",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "3765:437:10",
													"statements": [
														{
															"assignments": [
																1265
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1265,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "3784:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1326,
																	"src": "3779:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1264,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3779:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1271,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1266,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "3793:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1269,
																	"indexExpression": {
																		"expression": {
																			"id": 1267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3801:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3805:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3801:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3793:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1067_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3813:9:10",
																"memberName": "deposited",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1062,
																"src": "3793:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3779:43:10"
														},
														{
															"assignments": [
																1273
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1273,
																	"mutability": "mutable",
																	"name": "newval",
																	"nameLocation": "3841:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1326,
																	"src": "3836:11:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3836:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1278,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1275,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3867:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3871:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3867:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1274,
																	"name": "calculateIntrest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "3850:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3850:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3836:42:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1285,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3940:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																					"typeString": "contract ERC20Stakeable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																					"typeString": "contract ERC20Stakeable"
																				}
																			],
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3932:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1283,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3932:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3932:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1287,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3947:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3951:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3947:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1289,
																				"name": "UserRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "3958:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																					"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																				}
																			},
																			"id": 1292,
																			"indexExpression": {
																				"expression": {
																					"id": 1290,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3967:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3971:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3967:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3958:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
																				"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3979:7:10",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1071,
																		"src": "3958:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3987:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1280,
																				"name": "ERC721address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1052,
																				"src": "3900:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1279,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "3892:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3892:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$623",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3915:16:10",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "3892:39:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3892:98:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1296,
															"nodeType": "ExpressionStatement",
															"src": "3892:98:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1301,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4034:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4038:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4034:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1303,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "4046:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1304,
																			"name": "newval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1273,
																			"src": "4055:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4046:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1298,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1056,
																				"src": "4011:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1297,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "4004:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4004:20:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4025:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 157,
																	"src": "4004:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4004:58:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1307,
															"nodeType": "ExpressionStatement",
															"src": "4004:58:10"
														},
														{
															"expression": {
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1308,
																		"name": "OwnerTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "4076:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1310,
																	"indexExpression": {
																		"id": 1309,
																		"name": "owenerERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "4088:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1311,
																	"name": "newval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "4104:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4076:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1313,
															"nodeType": "ExpressionStatement",
															"src": "4076:34:10"
														},
														{
															"expression": {
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4124:27:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1314,
																		"name": "UserRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "4131:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																		}
																	},
																	"id": 1317,
																	"indexExpression": {
																		"expression": {
																			"id": 1315,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4140:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4144:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4140:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4131:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
																		"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1319,
															"nodeType": "ExpressionStatement",
															"src": "4124:27:10"
														},
														{
															"expression": {
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4165:26:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 1320,
																		"name": "Details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "4172:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																			"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																		}
																	},
																	"id": 1323,
																	"indexExpression": {
																		"expression": {
																			"id": 1321,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4180:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4184:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4180:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4172:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1067_storage",
																		"typeString": "struct ERC20Stakeable.Staker storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1325,
															"nodeType": "ExpressionStatement",
															"src": "4165:26:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "57ea89b6",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Withdraw",
									"nameLocation": "3641:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3649:2:10"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3659:0:10"
									},
									"scope": 1688,
									"src": "3632:877:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "4772:653:10",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1375,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "4786:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1377,
														"indexExpression": {
															"id": 1376,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4795:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4786:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4800:5:10",
													"memberName": "check",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1073,
													"src": "4786:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1465,
													"nodeType": "Block",
													"src": "5133:277:10",
													"statements": [
														{
															"assignments": [
																1425
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1425,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "5152:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1465,
																	"src": "5147:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1424,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5147:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1445,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1426,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "5165:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1428,
																					"indexExpression": {
																						"id": 1427,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "5173:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5165:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1067_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1429,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5178:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1062,
																				"src": "5165:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1430,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1060,
																				"src": "5190:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5165:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1432,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5164:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1433,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "5200:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1434,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5206:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "5200:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1435,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1079,
																									"src": "5218:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1437,
																								"indexExpression": {
																									"id": 1436,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1370,
																									"src": "5226:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5218:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1067_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1438,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5231:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1064,
																							"src": "5218:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5200:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1440,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5199:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5242:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "5199:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1443,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5198:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5164:81:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5147:98:10"
														},
														{
															"assignments": [
																1447
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1447,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "5264:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1465,
																	"src": "5259:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1446,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5259:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1451,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1448,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "5278:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5290:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "5278:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5259:34:10"
														},
														{
															"expression": {
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1452,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "5307:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1453,
																		"name": "TotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5316:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1454,
																				"name": "Details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "5330:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																					"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																				}
																			},
																			"id": 1456,
																			"indexExpression": {
																				"id": 1455,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1370,
																				"src": "5338:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5330:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1067_storage",
																				"typeString": "struct ERC20Stakeable.Staker storage ref"
																			}
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5343:9:10",
																		"memberName": "deposited",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1062,
																		"src": "5330:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5316:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5307:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1460,
															"nodeType": "ExpressionStatement",
															"src": "5307:45:10"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1461,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "5373:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5380:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "5373:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1374,
															"id": 1464,
															"nodeType": "Return",
															"src": "5366:33:10"
														}
													]
												},
												"id": 1466,
												"nodeType": "IfStatement",
												"src": "4782:628:10",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "4815:296:10",
													"statements": [
														{
															"assignments": [
																1380
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1380,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "4834:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1423,
																	"src": "4829:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1379,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4829:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1403,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1381,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "4847:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1383,
																					"indexExpression": {
																						"id": 1382,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "4855:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4847:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1067_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1384,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4860:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1062,
																				"src": "4847:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1385,
																						"name": "UserRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1092,
																						"src": "4872:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																						}
																					},
																					"id": 1387,
																					"indexExpression": {
																						"id": 1386,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "4881:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4872:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
																						"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																					}
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4886:8:10",
																				"memberName": "userRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1069,
																				"src": "4872:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4847:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1390,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4846:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1397,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1391,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "4900:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1392,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4906:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "4900:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1393,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1079,
																									"src": "4918:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1395,
																								"indexExpression": {
																									"id": 1394,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1370,
																									"src": "4926:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4918:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1067_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1396,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4931:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1064,
																							"src": "4918:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4900:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1398,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4899:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4942:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "4899:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1401,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4898:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4846:99:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4829:116:10"
														},
														{
															"assignments": [
																1405
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1405,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "4964:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1423,
																	"src": "4959:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1404,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4959:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1409,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1406,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "4978:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4990:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "4978:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4959:34:10"
														},
														{
															"expression": {
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1410,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "5007:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1411,
																		"name": "TotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "5016:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1412,
																				"name": "Details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "5030:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																					"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																				}
																			},
																			"id": 1414,
																			"indexExpression": {
																				"id": 1413,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1370,
																				"src": "5038:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5030:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1067_storage",
																				"typeString": "struct ERC20Stakeable.Staker storage ref"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5043:9:10",
																		"memberName": "deposited",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1062,
																		"src": "5030:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5016:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5007:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "5007:45:10"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1419,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "5073:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030303030303030303030303030303030",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5080:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1000000000000000000"
																},
																"src": "5073:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1374,
															"id": 1422,
															"nodeType": "Return",
															"src": "5066:33:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c45af5d8",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showReward",
									"nameLocation": "4711:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4730:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "4722:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:13:10"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4760:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "4755:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4755:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4754:13:10"
									},
									"scope": 1688,
									"src": "4702:723:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "5756:495:10",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1475,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "5770:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1477,
														"indexExpression": {
															"id": 1476,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "5779:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5770:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5784:5:10",
													"memberName": "check",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1073,
													"src": "5770:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "6042:203:10",
													"statements": [
														{
															"assignments": [
																1514
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1514,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "6061:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1543,
																	"src": "6056:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1513,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6056:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1534,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1515,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "6074:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1517,
																					"indexExpression": {
																						"id": 1516,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1470,
																						"src": "6082:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6074:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1067_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6087:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1062,
																				"src": "6074:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1519,
																				"name": "rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1060,
																				"src": "6099:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6074:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6073:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1528,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1522,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "6109:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1523,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6115:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "6109:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1524,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1079,
																									"src": "6127:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1526,
																								"indexExpression": {
																									"id": 1525,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1470,
																									"src": "6135:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6127:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1067_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1527,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6140:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1064,
																							"src": "6127:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6109:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1529,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6108:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6151:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "6108:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1532,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6107:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6073:81:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6056:98:10"
														},
														{
															"assignments": [
																1536
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1536,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "6173:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1543,
																	"src": "6168:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1535,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6168:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1540,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1537,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "6187:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6199:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "6187:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6168:34:10"
														},
														{
															"expression": {
																"id": 1541,
																"name": "TotalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "6223:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1542,
															"nodeType": "Return",
															"src": "6216:18:10"
														}
													]
												},
												"id": 1544,
												"nodeType": "IfStatement",
												"src": "5766:479:10",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "5799:221:10",
													"statements": [
														{
															"assignments": [
																1480
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1480,
																	"mutability": "mutable",
																	"name": "RewardEst",
																	"nameLocation": "5818:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1512,
																	"src": "5813:14:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1479,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5813:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1503,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1481,
																						"name": "Details",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "5831:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																						}
																					},
																					"id": 1483,
																					"indexExpression": {
																						"id": 1482,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1470,
																						"src": "5839:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5831:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1067_storage",
																						"typeString": "struct ERC20Stakeable.Staker storage ref"
																					}
																				},
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5844:9:10",
																				"memberName": "deposited",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1062,
																				"src": "5831:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1485,
																						"name": "UserRate",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1092,
																						"src": "5856:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																							"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																						}
																					},
																					"id": 1487,
																					"indexExpression": {
																						"id": 1486,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1470,
																						"src": "5865:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5856:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
																						"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																					}
																				},
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5870:8:10",
																				"memberName": "userRate",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1069,
																				"src": "5856:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5831:47:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1490,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5830:49:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1491,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "5884:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1492,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5890:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "5884:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1493,
																									"name": "Details",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1079,
																									"src": "5902:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																										"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																									}
																								},
																								"id": 1495,
																								"indexExpression": {
																									"id": 1494,
																									"name": "_to",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1470,
																									"src": "5910:3:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5902:12:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1067_storage",
																									"typeString": "struct ERC20Stakeable.Staker storage ref"
																								}
																							},
																							"id": 1496,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5915:9:10",
																							"memberName": "timestake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1064,
																							"src": "5902:22:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5884:40:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5883:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5926:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "5883:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1501,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5882:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5830:99:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5813:116:10"
														},
														{
															"assignments": [
																1505
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1505,
																	"mutability": "mutable",
																	"name": "TotalReward",
																	"nameLocation": "5948:11:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1512,
																	"src": "5943:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1504,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5943:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1509,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "RewardEst",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "5962:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5974:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "5962:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5943:34:10"
														},
														{
															"expression": {
																"id": 1510,
																"name": "TotalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "5998:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1474,
															"id": 1511,
															"nodeType": "Return",
															"src": "5991:18:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8b73e331",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateIntrest",
									"nameLocation": "5698:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5723:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5715:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:13:10"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5748:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5748:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5747:9:10"
									},
									"scope": 1688,
									"src": "5689:562:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "6495:47:10",
										"statements": [
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1553,
														"name": "ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "6505:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1554,
														"name": "_ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "6521:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6505:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "6505:30:10"
											}
										]
									},
									"functionSelector": "ee0106d2",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1550,
												"name": "onlyOwner",
												"nameLocations": [
													"6486:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6486:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6486:9:10"
										}
									],
									"name": "UpdateERC721",
									"nameLocation": "6442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_ERC721address",
												"nameLocation": "6463:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "6455:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6454:24:10"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6495:0:10"
									},
									"scope": 1688,
									"src": "6433:109:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "6781:45:10",
										"statements": [
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1565,
														"name": "ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "6791:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1566,
														"name": "_ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "6806:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6791:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "6791:28:10"
											}
										]
									},
									"functionSelector": "275bd33f",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1563,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1562,
												"name": "onlyOwner",
												"nameLocations": [
													"6772:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6772:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6772:9:10"
										}
									],
									"name": "UpdateERC20",
									"nameLocation": "6728:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_ERC20Address",
												"nameLocation": "6750:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "6742:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6742:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:24:10"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6781:0:10"
									},
									"scope": 1688,
									"src": "6719:107:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "7079:39:10",
										"statements": [
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1577,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "7089:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1578,
														"name": "_ratePersentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "7096:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7089:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "7089:22:10"
											}
										]
									},
									"functionSelector": "f89d832f",
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1575,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "onlyOwner",
												"nameLocations": [
													"7070:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7070:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7070:9:10"
										}
									],
									"name": "UpdateRatePersentage",
									"nameLocation": "7017:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_ratePersentage",
												"nameLocation": "7046:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "7038:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7038:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7037:25:10"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7079:0:10"
									},
									"scope": 1688,
									"src": "7008:110:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "7417:306:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1590,
																	"name": "Details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "7435:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1067_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.Staker storage ref)"
																	}
																},
																"id": 1593,
																"indexExpression": {
																	"expression": {
																		"id": 1591,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7443:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7447:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7443:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7435:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1067_storage",
																	"typeString": "struct ERC20Stakeable.Staker storage ref"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7455:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1066,
															"src": "7435:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4669727374204465706f73697420546f6b656e73",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7461:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
																"typeString": "literal_string \"First Deposit Tokens\""
															},
															"value": "First Deposit Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37ff7ae395529772c90b7f5a0581d51053b2eee440e3785f42b31d018a5eb937",
																"typeString": "literal_string \"First Deposit Tokens\""
															}
														],
														"id": 1589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7427:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7427:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "7427:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1599,
																	"name": "UserRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "7502:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																	}
																},
																"id": 1602,
																"indexExpression": {
																	"expression": {
																		"id": 1600,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7511:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7515:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7511:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7502:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
																	"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7523:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "7502:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520556e7374616b6520796f7572206465706f7369746564204e4654",
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7529:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
																"typeString": "literal_string \"Please Unstake your deposited NFT\""
															},
															"value": "Please Unstake your deposited NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9c681cddd568764e66993921d38bc68da72158d434eadff5cc67cb4aff47aab",
																"typeString": "literal_string \"Please Unstake your deposited NFT\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7494:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7494:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "7494:71:10"
											},
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1607,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "7575:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1610,
														"indexExpression": {
															"expression": {
																"id": 1608,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7584:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7588:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7584:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7575:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1612,
																"name": "_rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "7608:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1613,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "7614:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7623:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1611,
															"name": "StakerNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "7598:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakerNFT_$1074_storage_ptr_$",
																"typeString": "type(struct ERC20Stakeable.StakerNFT storage pointer)"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7598:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1074_memory_ptr",
															"typeString": "struct ERC20Stakeable.StakerNFT memory"
														}
													},
													"src": "7575:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
														"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "7575:53:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1622,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7679:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7683:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7679:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1626,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7698:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7690:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1624,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7690:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7690:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1628,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "7704:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7713:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1619,
																	"name": "ERC721address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "7647:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1618,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "7639:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7639:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$623",
																"typeString": "contract IERC721"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7662:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "7639:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7639:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "7639:77:10"
											}
										]
									},
									"functionSelector": "934ed772",
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DepositNFT",
									"nameLocation": "7370:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "7389:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "7381:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "7403:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "7398:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7398:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7380:29:10"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7417:0:10"
									},
									"scope": 1688,
									"src": "7361:362:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "7981:203:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1639,
																	"name": "UserRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "7999:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																		"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
																	}
																},
																"id": 1642,
																"indexExpression": {
																	"expression": {
																		"id": 1640,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8008:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8012:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8008:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7999:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
																	"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8020:5:10",
															"memberName": "check",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1073,
															"src": "7999:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204669727374205374616b65204e465473",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8026:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
																"typeString": "literal_string \"Please First Stake NFTs\""
															},
															"value": "Please First Stake NFTs"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80658633b1b1848af080bcec8bf60b38a9be9339ba68ff8e557f938a97f47ed9",
																"typeString": "literal_string \"Please First Stake NFTs\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7991:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7991:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "7991:61:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1653,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8110:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20Stakeable_$1688",
																		"typeString": "contract ERC20Stakeable"
																	}
																],
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8102:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1651,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8102:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8102:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1655,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8117:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8121:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8117:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "8128:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8137:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "ERC721address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "8070:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1647,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "8062:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8062:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$623",
																"typeString": "contract IERC721"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8085:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 568,
														"src": "8062:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory) external"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8062:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "8062:78:10"
											},
											{
												"expression": {
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8150:27:10",
													"subExpression": {
														"baseExpression": {
															"id": 1661,
															"name": "UserRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "8157:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakerNFT_$1074_storage_$",
																"typeString": "mapping(address => struct ERC20Stakeable.StakerNFT storage ref)"
															}
														},
														"id": 1664,
														"indexExpression": {
															"expression": {
																"id": 1662,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8166:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8170:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8166:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8157:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakerNFT_$1074_storage",
															"typeString": "struct ERC20Stakeable.StakerNFT storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "8150:27:10"
											}
										]
									},
									"functionSelector": "023245d7",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawNFT",
									"nameLocation": "7944:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "7964:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "7956:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7956:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7955:18:10"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7981:0:10"
									},
									"scope": 1688,
									"src": "7935:249:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "8295:65:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1682,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "8312:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$641_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8328:16:10",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "8312:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "8345:8:10",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "8312:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1685,
												"nodeType": "Return",
												"src": "8305:48:10"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "8198:16:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8269:8:10"
									},
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8215:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8223:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8223:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8231:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8231:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8239:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8239:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8214:40:10"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "8287:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "8287:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8286:8:10"
									},
									"scope": 1688,
									"src": "8189:171:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1689,
							"src": "348:8014:10",
							"usedErrors": []
						}
					],
					"src": "56:8306:10"
				},
				"id": 10
			}
		}
	}
}