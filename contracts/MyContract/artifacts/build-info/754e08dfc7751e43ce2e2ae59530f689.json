{
	"id": "754e08dfc7751e43ce2e2ae59530f689",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyContract/HOM.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2024-02-24\n*/\n\npragma solidity 0.5.16;\n\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract HOMToken is Context, IERC20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"HOM Token\";\n    _symbol = \"HOM\";\n    _decimals = 9;\n    _totalSupply = 100000000000000000;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {ERC20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {ERC20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {ERC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {ERC20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {ERC20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {ERC20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {ERC20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {ERC20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {ERC20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(uint256 amount) public returns (bool) {\n    _burn(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"ERC20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"ERC20: approve from the zero address\");\n    require(spender != address(0), \"ERC20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MyContract/HOM.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract/HOM.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract/HOM.sol\":{\"keccak256\":\"0xe04f6cecc5e2d51594bd84e3a0dfb070e0591e9a7e1c5df4a0d8d04a36e68119\",\"urls\":[\"bzz-raw://36d485870b488089a31375324aa91cb64689e897ac36b5cff60ef5daffe29a38\",\"dweb:/ipfs/Qmd5B9wdyNUK8D8kddVarwXbr7c6Zf7eMWka3hosJShVUi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"HOMToken": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {ERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {ERC20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {ERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ERC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ERC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {ERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {ERC20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {ERC20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract/HOM.sol\":11035:17551  contract HOMToken is Context, IERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyContract/HOM.sol\":11348:11578  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/MyContract/HOM.sol\":11348:11578  constructor() public {... */\n  pop\n    /* \"contracts/MyContract/HOM.sol\":9594:9611  address msgSender */\n  0x00\n    /* \"contracts/MyContract/HOM.sol\":9614:9626  _msgSender() */\n  tag_7\n    /* \"contracts/MyContract/HOM.sol\":9614:9624  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/MyContract/HOM.sol\":9614:9626  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/MyContract/HOM.sol\":9594:9626  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/MyContract/HOM.sol\":9641:9650  msgSender */\n  dup1\n    /* \"contracts/MyContract/HOM.sol\":9632:9638  _owner */\n  0x00\n  dup1\n    /* \"contracts/MyContract/HOM.sol\":9632:9650  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyContract/HOM.sol\":9694:9703  msgSender */\n  dup1\n    /* \"contracts/MyContract/HOM.sol\":9661:9704  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyContract/HOM.sol\":9690:9691  0 */\n  0x00\n    /* \"contracts/MyContract/HOM.sol\":9661:9704  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MyContract/HOM.sol\":9564:9709  constructor () internal {... */\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11375:11394  _name = \"HOM Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x484f4d20546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11375:11380  _name */\n  0x06\n    /* \"contracts/MyContract/HOM.sol\":11375:11394  _name = \"HOM Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11400:11415  _symbol = \"HOM\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x484f4d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11400:11407  _symbol */\n  0x05\n    /* \"contracts/MyContract/HOM.sol\":11400:11415  _symbol = \"HOM\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11433:11434  9 */\n  0x09\n    /* \"contracts/MyContract/HOM.sol\":11421:11430  _decimals */\n  0x04\n  0x00\n    /* \"contracts/MyContract/HOM.sol\":11421:11434  _decimals = 9 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11455:11473  100000000000000000 */\n  0x016345785d8a0000\n    /* \"contracts/MyContract/HOM.sol\":11440:11452  _totalSupply */\n  0x03\n    /* \"contracts/MyContract/HOM.sol\":11440:11473  _totalSupply = 100000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11503:11515  _totalSupply */\n  sload(0x03)\n    /* \"contracts/MyContract/HOM.sol\":11479:11488  _balances */\n  0x01\n    /* \"contracts/MyContract/HOM.sol\":11479:11500  _balances[msg.sender] */\n  0x00\n    /* \"contracts/MyContract/HOM.sol\":11489:11499  msg.sender */\n  caller\n    /* \"contracts/MyContract/HOM.sol\":11479:11500  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyContract/HOM.sol\":11479:11515  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyContract/HOM.sol\":11548:11558  msg.sender */\n  caller\n    /* \"contracts/MyContract/HOM.sol\":11527:11573  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyContract/HOM.sol\":11544:11545  0 */\n  0x00\n    /* \"contracts/MyContract/HOM.sol\":11527:11573  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/MyContract/HOM.sol\":11560:11572  _totalSupply */\n  sload(0x03)\n    /* \"contracts/MyContract/HOM.sol\":11527:11573  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MyContract/HOM.sol\":11035:17551  contract HOMToken is Context, IERC20, Ownable {... */\n  jump(tag_13)\n    /* \"contracts/MyContract/HOM.sol\":3662:3752  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/MyContract/HOM.sol\":3707:3722  address payable */\n  0x00\n    /* \"contracts/MyContract/HOM.sol\":3737:3747  msg.sender */\n  caller\n    /* \"contracts/MyContract/HOM.sol\":3730:3747  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/MyContract/HOM.sol\":3662:3752  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/MyContract/HOM.sol\":11035:17551  contract HOMToken is Context, IERC20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract/HOM.sol\":11035:17551  contract HOMToken is Context, IERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/MyContract/HOM.sol\":11035:17551  contract HOMToken is Context, IERC20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyContract/HOM.sol\":12022:12099  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_27:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MyContract/HOM.sol\":12022:12099  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_30:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":13017:13158  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"contracts/MyContract/HOM.sol\":13017:13158  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":12150:12235  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":13589:13877  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"contracts/MyContract/HOM.sol\":13589:13877  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":11764:11841  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":11273:11295  uint8 public _decimals */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":14245:14442  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"contracts/MyContract/HOM.sol\":14245:14442  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":15226:15333  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"contracts/MyContract/HOM.sol\":15226:15333  function burn(uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":12284:12388  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"contracts/MyContract/HOM.sol\":12284:12388  function balanceOf(address account) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":10360:10487  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/MyContract/HOM.sol\":11633:11710  function getOwner() external view returns (address) {... */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":9777:9848  function owner() public view returns (address) {... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":11893:11974  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_60:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_60)\n    tag_62:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MyContract/HOM.sol\":11893:11974  function symbol() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_63:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":14898:15146  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"contracts/MyContract/HOM.sol\":14898:15146  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":12572:12719  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_17:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"contracts/MyContract/HOM.sol\":12572:12719  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":11299:11320  string public _symbol */\n    tag_18:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_72:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_72)\n    tag_74:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MyContract/HOM.sol\":11299:11320  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_75\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_75:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":11324:11343  string public _name */\n    tag_19:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_78:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_78)\n    tag_80:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MyContract/HOM.sol\":11324:11343  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_81:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":12768:12896  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_20:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_83:\n        /* \"contracts/MyContract/HOM.sol\":12768:12896  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyContract/HOM.sol\":10626:10727  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n        /* \"contracts/MyContract/HOM.sol\":10626:10727  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/MyContract/HOM.sol\":12022:12099  function name() external view returns (string memory) {... */\n    tag_26:\n        /* \"contracts/MyContract/HOM.sol\":12061:12074  string memory */\n      0x60\n        /* \"contracts/MyContract/HOM.sol\":12089:12094  _name */\n      0x06\n        /* \"contracts/MyContract/HOM.sol\":12082:12094  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":12022:12099  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":13017:13158  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_33:\n        /* \"contracts/MyContract/HOM.sol\":13085:13089  bool */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":13097:13136  _approve(_msgSender(), spender, amount) */\n      tag_93\n        /* \"contracts/MyContract/HOM.sol\":13106:13118  _msgSender() */\n      tag_94\n        /* \"contracts/MyContract/HOM.sol\":13106:13116  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":13106:13118  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/MyContract/HOM.sol\":13120:13127  spender */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":13129:13135  amount */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":13097:13105  _approve */\n      tag_96\n        /* \"contracts/MyContract/HOM.sol\":13097:13136  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/MyContract/HOM.sol\":13149:13153  true */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":13142:13153  return true */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":13017:13158  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":12150:12235  function totalSupply() external view returns (uint256) {... */\n    tag_35:\n        /* \"contracts/MyContract/HOM.sol\":12196:12203  uint256 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12218:12230  _totalSupply */\n      sload(0x03)\n        /* \"contracts/MyContract/HOM.sol\":12211:12230  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":12150:12235  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":13589:13877  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_38:\n        /* \"contracts/MyContract/HOM.sol\":13680:13684  bool */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":13692:13728  _transfer(sender, recipient, amount) */\n      tag_99\n        /* \"contracts/MyContract/HOM.sol\":13702:13708  sender */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":13710:13719  recipient */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":13721:13727  amount */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":13692:13701  _transfer */\n      tag_100\n        /* \"contracts/MyContract/HOM.sol\":13692:13728  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/MyContract/HOM.sol\":13734:13855  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_101\n        /* \"contracts/MyContract/HOM.sol\":13743:13749  sender */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":13751:13763  _msgSender() */\n      tag_102\n        /* \"contracts/MyContract/HOM.sol\":13751:13761  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":13751:13763  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/MyContract/HOM.sol\":13765:13854  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_103\n        /* \"contracts/MyContract/HOM.sol\":13803:13809  amount */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":13765:13854  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/MyContract/HOM.sol\":13765:13776  _allowances */\n      0x02\n        /* \"contracts/MyContract/HOM.sol\":13765:13784  _allowances[sender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":13777:13783  sender */\n      dup12\n        /* \"contracts/MyContract/HOM.sol\":13765:13784  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":13765:13798  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":13785:13797  _msgSender() */\n      tag_104\n        /* \"contracts/MyContract/HOM.sol\":13785:13795  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":13785:13797  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/MyContract/HOM.sol\":13765:13798  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":13765:13802  _allowances[sender][_msgSender()].sub */\n      tag_105\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":13765:13854  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/MyContract/HOM.sol\":13734:13742  _approve */\n      tag_96\n        /* \"contracts/MyContract/HOM.sol\":13734:13855  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/MyContract/HOM.sol\":13868:13872  true */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":13861:13872  return true */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":13589:13877  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":11764:11841  function decimals() external view returns (uint8) {... */\n    tag_40:\n        /* \"contracts/MyContract/HOM.sol\":11807:11812  uint8 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":11827:11836  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyContract/HOM.sol\":11820:11836  return _decimals */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":11764:11841  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":11273:11295  uint8 public _decimals */\n    tag_42:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":14245:14442  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_45:\n        /* \"contracts/MyContract/HOM.sol\":14325:14329  bool */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":14337:14420  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_108\n        /* \"contracts/MyContract/HOM.sol\":14346:14358  _msgSender() */\n      tag_109\n        /* \"contracts/MyContract/HOM.sol\":14346:14356  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":14346:14358  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/MyContract/HOM.sol\":14360:14367  spender */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":14369:14419  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_110\n        /* \"contracts/MyContract/HOM.sol\":14408:14418  addedValue */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":14369:14380  _allowances */\n      0x02\n        /* \"contracts/MyContract/HOM.sol\":14369:14394  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":14381:14393  _msgSender() */\n      tag_111\n        /* \"contracts/MyContract/HOM.sol\":14381:14391  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":14381:14393  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/MyContract/HOM.sol\":14369:14394  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":14369:14403  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":14395:14402  spender */\n      dup10\n        /* \"contracts/MyContract/HOM.sol\":14369:14403  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":14369:14407  _allowances[_msgSender()][spender].add */\n      tag_112\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":14369:14419  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/MyContract/HOM.sol\":14337:14345  _approve */\n      tag_96\n        /* \"contracts/MyContract/HOM.sol\":14337:14420  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/MyContract/HOM.sol\":14433:14437  true */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":14426:14437  return true */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":14245:14442  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":15226:15333  function burn(uint256 amount) public returns (bool) {... */\n    tag_48:\n        /* \"contracts/MyContract/HOM.sol\":15272:15276  bool */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":15284:15311  _burn(_msgSender(), amount) */\n      tag_114\n        /* \"contracts/MyContract/HOM.sol\":15290:15302  _msgSender() */\n      tag_115\n        /* \"contracts/MyContract/HOM.sol\":15290:15300  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":15290:15302  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/MyContract/HOM.sol\":15304:15310  amount */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":15284:15289  _burn */\n      tag_116\n        /* \"contracts/MyContract/HOM.sol\":15284:15311  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/MyContract/HOM.sol\":15324:15328  true */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":15317:15328  return true */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":15226:15333  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":12284:12388  function balanceOf(address account) external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/MyContract/HOM.sol\":12343:12350  uint256 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12365:12374  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":12365:12383  _balances[account] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12375:12382  account */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":12365:12383  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":12358:12383  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":12284:12388  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":10360:10487  function renounceOwnership() public onlyOwner {... */\n    tag_53:\n        /* \"contracts/MyContract/HOM.sol\":9973:9985  _msgSender() */\n      tag_119\n        /* \"contracts/MyContract/HOM.sol\":9973:9983  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":9973:9985  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/MyContract/HOM.sol\":9963:9985  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":9963:9969  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":9963:9985  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyContract/HOM.sol\":9955:10022  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/MyContract/HOM.sol\":10454:10455  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":10417:10457  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":10438:10444  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":10417:10457  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyContract/HOM.sol\":10480:10481  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":10463:10469  _owner */\n      dup1\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":10463:10482  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":10360:10487  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":11633:11710  function getOwner() external view returns (address) {... */\n    tag_55:\n        /* \"contracts/MyContract/HOM.sol\":11676:11683  address */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":11698:11705  owner() */\n      tag_123\n        /* \"contracts/MyContract/HOM.sol\":11698:11703  owner */\n      tag_57\n        /* \"contracts/MyContract/HOM.sol\":11698:11705  owner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/MyContract/HOM.sol\":11691:11705  return owner() */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":11633:11710  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":9777:9848  function owner() public view returns (address) {... */\n    tag_57:\n        /* \"contracts/MyContract/HOM.sol\":9815:9822  address */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":9837:9843  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":9830:9843  return _owner */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":9777:9848  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":11893:11974  function symbol() external view returns (string memory) {... */\n    tag_59:\n        /* \"contracts/MyContract/HOM.sol\":11934:11947  string memory */\n      0x60\n        /* \"contracts/MyContract/HOM.sol\":11962:11969  _symbol */\n      0x05\n        /* \"contracts/MyContract/HOM.sol\":11955:11969  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":11893:11974  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":14898:15146  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_66:\n        /* \"contracts/MyContract/HOM.sol\":14983:14987  bool */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":14995:15124  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_130\n        /* \"contracts/MyContract/HOM.sol\":15004:15016  _msgSender() */\n      tag_131\n        /* \"contracts/MyContract/HOM.sol\":15004:15014  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":15004:15016  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/MyContract/HOM.sol\":15018:15025  spender */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":15027:15123  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_132\n        /* \"contracts/MyContract/HOM.sol\":15066:15081  subtractedValue */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":15027:15123  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/MyContract/HOM.sol\":15027:15038  _allowances */\n      0x02\n        /* \"contracts/MyContract/HOM.sol\":15027:15052  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":15039:15051  _msgSender() */\n      tag_133\n        /* \"contracts/MyContract/HOM.sol\":15039:15049  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":15039:15051  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/MyContract/HOM.sol\":15027:15052  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":15027:15061  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":15053:15060  spender */\n      dup11\n        /* \"contracts/MyContract/HOM.sol\":15027:15061  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":15027:15065  _allowances[_msgSender()][spender].sub */\n      tag_105\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":15027:15123  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/MyContract/HOM.sol\":14995:15003  _approve */\n      tag_96\n        /* \"contracts/MyContract/HOM.sol\":14995:15124  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/MyContract/HOM.sol\":15137:15141  true */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":15130:15141  return true */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":14898:15146  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":12572:12719  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_69:\n        /* \"contracts/MyContract/HOM.sol\":12643:12647  bool */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12655:12697  _transfer(_msgSender(), recipient, amount) */\n      tag_135\n        /* \"contracts/MyContract/HOM.sol\":12665:12677  _msgSender() */\n      tag_136\n        /* \"contracts/MyContract/HOM.sol\":12665:12675  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":12665:12677  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/MyContract/HOM.sol\":12679:12688  recipient */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":12690:12696  amount */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":12655:12664  _transfer */\n      tag_100\n        /* \"contracts/MyContract/HOM.sol\":12655:12697  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/MyContract/HOM.sol\":12710:12714  true */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":12703:12714  return true */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":12572:12719  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":11299:11320  string public _symbol */\n    tag_71:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_138\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_137)\n    tag_138:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_139:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_139\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":11324:11343  string public _name */\n    tag_77:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":12768:12896  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_84:\n        /* \"contracts/MyContract/HOM.sol\":12842:12849  uint256 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12864:12875  _allowances */\n      0x02\n        /* \"contracts/MyContract/HOM.sol\":12864:12882  _allowances[owner] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12876:12881  owner */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":12864:12882  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":12864:12891  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":12883:12890  spender */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":12864:12891  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":12857:12891  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":12768:12896  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":10626:10727  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_87:\n        /* \"contracts/MyContract/HOM.sol\":9973:9985  _msgSender() */\n      tag_145\n        /* \"contracts/MyContract/HOM.sol\":9973:9983  _msgSender */\n      tag_95\n        /* \"contracts/MyContract/HOM.sol\":9973:9985  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/MyContract/HOM.sol\":9963:9985  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":9963:9969  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":9963:9985  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyContract/HOM.sol\":9955:10022  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/MyContract/HOM.sol\":10694:10722  _transferOwnership(newOwner) */\n      tag_148\n        /* \"contracts/MyContract/HOM.sol\":10713:10721  newOwner */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":10694:10712  _transferOwnership */\n      tag_149\n        /* \"contracts/MyContract/HOM.sol\":10694:10722  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/MyContract/HOM.sol\":10626:10727  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":3662:3752  function _msgSender() internal view returns (address payable) {... */\n    tag_95:\n        /* \"contracts/MyContract/HOM.sol\":3707:3722  address payable */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":3737:3747  msg.sender */\n      caller\n        /* \"contracts/MyContract/HOM.sol\":3730:3747  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":3662:3752  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":17235:17549  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_96:\n        /* \"contracts/MyContract/HOM.sol\":17341:17342  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":17324:17343  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":17324:17329  owner */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":17324:17343  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":17316:17384  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/MyContract/HOM.sol\":17417:17418  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":17398:17419  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":17398:17405  spender */\n      dup3\n        /* \"contracts/MyContract/HOM.sol\":17398:17419  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":17390:17458  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/MyContract/HOM.sol\":17495:17501  amount */\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":17465:17476  _allowances */\n      0x02\n        /* \"contracts/MyContract/HOM.sol\":17465:17483  _allowances[owner] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":17477:17482  owner */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":17465:17483  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":17465:17492  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":17484:17491  spender */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":17465:17492  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":17465:17501  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":17528:17535  spender */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":17512:17544  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":17521:17526  owner */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":17512:17544  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/MyContract/HOM.sol\":17537:17543  amount */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":17512:17544  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyContract/HOM.sol\":17235:17549  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":15777:16219  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_100:\n        /* \"contracts/MyContract/HOM.sol\":15888:15889  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":15870:15890  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":15870:15876  sender */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":15870:15890  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":15862:15932  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/MyContract/HOM.sol\":15967:15968  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":15946:15969  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":15946:15955  recipient */\n      dup3\n        /* \"contracts/MyContract/HOM.sol\":15946:15969  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":15938:16009  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/MyContract/HOM.sol\":16036:16107  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_157\n        /* \"contracts/MyContract/HOM.sol\":16058:16064  amount */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":16036:16107  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/MyContract/HOM.sol\":16036:16045  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":16036:16053  _balances[sender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16046:16052  sender */\n      dup8\n        /* \"contracts/MyContract/HOM.sol\":16036:16053  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":16036:16057  _balances[sender].sub */\n      tag_105\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":16036:16107  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"contracts/MyContract/HOM.sol\":16016:16025  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":16016:16033  _balances[sender] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16026:16032  sender */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":16016:16033  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":16016:16107  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":16136:16168  _balances[recipient].add(amount) */\n      tag_158\n        /* \"contracts/MyContract/HOM.sol\":16161:16167  amount */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":16136:16145  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":16136:16156  _balances[recipient] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16146:16155  recipient */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":16136:16156  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":16136:16160  _balances[recipient].add */\n      tag_112\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":16136:16168  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"contracts/MyContract/HOM.sol\":16113:16122  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":16113:16133  _balances[recipient] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16123:16132  recipient */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":16113:16133  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":16113:16168  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":16196:16205  recipient */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":16179:16214  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":16188:16194  sender */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":16179:16214  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/MyContract/HOM.sol\":16207:16213  amount */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":16179:16214  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyContract/HOM.sol\":15777:16219  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":5559:5732  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_105:\n        /* \"contracts/MyContract/HOM.sol\":5645:5652  uint256 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":5673:5674  a */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":5668:5669  b */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":5668:5674  b <= a */\n      gt\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":5676:5688  errorMessage */\n      dup3\n        /* \"contracts/MyContract/HOM.sol\":5660:5689  require(b <= a, errorMessage) */\n      swap1\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_161:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_161)\n    tag_163:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MyContract/HOM.sol\":5660:5689  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_164:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n      pop\n        /* \"contracts/MyContract/HOM.sol\":5695:5704  uint256 c */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":5711:5712  b */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":5707:5708  a */\n      dup6\n        /* \"contracts/MyContract/HOM.sol\":5707:5712  a - b */\n      sub\n        /* \"contracts/MyContract/HOM.sol\":5695:5712  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":5726:5727  c */\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":5719:5727  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyContract/HOM.sol\":5559:5732  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":4761:4923  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_112:\n        /* \"contracts/MyContract/HOM.sol\":4819:4826  uint256 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":4834:4843  uint256 c */\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":4850:4851  b */\n      dup3\n        /* \"contracts/MyContract/HOM.sol\":4846:4847  a */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":4846:4851  a + b */\n      add\n        /* \"contracts/MyContract/HOM.sol\":4834:4851  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":4870:4871  a */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":4865:4866  c */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":4865:4871  c >= a */\n      lt\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":4857:4903  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/MyContract/HOM.sol\":4917:4918  c */\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":4910:4918  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyContract/HOM.sol\":4761:4923  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":16514:16838  function _burn(address account, uint256 amount) internal {... */\n    tag_116:\n        /* \"contracts/MyContract/HOM.sol\":16604:16605  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16585:16606  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":16585:16592  account */\n      dup3\n        /* \"contracts/MyContract/HOM.sol\":16585:16606  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":16577:16644  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"contracts/MyContract/HOM.sol\":16672:16740  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_169\n        /* \"contracts/MyContract/HOM.sol\":16695:16701  amount */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":16672:16740  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/MyContract/HOM.sol\":16672:16681  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":16672:16690  _balances[account] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16682:16689  account */\n      dup7\n        /* \"contracts/MyContract/HOM.sol\":16672:16690  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyContract/HOM.sol\":16672:16694  _balances[account].sub */\n      tag_105\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":16672:16740  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/MyContract/HOM.sol\":16651:16660  _balances */\n      0x01\n        /* \"contracts/MyContract/HOM.sol\":16651:16669  _balances[account] */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16661:16668  account */\n      dup5\n        /* \"contracts/MyContract/HOM.sol\":16651:16669  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyContract/HOM.sol\":16651:16740  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":16761:16785  _totalSupply.sub(amount) */\n      tag_170\n        /* \"contracts/MyContract/HOM.sol\":16778:16784  amount */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":16761:16773  _totalSupply */\n      sload(0x03)\n        /* \"contracts/MyContract/HOM.sol\":16761:16777  _totalSupply.sub */\n      tag_171\n      swap1\n        /* \"contracts/MyContract/HOM.sol\":16761:16785  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/MyContract/HOM.sol\":16746:16758  _totalSupply */\n      0x03\n        /* \"contracts/MyContract/HOM.sol\":16746:16785  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":16822:16823  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":16796:16833  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":16805:16812  account */\n      dup3\n        /* \"contracts/MyContract/HOM.sol\":16796:16833  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/MyContract/HOM.sol\":16826:16832  amount */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":16796:16833  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyContract/HOM.sol\":16514:16838  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":10820:11031  function _transferOwnership(address newOwner) internal {... */\n    tag_149:\n        /* \"contracts/MyContract/HOM.sol\":10909:10910  0 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":10889:10911  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":10889:10897  newOwner */\n      dup2\n        /* \"contracts/MyContract/HOM.sol\":10889:10911  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyContract/HOM.sol\":10881:10954  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/MyContract/HOM.sol\":10994:11002  newOwner */\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":10965:11003  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":10986:10992  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyContract/HOM.sol\":10965:11003  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyContract/HOM.sol\":11018:11026  newOwner */\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":11009:11015  _owner */\n      0x00\n      dup1\n        /* \"contracts/MyContract/HOM.sol\":11009:11026  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":10820:11031  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyContract/HOM.sol\":5167:5295  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"contracts/MyContract/HOM.sol\":5225:5232  uint256 */\n      0x00\n        /* \"contracts/MyContract/HOM.sol\":5247:5290  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_175\n        /* \"contracts/MyContract/HOM.sol\":5251:5252  a */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":5254:5255  b */\n      dup4\n        /* \"contracts/MyContract/HOM.sol\":5247:5290  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyContract/HOM.sol\":5247:5250  sub */\n      tag_105\n        /* \"contracts/MyContract/HOM.sol\":5247:5290  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_175:\n        /* \"contracts/MyContract/HOM.sol\":5240:5290  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/MyContract/HOM.sol\":5167:5295  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa265627a7a723158203f34d3ab730f451b3e24ada2ace00970f799f816d7c364b6182523a2ee8a746664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200023d60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600981526020017f484f4d20546f6b656e0000000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000245565b506040518060400160405280600381526020017f484f4d0000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000245565b506009600460006101000a81548160ff021916908360ff16021790555067016345785d8a0000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f4565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028857805160ff1916838001178555620002b9565b82800160010185558215620002b9579182015b82811115620002b85782518255916020019190600101906200029b565b5b509050620002c89190620002cc565b5090565b620002f191905b80821115620002ed576000816000905550600101620002d3565b5090565b90565b611b6080620003046000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610586578063b09f1266146105ec578063d28d88521461066f578063dd62ed3e146106f2578063f2fde38b1461076a57610121565b8063715018a6146103ff578063893d20e8146104095780638da5cb5b1461045357806395d89b411461049d578063a457c2d71461052057610121565b8063313ce567116100f4578063313ce567146102b357806332424aa3146102d757806339509351146102fb57806342966c681461036157806370a08231146103a757610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020f57806323b872dd1461022d575b600080fd5b61012e6107ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610850565b604051808215151515815260200191505060405180910390f35b61021761086e565b6040518082815260200191505060405180910390f35b6102996004803603606081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610878565b604051808215151515815260200191505060405180910390f35b6102bb610951565b604051808260ff1660ff16815260200191505060405180910390f35b6102df610968565b604051808260ff1660ff16815260200191505060405180910390f35b6103476004803603604081101561031157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097b565b604051808215151515815260200191505060405180910390f35b61038d6004803603602081101561037757600080fd5b8101908080359060200190929190505050610a2e565b604051808215151515815260200191505060405180910390f35b6103e9600480360360208110156103bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4a565b6040518082815260200191505060405180910390f35b610407610a93565b005b610411610c1b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61045b610c2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a5610c53565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104e55780820151818401526020810190506104ca565b50505050905090810190601f1680156105125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf5565b604051808215151515815260200191505060405180910390f35b6105d26004803603604081101561059c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dc2565b604051808215151515815260200191505060405180910390f35b6105f4610de0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610634578082015181840152602081019050610619565b50505050905090810190601f1680156106615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610677610e7e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b757808201518184015260208101905061069c565b50505050905090810190601f1680156106e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107546004803603604081101561070857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1c565b6040518082815260200191505060405180910390f35b6107ac6004803603602081101561078057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa3565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b5050505050905090565b600061086461085d611078565b8484611080565b6001905092915050565b6000600354905090565b6000610885848484611277565b61094684610891611078565b61094185604051806060016040528060288152602001611a7560289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108f7611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a24610988611078565b84610a1f8560026000610999611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b611080565b6001905092915050565b6000610a41610a3b611078565b83611679565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a9b611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c25610c2a565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905090565b6000610db8610d02611078565b84610db385604051806060016040528060258152602001611b076025913960026000610d2c611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b6001905092915050565b6000610dd6610dcf611078565b8484611277565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f145780601f10610ee957610100808354040283529160200191610f14565b820191906000526020600020905b815481529060010190602001808311610ef757829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610fab611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61107581611833565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611106576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae36024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a2d6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611abe6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611383576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119c26023913960400191505060405180910390fd5b6113ef81604051806060016040528060268152602001611a4f60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061148481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115a3578082015181840152602081019050611588565b50505050905090810190601f1680156115d05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a9d6021913960400191505060405180910390fd5b61176b816040518060600160405280602281526020016119e560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117c38160035461197790919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611a076026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006119b983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611531565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203f34d3ab730f451b3e24ada2ace00970f799f816d7c364b6182523a2ee8a746664736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x23D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x484F4D20546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x245 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x484F4D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x245 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH8 0x16345785D8A0000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x288 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2C8 SWAP2 SWAP1 PUSH3 0x2CC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2ED JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1B60 DUP1 PUSH3 0x304 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x76A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x520 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A7 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xA93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x411 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x512 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x634 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x619 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x661 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x677 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6E4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x754 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFA3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x846 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x846 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x829 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x864 PUSH2 0x85D PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP5 DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x946 DUP5 PUSH2 0x891 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x941 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A75 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x8F7 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA24 PUSH2 0x988 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xA1F DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x999 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 PUSH2 0xA3B PUSH2 0x1078 JUMP JUMPDEST DUP4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC25 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB8 PUSH2 0xD02 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xDB3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B07 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xD2C PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD6 PUSH2 0xDCF PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFAB PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x1833 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A2D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ABE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19C2 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13EF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A4F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1484 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1588 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A9D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x17C3 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1977 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A07 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x2066726F6D20746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x723158203F34D3AB730F451B3E24ADA2ACE00970F799F816D7C364 0xB6 XOR 0x25 0x23 LOG2 0xEE DUP11 PUSH21 0x6664736F6C63430005100032000000000000000000 ",
							"sourceMap": "11035:6516:0:-;;;11348:230;8:9:-1;5:2;;;30:1;27;20:12;5:2;11348:230:0;9594:17;9614:12;:10;;;:12;;:::i;:::-;9594:32;;9641:9;9632:6;;:18;;;;;;;;;;;;;;;;;;9694:9;9661:43;;9690:1;9661:43;;;;;;;;;;;;9564:145;11375:19;;;;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;:::i;:::-;;11400:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;11433:1;11421:9;;:13;;;;;;;;;;;;;;;;;;11455:18;11440:12;:33;;;;11503:12;;11479:9;:21;11489:10;11479:21;;;;;;;;;;;;;;;:36;;;;11548:10;11527:46;;11544:1;11527:46;;;11560:12;;11527:46;;;;;;;;;;;;;;;;;;11035:6516;;3662:90;3707:15;3737:10;3730:17;;3662:90;:::o;11035:6516::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610586578063b09f1266146105ec578063d28d88521461066f578063dd62ed3e146106f2578063f2fde38b1461076a57610121565b8063715018a6146103ff578063893d20e8146104095780638da5cb5b1461045357806395d89b411461049d578063a457c2d71461052057610121565b8063313ce567116100f4578063313ce567146102b357806332424aa3146102d757806339509351146102fb57806342966c681461036157806370a08231146103a757610121565b806306fdde0314610126578063095ea7b3146101a957806318160ddd1461020f57806323b872dd1461022d575b600080fd5b61012e6107ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016e578082015181840152602081019050610153565b50505050905090810190601f16801561019b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360408110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610850565b604051808215151515815260200191505060405180910390f35b61021761086e565b6040518082815260200191505060405180910390f35b6102996004803603606081101561024357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610878565b604051808215151515815260200191505060405180910390f35b6102bb610951565b604051808260ff1660ff16815260200191505060405180910390f35b6102df610968565b604051808260ff1660ff16815260200191505060405180910390f35b6103476004803603604081101561031157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061097b565b604051808215151515815260200191505060405180910390f35b61038d6004803603602081101561037757600080fd5b8101908080359060200190929190505050610a2e565b604051808215151515815260200191505060405180910390f35b6103e9600480360360208110156103bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4a565b6040518082815260200191505060405180910390f35b610407610a93565b005b610411610c1b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61045b610c2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a5610c53565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104e55780820151818401526020810190506104ca565b50505050905090810190601f1680156105125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61056c6004803603604081101561053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf5565b604051808215151515815260200191505060405180910390f35b6105d26004803603604081101561059c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dc2565b604051808215151515815260200191505060405180910390f35b6105f4610de0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610634578082015181840152602081019050610619565b50505050905090810190601f1680156106615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610677610e7e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106b757808201518184015260208101905061069c565b50505050905090810190601f1680156106e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107546004803603604081101561070857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1c565b6040518082815260200191505060405180910390f35b6107ac6004803603602081101561078057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa3565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b5050505050905090565b600061086461085d611078565b8484611080565b6001905092915050565b6000600354905090565b6000610885848484611277565b61094684610891611078565b61094185604051806060016040528060288152602001611a7560289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108f7611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a24610988611078565b84610a1f8560026000610999611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b611080565b6001905092915050565b6000610a41610a3b611078565b83611679565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a9b611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c25610c2a565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ceb5780601f10610cc057610100808354040283529160200191610ceb565b820191906000526020600020905b815481529060010190602001808311610cce57829003601f168201915b5050505050905090565b6000610db8610d02611078565b84610db385604051806060016040528060258152602001611b076025913960026000610d2c611078565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b611080565b6001905092915050565b6000610dd6610dcf611078565b8484611277565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f145780601f10610ee957610100808354040283529160200191610f14565b820191906000526020600020905b815481529060010190602001808311610ef757829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610fab611078565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461106c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61107581611833565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611106576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611ae36024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611a2d6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611abe6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611383576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806119c26023913960400191505060405180910390fd5b6113ef81604051806060016040528060268152602001611a4f60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061148481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115a3578082015181840152602081019050611588565b50505050905090810190601f1680156115d05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611a9d6021913960400191505060405180910390fd5b61176b816040518060600160405280602281526020016119e560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115319092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117c38160035461197790919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611a076026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006119b983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611531565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203f34d3ab730f451b3e24ada2ace00970f799f816d7c364b6182523a2ee8a746664736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x76A JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x520 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A7 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x153 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH2 0xA93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x411 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A5 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x512 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x634 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x619 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x661 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x677 PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x69C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6E4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x754 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFA3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x846 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x81B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x846 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x829 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x864 PUSH2 0x85D PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x885 DUP5 DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x946 DUP5 PUSH2 0x891 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x941 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A75 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x8F7 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA24 PUSH2 0x988 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xA1F DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x999 PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA41 PUSH2 0xA3B PUSH2 0x1078 JUMP JUMPDEST DUP4 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9B PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC25 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xCEB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCCE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB8 PUSH2 0xD02 PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0xDB3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B07 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xD2C PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD6 PUSH2 0xDCF PUSH2 0x1078 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE4B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xF14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFAB PUSH2 0x1078 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP2 PUSH2 0x1833 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE3 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A2D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ABE PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19C2 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13EF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A4F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1484 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15F1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1588 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A9D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19E5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1531 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x17C3 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1977 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A07 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B9 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1531 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x2066726F6D20746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x723158203F34D3AB730F451B3E24ADA2ACE00970F799F816D7C364 0xB6 XOR 0x25 0x23 LOG2 0xEE DUP11 PUSH21 0x6664736F6C63430005100032000000000000000000 ",
							"sourceMap": "11035:6516:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11035:6516:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12022:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12022:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13017:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13017:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12150:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13589:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13589:288:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11764:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11273:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14245:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14245:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15226:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15226:107:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12284:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12284:104:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10360:127;;;:::i;:::-;;11633:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9777:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11893:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11893:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14898:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14898:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12572:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12572:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11299:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11299:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11324:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11324:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12768:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12768:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10626:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10626:101:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12022:77;12061:13;12089:5;12082:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12022:77;:::o;13017:141::-;13085:4;13097:39;13106:12;:10;:12::i;:::-;13120:7;13129:6;13097:8;:39::i;:::-;13149:4;13142:11;;13017:141;;;;:::o;12150:85::-;12196:7;12218:12;;12211:19;;12150:85;:::o;13589:288::-;13680:4;13692:36;13702:6;13710:9;13721:6;13692:9;:36::i;:::-;13734:121;13743:6;13751:12;:10;:12::i;:::-;13765:89;13803:6;13765:89;;;;;;;;;;;;;;;;;:11;:19;13777:6;13765:19;;;;;;;;;;;;;;;:33;13785:12;:10;:12::i;:::-;13765:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;13734:8;:121::i;:::-;13868:4;13861:11;;13589:288;;;;;:::o;11764:77::-;11807:5;11827:9;;;;;;;;;;;11820:16;;11764:77;:::o;11273:22::-;;;;;;;;;;;;;:::o;14245:197::-;14325:4;14337:83;14346:12;:10;:12::i;:::-;14360:7;14369:50;14408:10;14369:11;:25;14381:12;:10;:12::i;:::-;14369:25;;;;;;;;;;;;;;;:34;14395:7;14369:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14337:8;:83::i;:::-;14433:4;14426:11;;14245:197;;;;:::o;15226:107::-;15272:4;15284:27;15290:12;:10;:12::i;:::-;15304:6;15284:5;:27::i;:::-;15324:4;15317:11;;15226:107;;;:::o;12284:104::-;12343:7;12365:9;:18;12375:7;12365:18;;;;;;;;;;;;;;;;12358:25;;12284:104;;;:::o;10360:127::-;9973:12;:10;:12::i;:::-;9963:22;;:6;;;;;;;;;;;:22;;;9955:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10454:1;10417:40;;10438:6;;;;;;;;;;;10417:40;;;;;;;;;;;;10480:1;10463:6;;:19;;;;;;;;;;;;;;;;;;10360:127::o;11633:77::-;11676:7;11698;:5;:7::i;:::-;11691:14;;11633:77;:::o;9777:71::-;9815:7;9837:6;;;;;;;;;;;9830:13;;9777:71;:::o;11893:81::-;11934:13;11962:7;11955:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11893:81;:::o;14898:248::-;14983:4;14995:129;15004:12;:10;:12::i;:::-;15018:7;15027:96;15066:15;15027:96;;;;;;;;;;;;;;;;;:11;:25;15039:12;:10;:12::i;:::-;15027:25;;;;;;;;;;;;;;;:34;15053:7;15027:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;14995:8;:129::i;:::-;15137:4;15130:11;;14898:248;;;;:::o;12572:147::-;12643:4;12655:42;12665:12;:10;:12::i;:::-;12679:9;12690:6;12655:9;:42::i;:::-;12710:4;12703:11;;12572:147;;;;:::o;11299:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11324:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12768:128::-;12842:7;12864:11;:18;12876:5;12864:18;;;;;;;;;;;;;;;:27;12883:7;12864:27;;;;;;;;;;;;;;;;12857:34;;12768:128;;;;:::o;10626:101::-;9973:12;:10;:12::i;:::-;9963:22;;:6;;;;;;;;;;;:22;;;9955:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10694:28;10713:8;10694:18;:28::i;:::-;10626:101;:::o;3662:90::-;3707:15;3737:10;3730:17;;3662:90;:::o;17235:314::-;17341:1;17324:19;;:5;:19;;;;17316:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17417:1;17398:21;;:7;:21;;;;17390:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17495:6;17465:11;:18;17477:5;17465:18;;;;;;;;;;;;;;;:27;17484:7;17465:27;;;;;;;;;;;;;;;:36;;;;17528:7;17512:32;;17521:5;17512:32;;;17537:6;17512:32;;;;;;;;;;;;;;;;;;17235:314;;;:::o;15777:442::-;15888:1;15870:20;;:6;:20;;;;15862:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15967:1;15946:23;;:9;:23;;;;15938:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16036;16058:6;16036:71;;;;;;;;;;;;;;;;;:9;:17;16046:6;16036:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16016:9;:17;16026:6;16016:17;;;;;;;;;;;;;;;:91;;;;16136:32;16161:6;16136:9;:20;16146:9;16136:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16113:9;:20;16123:9;16113:20;;;;;;;;;;;;;;;:55;;;;16196:9;16179:35;;16188:6;16179:35;;;16207:6;16179:35;;;;;;;;;;;;;;;;;;15777:442;;;:::o;5559:173::-;5645:7;5673:1;5668;:6;;5676:12;5660:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5660:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5695:9;5711:1;5707;:5;5695:17;;5726:1;5719:8;;;5559:173;;;;;:::o;4761:162::-;4819:7;4834:9;4850:1;4846;:5;4834:17;;4870:1;4865;:6;;4857:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4917:1;4910:8;;;4761:162;;;;:::o;16514:324::-;16604:1;16585:21;;:7;:21;;;;16577:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16672:68;16695:6;16672:68;;;;;;;;;;;;;;;;;:9;:18;16682:7;16672:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;16651:9;:18;16661:7;16651:18;;;;;;;;;;;;;;;:89;;;;16761:24;16778:6;16761:12;;:16;;:24;;;;:::i;:::-;16746:12;:39;;;;16822:1;16796:37;;16805:7;16796:37;;;16826:6;16796:37;;;;;;;;;;;;;;;;;;16514:324;;:::o;10820:211::-;10909:1;10889:22;;:8;:22;;;;10881:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10994:8;10965:38;;10986:6;;;;;;;;;;;10965:38;;;;;;;;;;;;11018:8;11009:6;;:17;;;;;;;;;;;;;;;;;;10820:211;:::o;5167:128::-;5225:7;5247:43;5251:1;5254;5247:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5240:50;;5167:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1401600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1098",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1307",
								"burn(uint256)": "infinite",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1141",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1128",
								"renounceOwnership()": "24320",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "MSTORE"
								},
								{
									"begin": 11348,
									"end": 11578,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11348,
									"end": 11578,
									"name": "POP"
								},
								{
									"begin": 9594,
									"end": 9611,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9614,
									"end": 9626,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9614,
									"end": 9624,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9614,
									"end": 9624,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9614,
									"end": 9624,
									"name": "SHL"
								},
								{
									"begin": 9614,
									"end": 9626,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9614,
									"end": 9626,
									"name": "SHR"
								},
								{
									"begin": 9614,
									"end": 9626,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9614,
									"end": 9626,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9614,
									"end": 9626,
									"name": "JUMPDEST"
								},
								{
									"begin": 9594,
									"end": 9626,
									"name": "SWAP1"
								},
								{
									"begin": 9594,
									"end": 9626,
									"name": "POP"
								},
								{
									"begin": 9641,
									"end": 9650,
									"name": "DUP1"
								},
								{
									"begin": 9632,
									"end": 9638,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9632,
									"end": 9638,
									"name": "DUP1"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "EXP"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "DUP2"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "SLOAD"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "DUP2"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "MUL"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "NOT"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "AND"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "SWAP1"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "DUP4"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "AND"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "MUL"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "OR"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "SWAP1"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "SSTORE"
								},
								{
									"begin": 9632,
									"end": 9650,
									"name": "POP"
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "DUP1"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "AND"
								},
								{
									"begin": 9690,
									"end": 9691,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "AND"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "MLOAD"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "MLOAD"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "DUP1"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "SWAP2"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "SUB"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "SWAP1"
								},
								{
									"begin": 9661,
									"end": 9704,
									"name": "LOG3"
								},
								{
									"begin": 9564,
									"end": 9709,
									"name": "POP"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "MLOAD"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "DUP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "ADD"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "MSTORE"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "DUP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "DUP2"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "MSTORE"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "ADD"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "484F4D20546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "DUP2"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "MSTORE"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "POP"
								},
								{
									"begin": 11375,
									"end": 11380,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "SWAP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "DUP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "MLOAD"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "SWAP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "ADD"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "SWAP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "SWAP3"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "SWAP2"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "SWAP1"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "JUMPDEST"
								},
								{
									"begin": 11375,
									"end": 11394,
									"name": "POP"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "MLOAD"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "DUP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "ADD"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "MSTORE"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "DUP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "DUP2"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "MSTORE"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "ADD"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "484F4D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "DUP2"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "MSTORE"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "POP"
								},
								{
									"begin": 11400,
									"end": 11407,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "SWAP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "DUP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "MLOAD"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "SWAP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "ADD"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "SWAP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "SWAP3"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "SWAP2"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "SWAP1"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "JUMPDEST"
								},
								{
									"begin": 11400,
									"end": 11415,
									"name": "POP"
								},
								{
									"begin": 11433,
									"end": 11434,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 11421,
									"end": 11430,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11421,
									"end": 11430,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "EXP"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "DUP2"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "SLOAD"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "DUP2"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "MUL"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "NOT"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "AND"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "SWAP1"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "DUP4"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "AND"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "MUL"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "OR"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "SWAP1"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "SSTORE"
								},
								{
									"begin": 11421,
									"end": 11434,
									"name": "POP"
								},
								{
									"begin": 11455,
									"end": 11473,
									"name": "PUSH",
									"value": "16345785D8A0000"
								},
								{
									"begin": 11440,
									"end": 11452,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11440,
									"end": 11473,
									"name": "DUP2"
								},
								{
									"begin": 11440,
									"end": 11473,
									"name": "SWAP1"
								},
								{
									"begin": 11440,
									"end": 11473,
									"name": "SSTORE"
								},
								{
									"begin": 11440,
									"end": 11473,
									"name": "POP"
								},
								{
									"begin": 11503,
									"end": 11515,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11503,
									"end": 11515,
									"name": "SLOAD"
								},
								{
									"begin": 11479,
									"end": 11488,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11489,
									"end": 11499,
									"name": "CALLER"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "AND"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "AND"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "DUP2"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "MSTORE"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "ADD"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "SWAP1"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "DUP2"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "MSTORE"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "ADD"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11479,
									"end": 11500,
									"name": "KECCAK256"
								},
								{
									"begin": 11479,
									"end": 11515,
									"name": "DUP2"
								},
								{
									"begin": 11479,
									"end": 11515,
									"name": "SWAP1"
								},
								{
									"begin": 11479,
									"end": 11515,
									"name": "SSTORE"
								},
								{
									"begin": 11479,
									"end": 11515,
									"name": "POP"
								},
								{
									"begin": 11548,
									"end": 11558,
									"name": "CALLER"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "AND"
								},
								{
									"begin": 11544,
									"end": 11545,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "AND"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11560,
									"end": 11572,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11560,
									"end": 11572,
									"name": "SLOAD"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "MLOAD"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "DUP1"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "DUP3"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "DUP2"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "MSTORE"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "ADD"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "SWAP2"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "POP"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "POP"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "MLOAD"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "DUP1"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "SWAP2"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "SUB"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "SWAP1"
								},
								{
									"begin": 11527,
									"end": 11573,
									"name": "LOG3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP"
								},
								{
									"begin": 3662,
									"end": 3752,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3662,
									"end": 3752,
									"name": "JUMPDEST"
								},
								{
									"begin": 3707,
									"end": 3722,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3737,
									"end": 3747,
									"name": "CALLER"
								},
								{
									"begin": 3730,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 3730,
									"end": 3747,
									"name": "POP"
								},
								{
									"begin": 3662,
									"end": 3752,
									"name": "SWAP1"
								},
								{
									"begin": 3662,
									"end": 3752,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SLOAD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "AND"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ISZERO"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "MUL"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SUB"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "AND"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DIV"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "MSTORE"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "KECCAK256"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DIV"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "LT"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPI"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "MLOAD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "NOT"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "AND"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP4"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "OR"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP6"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SSTORE"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP6"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SSTORE"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ISZERO"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPI"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "GT"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ISZERO"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPI"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "MLOAD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SSTORE"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "POP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "POP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "POP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP3"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "GT"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ISZERO"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPI"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP2"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SSTORE"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "POP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "ADD"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "POP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "SWAP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "JUMPDEST"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "DUP1"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "CODECOPY"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11035,
									"end": 17551,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203f34d3ab730f451b3e24ada2ace00970f799f816d7c364b6182523a2ee8a746664736f6c63430005100032",
									".code": [
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "MSTORE"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "POP"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "LT"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "SHR"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "GT"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "GT"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMP"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPDEST"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMP"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPDEST"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "GT"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMP"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPDEST"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "EQ"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPI"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "JUMPDEST"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "DUP1"
										},
										{
											"begin": 11035,
											"end": 17551,
											"name": "REVERT"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMPDEST"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMPDEST"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MLOAD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "ADD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP3"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SUB"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP3"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MSTORE"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP4"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MLOAD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MSTORE"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "ADD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MLOAD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "ADD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP4"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "ADD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "AND"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "ISZERO"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMPI"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP3"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SUB"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MLOAD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP4"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SUB"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "EXP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SUB"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "NOT"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "AND"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MSTORE"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "ADD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMPDEST"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP3"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "MLOAD"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "DUP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP2"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SUB"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "RETURN"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "AND"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP3"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP3"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP3"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ISZERO"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ISZERO"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ISZERO"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ISZERO"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "MSTORE"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "ADD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "MLOAD"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "DUP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SUB"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP1"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "RETURN"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "JUMPDEST"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "JUMPDEST"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "MLOAD"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "DUP1"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "DUP3"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "DUP2"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "MSTORE"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "ADD"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "SWAP2"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "POP"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "POP"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "MLOAD"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "DUP1"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "SWAP2"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "SUB"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "SWAP1"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "RETURN"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "JUMPDEST"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ADD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "AND"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ADD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP3"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "AND"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ADD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP3"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ADD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP3"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "JUMPDEST"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "MLOAD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP3"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ISZERO"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ISZERO"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ISZERO"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ISZERO"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "MSTORE"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "ADD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "MLOAD"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SUB"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "RETURN"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "JUMPDEST"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "JUMPDEST"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "MLOAD"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "DUP1"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "DUP3"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "AND"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "AND"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "DUP2"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "MSTORE"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "ADD"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "SWAP2"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "POP"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "POP"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "MLOAD"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "DUP1"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "SWAP2"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "SUB"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "SWAP1"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "RETURN"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "MLOAD"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DUP3"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "AND"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "AND"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DUP2"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "MSTORE"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "ADD"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SWAP2"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "MLOAD"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SWAP2"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SUB"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "RETURN"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "JUMPDEST"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ADD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "AND"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ADD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP3"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ADD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP3"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "JUMPDEST"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "MLOAD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP3"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ISZERO"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ISZERO"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ISZERO"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ISZERO"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "MSTORE"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "ADD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "MLOAD"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "DUP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SUB"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP1"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "RETURN"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "JUMPDEST"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP2"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ADD"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ADD"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP3"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP2"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "JUMPDEST"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "MLOAD"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP3"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ISZERO"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ISZERO"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ISZERO"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ISZERO"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP2"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "MSTORE"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "ADD"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP2"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "MLOAD"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "DUP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP2"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SUB"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "RETURN"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "JUMPDEST"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP2"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "ADD"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "AND"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "ADD"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP3"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP2"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "JUMPDEST"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "MLOAD"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP3"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP2"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "MSTORE"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "ADD"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP2"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "MLOAD"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "DUP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP2"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SUB"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "RETURN"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "JUMPDEST"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "JUMPDEST"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "STOP"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "JUMPDEST"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "JUMPDEST"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "MLOAD"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "DUP1"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "DUP3"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "AND"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "AND"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "DUP2"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "MSTORE"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "ADD"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "SWAP2"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "POP"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "POP"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "MLOAD"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "DUP1"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "SWAP2"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "SUB"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "SWAP1"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "RETURN"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "JUMPDEST"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "JUMPDEST"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "MLOAD"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "DUP1"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "DUP3"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "AND"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "AND"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "DUP2"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "MSTORE"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "ADD"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "SWAP2"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "POP"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "POP"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "MLOAD"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "DUP1"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "SWAP2"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "SUB"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "SWAP1"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "RETURN"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMPDEST"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMPDEST"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MLOAD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "ADD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP3"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SUB"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP3"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MSTORE"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP4"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MLOAD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MSTORE"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "ADD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MLOAD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "ADD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP4"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "ADD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "AND"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "ISZERO"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMPI"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP3"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SUB"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MLOAD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP4"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SUB"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "EXP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SUB"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "NOT"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "AND"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MSTORE"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "ADD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMPDEST"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP3"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "MLOAD"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "DUP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP2"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SUB"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "RETURN"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "JUMPDEST"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ADD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "AND"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ADD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP3"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ADD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP3"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "JUMPDEST"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "MLOAD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP3"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ISZERO"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ISZERO"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ISZERO"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ISZERO"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "MSTORE"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "ADD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "MLOAD"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "DUP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SUB"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP1"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "RETURN"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "JUMPDEST"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ADD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "AND"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ADD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP3"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ADD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP3"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "JUMPDEST"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "MLOAD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP3"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ISZERO"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ISZERO"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ISZERO"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ISZERO"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "MSTORE"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "ADD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "MLOAD"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "DUP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SUB"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "RETURN"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ISZERO"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "EXP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "NOT"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "RETURN"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ISZERO"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPI"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "EXP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "NOT"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "RETURN"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "JUMPDEST"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "ADD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "AND"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "ADD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP3"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "AND"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "ADD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP3"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "JUMPDEST"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "MLOAD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP3"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "MSTORE"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "ADD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "MLOAD"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "DUP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SUB"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP1"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "RETURN"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "JUMPDEST"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "DUP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "DUP2"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "ADD"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SWAP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "DUP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "DUP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "AND"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SWAP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "ADD"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SWAP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SWAP3"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SWAP2"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "SWAP1"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "POP"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "POP"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "POP"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "JUMPDEST"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "STOP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMPDEST"
										},
										{
											"begin": 12061,
											"end": 12074,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12089,
											"end": 12094,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SLOAD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "AND"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ISZERO"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MUL"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SUB"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "AND"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DIV"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DIV"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MUL"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MLOAD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MSTORE"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP3"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MSTORE"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP3"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SLOAD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "AND"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ISZERO"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MUL"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SUB"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "AND"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DIV"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ISZERO"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMPI"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "LT"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMPI"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP4"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SLOAD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DIV"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MUL"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP4"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MSTORE"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMP"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMPDEST"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP3"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MSTORE"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "KECCAK256"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMPDEST"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SLOAD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "MSTORE"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP4"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "GT"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMPI"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP3"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SUB"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "AND"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "DUP3"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP2"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "JUMPDEST"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "POP"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "POP"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "POP"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "POP"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "POP"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "SWAP1"
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "POP"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "SWAP1"
										},
										{
											"begin": 12022,
											"end": 12099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "JUMPDEST"
										},
										{
											"begin": 13085,
											"end": 13089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13097,
											"end": 13136,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 13106,
											"end": 13118,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 13106,
											"end": 13116,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13106,
											"end": 13118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13106,
											"end": 13118,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 13106,
											"end": 13118,
											"name": "JUMPDEST"
										},
										{
											"begin": 13120,
											"end": 13127,
											"name": "DUP5"
										},
										{
											"begin": 13129,
											"end": 13135,
											"name": "DUP5"
										},
										{
											"begin": 13097,
											"end": 13105,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13097,
											"end": 13136,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13097,
											"end": 13136,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 13097,
											"end": 13136,
											"name": "JUMPDEST"
										},
										{
											"begin": 13149,
											"end": 13153,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13142,
											"end": 13153,
											"name": "SWAP1"
										},
										{
											"begin": 13142,
											"end": 13153,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP3"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "SWAP2"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "POP"
										},
										{
											"begin": 13017,
											"end": 13158,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "JUMPDEST"
										},
										{
											"begin": 12196,
											"end": 12203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12218,
											"end": 12230,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12218,
											"end": 12230,
											"name": "SLOAD"
										},
										{
											"begin": 12211,
											"end": 12230,
											"name": "SWAP1"
										},
										{
											"begin": 12211,
											"end": 12230,
											"name": "POP"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "SWAP1"
										},
										{
											"begin": 12150,
											"end": 12235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "JUMPDEST"
										},
										{
											"begin": 13680,
											"end": 13684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13692,
											"end": 13728,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13702,
											"end": 13708,
											"name": "DUP5"
										},
										{
											"begin": 13710,
											"end": 13719,
											"name": "DUP5"
										},
										{
											"begin": 13721,
											"end": 13727,
											"name": "DUP5"
										},
										{
											"begin": 13692,
											"end": 13701,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13692,
											"end": 13728,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13692,
											"end": 13728,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 13692,
											"end": 13728,
											"name": "JUMPDEST"
										},
										{
											"begin": 13734,
											"end": 13855,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 13743,
											"end": 13749,
											"name": "DUP5"
										},
										{
											"begin": 13751,
											"end": 13763,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 13751,
											"end": 13761,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13751,
											"end": 13763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13751,
											"end": 13763,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 13751,
											"end": 13763,
											"name": "JUMPDEST"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 13803,
											"end": 13809,
											"name": "DUP6"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "MLOAD"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "DUP1"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "ADD"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "MSTORE"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "DUP1"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "DUP2"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "MSTORE"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "ADD"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "SWAP2"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "CODECOPY"
										},
										{
											"begin": 13765,
											"end": 13776,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13783,
											"name": "DUP12"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "AND"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "AND"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "DUP2"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "MSTORE"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "ADD"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "SWAP1"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "DUP2"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "MSTORE"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "ADD"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13765,
											"end": 13784,
											"name": "KECCAK256"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13785,
											"end": 13797,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13785,
											"end": 13795,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 13785,
											"end": 13797,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13785,
											"end": 13797,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 13785,
											"end": 13797,
											"name": "JUMPDEST"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "AND"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "AND"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "DUP2"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "MSTORE"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "ADD"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "SWAP1"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "DUP2"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "MSTORE"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "ADD"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "KECCAK256"
										},
										{
											"begin": 13765,
											"end": 13798,
											"name": "SLOAD"
										},
										{
											"begin": 13765,
											"end": 13802,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13765,
											"end": 13802,
											"name": "SWAP1"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "SWAP3"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "SWAP2"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "SWAP1"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "AND"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 13765,
											"end": 13854,
											"name": "JUMPDEST"
										},
										{
											"begin": 13734,
											"end": 13742,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 13734,
											"end": 13855,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13734,
											"end": 13855,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 13734,
											"end": 13855,
											"name": "JUMPDEST"
										},
										{
											"begin": 13868,
											"end": 13872,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13861,
											"end": 13872,
											"name": "SWAP1"
										},
										{
											"begin": 13861,
											"end": 13872,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP4"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "SWAP3"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "POP"
										},
										{
											"begin": 13589,
											"end": 13877,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "JUMPDEST"
										},
										{
											"begin": 11807,
											"end": 11812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "SWAP1"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "SLOAD"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "SWAP1"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "EXP"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "SWAP1"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "DIV"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11827,
											"end": 11836,
											"name": "AND"
										},
										{
											"begin": 11820,
											"end": 11836,
											"name": "SWAP1"
										},
										{
											"begin": 11820,
											"end": 11836,
											"name": "POP"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "SWAP1"
										},
										{
											"begin": 11764,
											"end": 11841,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SLOAD"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "EXP"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DIV"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "AND"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "DUP2"
										},
										{
											"begin": 11273,
											"end": 11295,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "JUMPDEST"
										},
										{
											"begin": 14325,
											"end": 14329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14337,
											"end": 14420,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14346,
											"end": 14356,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "JUMPDEST"
										},
										{
											"begin": 14360,
											"end": 14367,
											"name": "DUP5"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 14408,
											"end": 14418,
											"name": "DUP6"
										},
										{
											"begin": 14369,
											"end": 14380,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14393,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 14381,
											"end": 14391,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14381,
											"end": 14393,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14381,
											"end": 14393,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 14381,
											"end": 14393,
											"name": "JUMPDEST"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "AND"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "AND"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "DUP2"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "MSTORE"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "ADD"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "SWAP1"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "DUP2"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "MSTORE"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "ADD"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14369,
											"end": 14394,
											"name": "KECCAK256"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14402,
											"name": "DUP10"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "AND"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "AND"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "DUP2"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "MSTORE"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "ADD"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "SWAP1"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "DUP2"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "MSTORE"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "ADD"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "KECCAK256"
										},
										{
											"begin": 14369,
											"end": 14403,
											"name": "SLOAD"
										},
										{
											"begin": 14369,
											"end": 14407,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14369,
											"end": 14407,
											"name": "SWAP1"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "SWAP2"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "SWAP1"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "AND"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 14369,
											"end": 14419,
											"name": "JUMPDEST"
										},
										{
											"begin": 14337,
											"end": 14345,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 14337,
											"end": 14420,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14337,
											"end": 14420,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 14337,
											"end": 14420,
											"name": "JUMPDEST"
										},
										{
											"begin": 14433,
											"end": 14437,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14426,
											"end": 14437,
											"name": "SWAP1"
										},
										{
											"begin": 14426,
											"end": 14437,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP3"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "SWAP2"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "POP"
										},
										{
											"begin": 14245,
											"end": 14442,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "JUMPDEST"
										},
										{
											"begin": 15272,
											"end": 15276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15284,
											"end": 15311,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 15290,
											"end": 15300,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 15290,
											"end": 15302,
											"name": "JUMPDEST"
										},
										{
											"begin": 15304,
											"end": 15310,
											"name": "DUP4"
										},
										{
											"begin": 15284,
											"end": 15289,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 15284,
											"end": 15311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15284,
											"end": 15311,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 15284,
											"end": 15311,
											"name": "JUMPDEST"
										},
										{
											"begin": 15324,
											"end": 15328,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15317,
											"end": 15328,
											"name": "SWAP1"
										},
										{
											"begin": 15317,
											"end": 15328,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP2"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "SWAP1"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "POP"
										},
										{
											"begin": 15226,
											"end": 15333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "JUMPDEST"
										},
										{
											"begin": 12343,
											"end": 12350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12374,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12382,
											"name": "DUP4"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "AND"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "AND"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "DUP2"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "MSTORE"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "ADD"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "SWAP1"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "DUP2"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "MSTORE"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "ADD"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "KECCAK256"
										},
										{
											"begin": 12365,
											"end": 12383,
											"name": "SLOAD"
										},
										{
											"begin": 12358,
											"end": 12383,
											"name": "SWAP1"
										},
										{
											"begin": 12358,
											"end": 12383,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP2"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "SWAP1"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "POP"
										},
										{
											"begin": 12284,
											"end": 12388,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "JUMPDEST"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 9973,
											"end": 9983,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "JUMPDEST"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "AND"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DUP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SWAP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SLOAD"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SWAP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "EXP"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SWAP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DIV"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "AND"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "AND"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "EQ"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPI"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MLOAD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP3"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SUB"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP3"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SWAP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MLOAD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SWAP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SUB"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SWAP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "REVERT"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPDEST"
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "AND"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "DUP1"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "SWAP1"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "SLOAD"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "SWAP1"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "EXP"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "SWAP1"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "DIV"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10438,
											"end": 10444,
											"name": "AND"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "AND"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "MLOAD"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "MLOAD"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "DUP1"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "SWAP2"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "SUB"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "SWAP1"
										},
										{
											"begin": 10417,
											"end": 10457,
											"name": "LOG3"
										},
										{
											"begin": 10480,
											"end": 10481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10469,
											"name": "DUP1"
										},
										{
											"begin": 10463,
											"end": 10469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "EXP"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "DUP2"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "SLOAD"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "DUP2"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "MUL"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "NOT"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "AND"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "SWAP1"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "DUP4"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "AND"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "MUL"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "OR"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "SWAP1"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "SSTORE"
										},
										{
											"begin": 10463,
											"end": 10482,
											"name": "POP"
										},
										{
											"begin": 10360,
											"end": 10487,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11698,
											"end": 11705,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 11698,
											"end": 11703,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11698,
											"end": 11705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11698,
											"end": 11705,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 11698,
											"end": 11705,
											"name": "JUMPDEST"
										},
										{
											"begin": 11691,
											"end": 11705,
											"name": "SWAP1"
										},
										{
											"begin": 11691,
											"end": 11705,
											"name": "POP"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "SWAP1"
										},
										{
											"begin": 11633,
											"end": 11710,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "JUMPDEST"
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DUP1"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "SWAP1"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "SLOAD"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "SWAP1"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "EXP"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "SWAP1"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DIV"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "AND"
										},
										{
											"begin": 9830,
											"end": 9843,
											"name": "SWAP1"
										},
										{
											"begin": 9830,
											"end": 9843,
											"name": "POP"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "SWAP1"
										},
										{
											"begin": 9777,
											"end": 9848,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMPDEST"
										},
										{
											"begin": 11934,
											"end": 11947,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11962,
											"end": 11969,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SLOAD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "AND"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ISZERO"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MUL"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SUB"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "AND"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DIV"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DIV"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MUL"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MLOAD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MSTORE"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP3"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MSTORE"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP3"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SLOAD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "AND"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ISZERO"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MUL"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SUB"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "AND"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DIV"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ISZERO"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMPI"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "LT"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMPI"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP4"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SLOAD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DIV"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MUL"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP4"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MSTORE"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMP"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMPDEST"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP3"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MSTORE"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "KECCAK256"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMPDEST"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SLOAD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "MSTORE"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP4"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "GT"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMPI"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP3"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SUB"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "AND"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "DUP3"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP2"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "JUMPDEST"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "SWAP1"
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "POP"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "SWAP1"
										},
										{
											"begin": 11893,
											"end": 11974,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "JUMPDEST"
										},
										{
											"begin": 14983,
											"end": 14987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14995,
											"end": 15124,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 15004,
											"end": 15014,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "JUMPDEST"
										},
										{
											"begin": 15018,
											"end": 15025,
											"name": "DUP5"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 15066,
											"end": 15081,
											"name": "DUP6"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "MLOAD"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "DUP1"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "ADD"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "MSTORE"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "DUP1"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "DUP2"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "MSTORE"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "ADD"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "SWAP2"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "CODECOPY"
										},
										{
											"begin": 15027,
											"end": 15038,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15051,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 15039,
											"end": 15049,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15039,
											"end": 15051,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15039,
											"end": 15051,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 15039,
											"end": 15051,
											"name": "JUMPDEST"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "AND"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "AND"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "DUP2"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "MSTORE"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "ADD"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "SWAP1"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "DUP2"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "MSTORE"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "ADD"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15027,
											"end": 15052,
											"name": "KECCAK256"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15053,
											"end": 15060,
											"name": "DUP11"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "AND"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "AND"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "DUP2"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "MSTORE"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "ADD"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "SWAP1"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "DUP2"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "MSTORE"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "ADD"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "KECCAK256"
										},
										{
											"begin": 15027,
											"end": 15061,
											"name": "SLOAD"
										},
										{
											"begin": 15027,
											"end": 15065,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 15027,
											"end": 15065,
											"name": "SWAP1"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "SWAP3"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "SWAP2"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "SWAP1"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "AND"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 15027,
											"end": 15123,
											"name": "JUMPDEST"
										},
										{
											"begin": 14995,
											"end": 15003,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 14995,
											"end": 15124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14995,
											"end": 15124,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 14995,
											"end": 15124,
											"name": "JUMPDEST"
										},
										{
											"begin": 15137,
											"end": 15141,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15130,
											"end": 15141,
											"name": "SWAP1"
										},
										{
											"begin": 15130,
											"end": 15141,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP3"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "SWAP2"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "POP"
										},
										{
											"begin": 14898,
											"end": 15146,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "JUMPDEST"
										},
										{
											"begin": 12643,
											"end": 12647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12655,
											"end": 12697,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 12665,
											"end": 12677,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 12665,
											"end": 12675,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12665,
											"end": 12677,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12665,
											"end": 12677,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 12665,
											"end": 12677,
											"name": "JUMPDEST"
										},
										{
											"begin": 12679,
											"end": 12688,
											"name": "DUP5"
										},
										{
											"begin": 12690,
											"end": 12696,
											"name": "DUP5"
										},
										{
											"begin": 12655,
											"end": 12664,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 12655,
											"end": 12697,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12655,
											"end": 12697,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 12655,
											"end": 12697,
											"name": "JUMPDEST"
										},
										{
											"begin": 12710,
											"end": 12714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12703,
											"end": 12714,
											"name": "SWAP1"
										},
										{
											"begin": 12703,
											"end": 12714,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP3"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "SWAP2"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12719,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ISZERO"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ISZERO"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ISZERO"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "LT"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DIV"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MUL"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "KECCAK256"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SLOAD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "MSTORE"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP4"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "GT"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPI"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP1"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SUB"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "AND"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP3"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "ADD"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "SWAP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMPDEST"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "POP"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "DUP2"
										},
										{
											"begin": 11299,
											"end": 11320,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ISZERO"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ISZERO"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ISZERO"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPI"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "LT"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPI"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DIV"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MUL"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "KECCAK256"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SLOAD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "MSTORE"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP4"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "GT"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPI"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP1"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SUB"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "AND"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP3"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "ADD"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "SWAP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMPDEST"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "POP"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "DUP2"
										},
										{
											"begin": 11324,
											"end": 11343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "JUMPDEST"
										},
										{
											"begin": 12842,
											"end": 12849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12875,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12881,
											"name": "DUP5"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "AND"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "AND"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "DUP2"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "MSTORE"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "ADD"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "DUP2"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "MSTORE"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "ADD"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "KECCAK256"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12890,
											"name": "DUP4"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "AND"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "AND"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "DUP2"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "MSTORE"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "ADD"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "SWAP1"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "DUP2"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "MSTORE"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "ADD"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "KECCAK256"
										},
										{
											"begin": 12864,
											"end": 12891,
											"name": "SLOAD"
										},
										{
											"begin": 12857,
											"end": 12891,
											"name": "SWAP1"
										},
										{
											"begin": 12857,
											"end": 12891,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP3"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "SWAP2"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "POP"
										},
										{
											"begin": 12768,
											"end": 12896,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "JUMPDEST"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 9973,
											"end": 9983,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 9973,
											"end": 9985,
											"name": "JUMPDEST"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "AND"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DUP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SWAP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SLOAD"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SWAP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "EXP"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "SWAP1"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DIV"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "AND"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "AND"
										},
										{
											"begin": 9963,
											"end": 9985,
											"name": "EQ"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPI"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MLOAD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP3"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SUB"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP3"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MSTORE"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "ADD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SWAP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "POP"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "MLOAD"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "DUP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SWAP2"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SUB"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "SWAP1"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "REVERT"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPDEST"
										},
										{
											"begin": 10694,
											"end": 10722,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 10713,
											"end": 10721,
											"name": "DUP2"
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 10694,
											"end": 10722,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10694,
											"end": 10722,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 10694,
											"end": 10722,
											"name": "JUMPDEST"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "POP"
										},
										{
											"begin": 10626,
											"end": 10727,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3662,
											"end": 3752,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3662,
											"end": 3752,
											"name": "JUMPDEST"
										},
										{
											"begin": 3707,
											"end": 3722,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3747,
											"name": "CALLER"
										},
										{
											"begin": 3730,
											"end": 3747,
											"name": "SWAP1"
										},
										{
											"begin": 3730,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 3662,
											"end": 3752,
											"name": "SWAP1"
										},
										{
											"begin": 3662,
											"end": 3752,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17235,
											"end": 17549,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 17235,
											"end": 17549,
											"name": "JUMPDEST"
										},
										{
											"begin": 17341,
											"end": 17342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17324,
											"end": 17343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17324,
											"end": 17343,
											"name": "AND"
										},
										{
											"begin": 17324,
											"end": 17329,
											"name": "DUP4"
										},
										{
											"begin": 17324,
											"end": 17343,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17324,
											"end": 17343,
											"name": "AND"
										},
										{
											"begin": 17324,
											"end": 17343,
											"name": "EQ"
										},
										{
											"begin": 17324,
											"end": 17343,
											"name": "ISZERO"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "JUMPI"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "MLOAD"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP2"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "MSTORE"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "ADD"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP1"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP1"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "ADD"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP3"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP2"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "SUB"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP3"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "MSTORE"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP2"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "MSTORE"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "ADD"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP1"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "SWAP2"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "CODECOPY"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "ADD"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "SWAP2"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "POP"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "POP"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "MLOAD"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "DUP1"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "SWAP2"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "SUB"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "SWAP1"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "REVERT"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 17316,
											"end": 17384,
											"name": "JUMPDEST"
										},
										{
											"begin": 17417,
											"end": 17418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17398,
											"end": 17419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17398,
											"end": 17419,
											"name": "AND"
										},
										{
											"begin": 17398,
											"end": 17405,
											"name": "DUP3"
										},
										{
											"begin": 17398,
											"end": 17419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17398,
											"end": 17419,
											"name": "AND"
										},
										{
											"begin": 17398,
											"end": 17419,
											"name": "EQ"
										},
										{
											"begin": 17398,
											"end": 17419,
											"name": "ISZERO"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "JUMPI"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "MLOAD"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP2"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "MSTORE"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "ADD"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP1"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP1"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "ADD"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP3"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP2"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "SUB"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP3"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "MSTORE"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP2"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "MSTORE"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "ADD"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP1"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "SWAP2"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "CODECOPY"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "ADD"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "SWAP2"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "POP"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "POP"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "MLOAD"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "DUP1"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "SWAP2"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "SUB"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "SWAP1"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "REVERT"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 17390,
											"end": 17458,
											"name": "JUMPDEST"
										},
										{
											"begin": 17495,
											"end": 17501,
											"name": "DUP1"
										},
										{
											"begin": 17465,
											"end": 17476,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17477,
											"end": 17482,
											"name": "DUP6"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "AND"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "AND"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "DUP2"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "MSTORE"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "ADD"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "SWAP1"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "DUP2"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "MSTORE"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "ADD"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17465,
											"end": 17483,
											"name": "KECCAK256"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17491,
											"name": "DUP5"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "AND"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "AND"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "DUP2"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "MSTORE"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "ADD"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "SWAP1"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "DUP2"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "MSTORE"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "ADD"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17465,
											"end": 17492,
											"name": "KECCAK256"
										},
										{
											"begin": 17465,
											"end": 17501,
											"name": "DUP2"
										},
										{
											"begin": 17465,
											"end": 17501,
											"name": "SWAP1"
										},
										{
											"begin": 17465,
											"end": 17501,
											"name": "SSTORE"
										},
										{
											"begin": 17465,
											"end": 17501,
											"name": "POP"
										},
										{
											"begin": 17528,
											"end": 17535,
											"name": "DUP2"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "AND"
										},
										{
											"begin": 17521,
											"end": 17526,
											"name": "DUP4"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "AND"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17537,
											"end": 17543,
											"name": "DUP4"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "MLOAD"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "DUP1"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "DUP3"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "DUP2"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "MSTORE"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "ADD"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "SWAP2"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "POP"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "POP"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "MLOAD"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "DUP1"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "SWAP2"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "SUB"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "SWAP1"
										},
										{
											"begin": 17512,
											"end": 17544,
											"name": "LOG3"
										},
										{
											"begin": 17235,
											"end": 17549,
											"name": "POP"
										},
										{
											"begin": 17235,
											"end": 17549,
											"name": "POP"
										},
										{
											"begin": 17235,
											"end": 17549,
											"name": "POP"
										},
										{
											"begin": 17235,
											"end": 17549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15777,
											"end": 16219,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 15777,
											"end": 16219,
											"name": "JUMPDEST"
										},
										{
											"begin": 15888,
											"end": 15889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "AND"
										},
										{
											"begin": 15870,
											"end": 15876,
											"name": "DUP4"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "AND"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "EQ"
										},
										{
											"begin": 15870,
											"end": 15890,
											"name": "ISZERO"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "JUMPI"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "MLOAD"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP2"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "MSTORE"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "ADD"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP1"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP1"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "ADD"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP3"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP2"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "SUB"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP3"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "MSTORE"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP2"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "MSTORE"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "ADD"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP1"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "SWAP2"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "CODECOPY"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "ADD"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "SWAP2"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "POP"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "POP"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "MLOAD"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "DUP1"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "SWAP2"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "SUB"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "SWAP1"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "REVERT"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 15862,
											"end": 15932,
											"name": "JUMPDEST"
										},
										{
											"begin": 15967,
											"end": 15968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15946,
											"end": 15969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15946,
											"end": 15969,
											"name": "AND"
										},
										{
											"begin": 15946,
											"end": 15955,
											"name": "DUP3"
										},
										{
											"begin": 15946,
											"end": 15969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15946,
											"end": 15969,
											"name": "AND"
										},
										{
											"begin": 15946,
											"end": 15969,
											"name": "EQ"
										},
										{
											"begin": 15946,
											"end": 15969,
											"name": "ISZERO"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "JUMPI"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "MLOAD"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP2"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "MSTORE"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "ADD"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP1"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP1"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "ADD"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP3"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP2"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "SUB"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP3"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "MSTORE"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP2"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "MSTORE"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "ADD"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP1"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "SWAP2"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "CODECOPY"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "ADD"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "SWAP2"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "POP"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "POP"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "MLOAD"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "DUP1"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "SWAP2"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "SUB"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "SWAP1"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "REVERT"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 15938,
											"end": 16009,
											"name": "JUMPDEST"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 16058,
											"end": 16064,
											"name": "DUP2"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "MLOAD"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "DUP1"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "ADD"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "MSTORE"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "DUP1"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "DUP2"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "MSTORE"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "ADD"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "SWAP2"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "CODECOPY"
										},
										{
											"begin": 16036,
											"end": 16045,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16046,
											"end": 16052,
											"name": "DUP8"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "AND"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "AND"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "DUP2"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "MSTORE"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "ADD"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "SWAP1"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "DUP2"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "MSTORE"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "ADD"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "KECCAK256"
										},
										{
											"begin": 16036,
											"end": 16053,
											"name": "SLOAD"
										},
										{
											"begin": 16036,
											"end": 16057,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 16036,
											"end": 16057,
											"name": "SWAP1"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "SWAP3"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "SWAP2"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "SWAP1"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "AND"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 16036,
											"end": 16107,
											"name": "JUMPDEST"
										},
										{
											"begin": 16016,
											"end": 16025,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16026,
											"end": 16032,
											"name": "DUP6"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "AND"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "AND"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "MSTORE"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "MSTORE"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "ADD"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16016,
											"end": 16033,
											"name": "KECCAK256"
										},
										{
											"begin": 16016,
											"end": 16107,
											"name": "DUP2"
										},
										{
											"begin": 16016,
											"end": 16107,
											"name": "SWAP1"
										},
										{
											"begin": 16016,
											"end": 16107,
											"name": "SSTORE"
										},
										{
											"begin": 16016,
											"end": 16107,
											"name": "POP"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 16161,
											"end": 16167,
											"name": "DUP2"
										},
										{
											"begin": 16136,
											"end": 16145,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16146,
											"end": 16155,
											"name": "DUP6"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "AND"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "AND"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "DUP2"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "MSTORE"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "ADD"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "SWAP1"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "DUP2"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "MSTORE"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "ADD"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "KECCAK256"
										},
										{
											"begin": 16136,
											"end": 16156,
											"name": "SLOAD"
										},
										{
											"begin": 16136,
											"end": 16160,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 16136,
											"end": 16160,
											"name": "SWAP1"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "SWAP2"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "SWAP1"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "AND"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 16136,
											"end": 16168,
											"name": "JUMPDEST"
										},
										{
											"begin": 16113,
											"end": 16122,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16123,
											"end": 16132,
											"name": "DUP5"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "AND"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "AND"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "DUP2"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "MSTORE"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "ADD"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "SWAP1"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "DUP2"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "MSTORE"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "ADD"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16113,
											"end": 16133,
											"name": "KECCAK256"
										},
										{
											"begin": 16113,
											"end": 16168,
											"name": "DUP2"
										},
										{
											"begin": 16113,
											"end": 16168,
											"name": "SWAP1"
										},
										{
											"begin": 16113,
											"end": 16168,
											"name": "SSTORE"
										},
										{
											"begin": 16113,
											"end": 16168,
											"name": "POP"
										},
										{
											"begin": 16196,
											"end": 16205,
											"name": "DUP2"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "AND"
										},
										{
											"begin": 16188,
											"end": 16194,
											"name": "DUP4"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "AND"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16207,
											"end": 16213,
											"name": "DUP4"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "MLOAD"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "DUP1"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "DUP3"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "DUP2"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "MSTORE"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "ADD"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "SWAP2"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "POP"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "POP"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "MLOAD"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "DUP1"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "SWAP2"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "SUB"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "SWAP1"
										},
										{
											"begin": 16179,
											"end": 16214,
											"name": "LOG3"
										},
										{
											"begin": 15777,
											"end": 16219,
											"name": "POP"
										},
										{
											"begin": 15777,
											"end": 16219,
											"name": "POP"
										},
										{
											"begin": 15777,
											"end": 16219,
											"name": "POP"
										},
										{
											"begin": 15777,
											"end": 16219,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "JUMPDEST"
										},
										{
											"begin": 5645,
											"end": 5652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "DUP4"
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "DUP4"
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "GT"
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "ISZERO"
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "DUP3"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "JUMPI"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MLOAD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP3"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SUB"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP3"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP4"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MLOAD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MLOAD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP4"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "AND"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ISZERO"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "JUMPI"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP3"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SUB"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MLOAD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP4"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SUB"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "EXP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SUB"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "NOT"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "AND"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "JUMPDEST"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP3"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "MLOAD"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "DUP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP2"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SUB"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "REVERT"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "JUMPDEST"
										},
										{
											"begin": 5660,
											"end": 5689,
											"name": "POP"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "DUP4"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP6"
										},
										{
											"begin": 5707,
											"end": 5712,
											"name": "SUB"
										},
										{
											"begin": 5695,
											"end": 5712,
											"name": "SWAP1"
										},
										{
											"begin": 5695,
											"end": 5712,
											"name": "POP"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP1"
										},
										{
											"begin": 5719,
											"end": 5727,
											"name": "SWAP2"
										},
										{
											"begin": 5719,
											"end": 5727,
											"name": "POP"
										},
										{
											"begin": 5719,
											"end": 5727,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "SWAP4"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "SWAP3"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5732,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "JUMPDEST"
										},
										{
											"begin": 4819,
											"end": 4826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4843,
											"name": "DUP1"
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "DUP3"
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "DUP5"
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "ADD"
										},
										{
											"begin": 4834,
											"end": 4851,
											"name": "SWAP1"
										},
										{
											"begin": 4834,
											"end": 4851,
											"name": "POP"
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP4"
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "DUP2"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "LT"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "ISZERO"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "JUMPI"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "MLOAD"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP2"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "MSTORE"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "ADD"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP1"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP1"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "ADD"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP3"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP2"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "SUB"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP3"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "MSTORE"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP2"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "MSTORE"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "ADD"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP1"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP2"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "MSTORE"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "ADD"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "SWAP2"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "POP"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "MLOAD"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "DUP1"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "SWAP2"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "SUB"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "SWAP1"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "REVERT"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 4857,
											"end": 4903,
											"name": "JUMPDEST"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "DUP1"
										},
										{
											"begin": 4910,
											"end": 4918,
											"name": "SWAP2"
										},
										{
											"begin": 4910,
											"end": 4918,
											"name": "POP"
										},
										{
											"begin": 4910,
											"end": 4918,
											"name": "POP"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "SWAP3"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "SWAP2"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "POP"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "POP"
										},
										{
											"begin": 4761,
											"end": 4923,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16514,
											"end": 16838,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 16514,
											"end": 16838,
											"name": "JUMPDEST"
										},
										{
											"begin": 16604,
											"end": 16605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16585,
											"end": 16606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16585,
											"end": 16606,
											"name": "AND"
										},
										{
											"begin": 16585,
											"end": 16592,
											"name": "DUP3"
										},
										{
											"begin": 16585,
											"end": 16606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16585,
											"end": 16606,
											"name": "AND"
										},
										{
											"begin": 16585,
											"end": 16606,
											"name": "EQ"
										},
										{
											"begin": 16585,
											"end": 16606,
											"name": "ISZERO"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "JUMPI"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "MLOAD"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP2"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "MSTORE"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "ADD"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP1"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP1"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "ADD"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP3"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP2"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "SUB"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP3"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "MSTORE"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP2"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "MSTORE"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "ADD"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP1"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH data",
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "SWAP2"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "CODECOPY"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "ADD"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "SWAP2"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "POP"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "POP"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "MLOAD"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "DUP1"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "SWAP2"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "SUB"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "SWAP1"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "REVERT"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16577,
											"end": 16644,
											"name": "JUMPDEST"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 16695,
											"end": 16701,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "MLOAD"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "DUP1"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "ADD"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "MSTORE"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "DUP1"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "MSTORE"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "ADD"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH data",
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "SWAP2"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "CODECOPY"
										},
										{
											"begin": 16672,
											"end": 16681,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16689,
											"name": "DUP7"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "AND"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "AND"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "MSTORE"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "ADD"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "SWAP1"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "MSTORE"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "ADD"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "KECCAK256"
										},
										{
											"begin": 16672,
											"end": 16690,
											"name": "SLOAD"
										},
										{
											"begin": 16672,
											"end": 16694,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 16672,
											"end": 16694,
											"name": "SWAP1"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "SWAP3"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "SWAP2"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "SWAP1"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "AND"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16672,
											"end": 16740,
											"name": "JUMPDEST"
										},
										{
											"begin": 16651,
											"end": 16660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16661,
											"end": 16668,
											"name": "DUP5"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "AND"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "AND"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "DUP2"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "MSTORE"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "ADD"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "SWAP1"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "DUP2"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "MSTORE"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "ADD"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16651,
											"end": 16669,
											"name": "KECCAK256"
										},
										{
											"begin": 16651,
											"end": 16740,
											"name": "DUP2"
										},
										{
											"begin": 16651,
											"end": 16740,
											"name": "SWAP1"
										},
										{
											"begin": 16651,
											"end": 16740,
											"name": "SSTORE"
										},
										{
											"begin": 16651,
											"end": 16740,
											"name": "POP"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 16778,
											"end": 16784,
											"name": "DUP2"
										},
										{
											"begin": 16761,
											"end": 16773,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16761,
											"end": 16773,
											"name": "SLOAD"
										},
										{
											"begin": 16761,
											"end": 16777,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 16761,
											"end": 16777,
											"name": "SWAP1"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "SWAP2"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "SWAP1"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "AND"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 16761,
											"end": 16785,
											"name": "JUMPDEST"
										},
										{
											"begin": 16746,
											"end": 16758,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16746,
											"end": 16785,
											"name": "DUP2"
										},
										{
											"begin": 16746,
											"end": 16785,
											"name": "SWAP1"
										},
										{
											"begin": 16746,
											"end": 16785,
											"name": "SSTORE"
										},
										{
											"begin": 16746,
											"end": 16785,
											"name": "POP"
										},
										{
											"begin": 16822,
											"end": 16823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "AND"
										},
										{
											"begin": 16805,
											"end": 16812,
											"name": "DUP3"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "AND"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16826,
											"end": 16832,
											"name": "DUP4"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "MLOAD"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "DUP1"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "DUP3"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "DUP2"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "MSTORE"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "ADD"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "SWAP2"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "POP"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "POP"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "MLOAD"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "DUP1"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "SWAP2"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "SUB"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "SWAP1"
										},
										{
											"begin": 16796,
											"end": 16833,
											"name": "LOG3"
										},
										{
											"begin": 16514,
											"end": 16838,
											"name": "POP"
										},
										{
											"begin": 16514,
											"end": 16838,
											"name": "POP"
										},
										{
											"begin": 16514,
											"end": 16838,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10820,
											"end": 11031,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 10820,
											"end": 11031,
											"name": "JUMPDEST"
										},
										{
											"begin": 10909,
											"end": 10910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10889,
											"end": 10911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10889,
											"end": 10911,
											"name": "AND"
										},
										{
											"begin": 10889,
											"end": 10897,
											"name": "DUP2"
										},
										{
											"begin": 10889,
											"end": 10911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10889,
											"end": 10911,
											"name": "AND"
										},
										{
											"begin": 10889,
											"end": 10911,
											"name": "EQ"
										},
										{
											"begin": 10889,
											"end": 10911,
											"name": "ISZERO"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "JUMPI"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "MLOAD"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP2"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "MSTORE"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "ADD"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP1"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP1"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "ADD"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP3"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP2"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "SUB"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP3"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "MSTORE"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP2"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "MSTORE"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "ADD"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP1"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "SWAP2"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "CODECOPY"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "ADD"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "SWAP2"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "POP"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "POP"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "MLOAD"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "DUP1"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "SWAP2"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "SUB"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "SWAP1"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "REVERT"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 10881,
											"end": 10954,
											"name": "JUMPDEST"
										},
										{
											"begin": 10994,
											"end": 11002,
											"name": "DUP1"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "AND"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "DUP1"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "SWAP1"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "SLOAD"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "SWAP1"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "EXP"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "SWAP1"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "DIV"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "AND"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "AND"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "MLOAD"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "MLOAD"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "DUP1"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "SWAP2"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "SUB"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "SWAP1"
										},
										{
											"begin": 10965,
											"end": 11003,
											"name": "LOG3"
										},
										{
											"begin": 11018,
											"end": 11026,
											"name": "DUP1"
										},
										{
											"begin": 11009,
											"end": 11015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11015,
											"name": "DUP1"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "EXP"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "DUP2"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "SLOAD"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "DUP2"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "MUL"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "NOT"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "AND"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "SWAP1"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "DUP4"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "AND"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "MUL"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "OR"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "SWAP1"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "SSTORE"
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "POP"
										},
										{
											"begin": 10820,
											"end": 11031,
											"name": "POP"
										},
										{
											"begin": 10820,
											"end": 11031,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "JUMPDEST"
										},
										{
											"begin": 5225,
											"end": 5232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5251,
											"end": 5252,
											"name": "DUP4"
										},
										{
											"begin": 5254,
											"end": 5255,
											"name": "DUP4"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "MLOAD"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "DUP1"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "DUP1"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "ADD"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "DUP2"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "MSTORE"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "POP"
										},
										{
											"begin": 5247,
											"end": 5250,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5247,
											"end": 5290,
											"name": "JUMPDEST"
										},
										{
											"begin": 5240,
											"end": 5290,
											"name": "SWAP1"
										},
										{
											"begin": 5240,
											"end": 5290,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "SWAP3"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5295,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {ERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {ERC20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {ERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ERC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {ERC20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {ERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {ERC20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ERC20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract/HOM.sol\":\"HOMToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract/HOM.sol\":{\"keccak256\":\"0xe04f6cecc5e2d51594bd84e3a0dfb070e0591e9a7e1c5df4a0d8d04a36e68119\",\"urls\":[\"bzz-raw://36d485870b488089a31375324aa91cb64689e897ac36b5cff60ef5daffe29a38\",\"dweb:/ipfs/Qmd5B9wdyNUK8D8kddVarwXbr7c6Zf7eMWka3hosJShVUi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/MyContract/HOM.sol:HOMToken",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract/HOM.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract/HOM.sol\":{\"keccak256\":\"0xe04f6cecc5e2d51594bd84e3a0dfb070e0591e9a7e1c5df4a0d8d04a36e68119\",\"urls\":[\"bzz-raw://36d485870b488089a31375324aa91cb64689e897ac36b5cff60ef5daffe29a38\",\"dweb:/ipfs/Qmd5B9wdyNUK8D8kddVarwXbr7c6Zf7eMWka3hosJShVUi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract/HOM.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract/HOM.sol\":{\"keccak256\":\"0xe04f6cecc5e2d51594bd84e3a0dfb070e0591e9a7e1c5df4a0d8d04a36e68119\",\"urls\":[\"bzz-raw://36d485870b488089a31375324aa91cb64689e897ac36b5cff60ef5daffe29a38\",\"dweb:/ipfs/Qmd5B9wdyNUK8D8kddVarwXbr7c6Zf7eMWka3hosJShVUi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/MyContract/HOM.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract/HOM.sol\":4536:8830  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract/HOM.sol\":4536:8830  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158209aaee9d377d3921f96952a44dd2cd5b7ba2005a747419a3194e18b058b3ee70b64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209aaee9d377d3921f96952a44dd2cd5b7ba2005a747419a3194e18b058b3ee70b64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP11 0xAE 0xE9 0xD3 PUSH24 0xD3921F96952A44DD2CD5B7BA2005A747419A3194E18B058B RETURNDATACOPY 0xE7 SIGNEXTEND PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4536:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209aaee9d377d3921f96952a44dd2cd5b7ba2005a747419a3194e18b058b3ee70b64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP11 0xAE 0xE9 0xD3 PUSH24 0xD3921F96952A44DD2CD5B7BA2005A747419A3194E18B058B RETURNDATACOPY 0xE7 SIGNEXTEND PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4536:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4536,
									"end": 8830,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4536,
									"end": 8830,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209aaee9d377d3921f96952a44dd2cd5b7ba2005a747419a3194e18b058b3ee70b64736f6c63430005100032",
									".code": [
										{
											"begin": 4536,
											"end": 8830,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "ADDRESS"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "EQ"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "MSTORE"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "DUP1"
										},
										{
											"begin": 4536,
											"end": 8830,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract/HOM.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract/HOM.sol\":{\"keccak256\":\"0xe04f6cecc5e2d51594bd84e3a0dfb070e0591e9a7e1c5df4a0d8d04a36e68119\",\"urls\":[\"bzz-raw://36d485870b488089a31375324aa91cb64689e897ac36b5cff60ef5daffe29a38\",\"dweb:/ipfs/Qmd5B9wdyNUK8D8kddVarwXbr7c6Zf7eMWka3hosJShVUi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/MyContract/HOM.sol": {
				"ast": {
					"absolutePath": "contracts/MyContract/HOM.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"HOMToken": [
							825
						],
						"IERC20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 826,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "67:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:9:0"
									},
									"scope": 88,
									"src": "178:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "330:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "329:7:0"
									},
									"scope": 88,
									"src": "287:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "429:15:0"
									},
									"scope": 88,
									"src": "389:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "532:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:15:0"
									},
									"scope": 88,
									"src": "493:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "644:9:0"
									},
									"scope": 88,
									"src": "602:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "748:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "747:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "788:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:9:0"
									},
									"scope": 88,
									"src": "729:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1019:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1018:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1072:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1072:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1071:6:0"
									},
									"scope": 88,
									"src": "1001:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1372:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1355:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1412:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1411:9:0"
									},
									"scope": 88,
									"src": "1337:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2078:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2060:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2112:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2112:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2111:6:0"
									},
									"scope": 88,
									"src": "2044:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2443:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2462:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2426:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2496:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2495:6:0"
									},
									"scope": 88,
									"src": "2405:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2672:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2694:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2714:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2671:57:0"
									},
									"src": "2657:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2893:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2916:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2892:63:0"
									},
									"src": "2878:78:0"
								}
							],
							"scope": 826,
							"src": "92:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3655:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3643:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3655:0:0"
									},
									"scope": 113,
									"src": "3631:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3724:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3737:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3737:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3730:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3681:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3707:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3707:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3706:17:0"
									},
									"scope": 113,
									"src": "3662:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3813:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "3819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3819:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3955:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3955:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3948:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3773:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3799:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:14:0"
									},
									"scope": 113,
									"src": "3756:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "3460:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4828:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4834:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4834:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4846:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4850:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4846:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4834:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4865:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4870:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4873:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "4857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4857:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4857:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4917:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4910:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4774:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4785:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4773:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4819:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4818:9:0"
									},
									"scope": 298,
									"src": "4761:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5234:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5257:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5247:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5247:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5240:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5180:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5191:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5179:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5224:9:0"
									},
									"scope": 298,
									"src": "5167:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5654:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5673:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5676:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "5660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5660:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5660:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5695:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5707:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5711:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5695:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5726:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5719:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5583:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5594:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5594:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5571:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5644:9:0"
									},
									"scope": 298,
									"src": "5559:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6019:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6235:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6240:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6231:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6243:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6258:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6251:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6272:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6272:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6284:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6284:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6303:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6312:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6303:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6315:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "6295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6295:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6295:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6365:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6358:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5965:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5964:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6010:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6009:9:0"
									},
									"scope": 298,
									"src": "5952:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6869:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6886:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6889:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6892:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6882:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6875:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6815:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6826:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6814:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6859:9:0"
									},
									"scope": 298,
									"src": "6802:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7472:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7548:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7552:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7548:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7555:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "7540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7540:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7540:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7574:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7590:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7586:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7574:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7687:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7680:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7390:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7401:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7412:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7412:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7389:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7463:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7462:9:0"
									},
									"scope": 298,
									"src": "7377:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8180:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8197:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8200:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8203:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8193:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8186:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8126:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8137:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8125:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8171:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8170:9:0"
									},
									"scope": 298,
									"src": "8113:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8770:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8784:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8789:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8792:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "8776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8776:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8776:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8811:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8688:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8699:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8710:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8687:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8761:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8760:9:0"
									},
									"scope": 298,
									"src": "8675:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "4536:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9347:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9347:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9359:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9359:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9413:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9444:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9412:57:0"
									},
									"src": "9386:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9588:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9594:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9594:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9614:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9614:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9594:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9632:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9641:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9632:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9632:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9690:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9694:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9661:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9661:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9656:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9576:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9588:0:0"
									},
									"scope": 404,
									"src": "9564:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9824:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9837:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9830:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9791:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9814:9:0"
									},
									"scope": 404,
									"src": "9777:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9949:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9963:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9973:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9973:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9963:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9987:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "9955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9955:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9955:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10028:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9946:2:0"
									},
									"src": "9928:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10406:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10438:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10417:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10417:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10412:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10463:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10480:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10472:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10463:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10463:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10396:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10396:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10386:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10406:0:0"
									},
									"scope": 404,
									"src": "10360:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10688:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10713:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10694:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10694:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10694:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10678:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10678:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10652:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10688:0:0"
									},
									"scope": 404,
									"src": "10626:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10875:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10889:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10909:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10901:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10901:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10889:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10913:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "10881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10881:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10881:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10994:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10965:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10965:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10960:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11009:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11009:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11009:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10848:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10847:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10875:0:0"
									},
									"scope": 404,
									"src": "10820:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "9327:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11056:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11056:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11065:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$88",
											"typeString": "contract IERC20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11065:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11073:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11073:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 825,
							"linearizedBaseContracts": [
								825,
								404,
								88,
								113
							],
							"name": "HOMToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11091:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11085:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11104:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11116:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11116:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11136:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11167:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11176:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11167:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11196:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11187:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11207:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11241:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11241:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11273:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11273:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11299:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11299:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 825,
									"src": "11324:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11324:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11369:209:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11375:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "484f4d20546f6b656e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11383:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0363d3bba80758b5e5a8854957ffc6322403fc8d7b2d8d02509dce315c630711",
															"typeString": "literal_string \"HOM Token\""
														},
														"value": "HOM Token"
													},
													"src": "11375:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11375:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11400:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "484f4d",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11410:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_52287c6e53620e49c1e383bbb0113fc821eda8d693a209146ffc3593d54dfd49",
															"typeString": "literal_string \"HOM\""
														},
														"value": "HOM"
													},
													"src": "11400:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11400:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11421:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "39",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11433:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "11421:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11421:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11440:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030303030303030303030303030303030",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11455:18:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"value": "100000000000000000"
													},
													"src": "11440:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11440:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11479:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "11489:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11489:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11479:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11479:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11479:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11544:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11536:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11536:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "11548:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11548:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11560:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11527:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11527:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11522:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11359:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11369:0:0"
									},
									"scope": 825,
									"src": "11348:230:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "11685:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11698:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "11691:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11650:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "11676:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11675:9:0"
									},
									"scope": 825,
									"src": "11633:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11814:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "11820:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11781:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11807:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11807:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11806:7:0"
									},
									"scope": 825,
									"src": "11764:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "11949:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "11955:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11908:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "11934:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11934:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11933:15:0"
									},
									"scope": 825,
									"src": "11893:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12076:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12089:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12082:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12035:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12061:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12060:15:0"
									},
									"scope": 825,
									"src": "12022:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12205:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12218:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12211:19:0"
											}
										]
									},
									"documentation": "@dev See {ERC20-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12170:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12195:9:0"
									},
									"scope": 825,
									"src": "12150:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12352:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12365:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12365:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12358:25:0"
											}
										]
									},
									"documentation": "@dev See {ERC20-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12303:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12302:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12343:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12342:9:0"
									},
									"scope": 825,
									"src": "12284:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "12649:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12665:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12665:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "12679:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "12690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "12655:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12655:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "12655:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12710:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "12703:11:0"
											}
										]
									},
									"documentation": "@dev See {ERC20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12590:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12589:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12643:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12642:6:0"
									},
									"scope": 825,
									"src": "12572:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "12851:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12864:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "12876:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12864:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "12883:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12864:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "12857:34:0"
											}
										]
									},
									"documentation": "@dev See {ERC20-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12786:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12842:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12841:9:0"
									},
									"scope": 825,
									"src": "12768:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13091:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13106:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13106:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13120:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13129:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "13097:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13097:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13097:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13149:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13142:11:0"
											}
										]
									},
									"documentation": "@dev See {ERC20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13034:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13051:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13033:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13085:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13084:6:0"
									},
									"scope": 825,
									"src": "13017:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "13686:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13702:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "13710:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "13692:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13692:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "13692:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13743:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13751:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13751:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "13803:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13811:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13765:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "13777:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13765:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13785:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13785:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13765:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13765:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13765:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "13734:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13734:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "13734:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13868:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "13861:11:0"
											}
										]
									},
									"documentation": "@dev See {ERC20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13627:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13646:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13610:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13680:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13680:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13679:6:0"
									},
									"scope": 825,
									"src": "13589:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14331:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14346:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14346:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14408:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14369:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14381:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14381:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14369:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14369:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14369:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14369:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "14337:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14337:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14337:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14433:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14426:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {ERC20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14289:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14271:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14324:6:0"
									},
									"scope": 825,
									"src": "14245:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "14989:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15004:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "15018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15066:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15083:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15027:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15039:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15039:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15027:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "15053:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15027:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15027:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15027:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "14995:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14995:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "14995:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15137:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15130:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {ERC20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14942:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14924:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14983:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14983:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14982:6:0"
									},
									"scope": 825,
									"src": "14898:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "15278:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 673,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15290:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15290:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "15284:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15284:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "15284:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15324:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 671,
												"id": 679,
												"nodeType": "Return",
												"src": "15317:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15240:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15239:16:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15272:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15271:6:0"
									},
									"scope": 825,
									"src": "15226:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "15856:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 691,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "15870:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15888:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15880:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15880:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15870:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15892:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "15862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15862:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "15862:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 700,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "15946:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15967:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15959:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15959:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15946:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15971:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "15938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15938:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "15938:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 708,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16016:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 710,
														"indexExpression": {
															"argumentTypes": null,
															"id": 709,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "16026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16016:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 715,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16058:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16066:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 711,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16036:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 713,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 712,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "16046:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16036:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16036:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16036:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16016:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "16016:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 720,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16113:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 722,
														"indexExpression": {
															"argumentTypes": null,
															"id": 721,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16123:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16113:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 727,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16161:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 723,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16136:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 725,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 724,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "16146:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16136:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16136:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16136:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16113:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "16113:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 732,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "16188:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 733,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16196:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 734,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16207:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 731,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16179:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16179:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "EmitStatement",
												"src": "16174:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15812:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15831:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15795:51:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15856:0:0"
									},
									"scope": 825,
									"src": "15777:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "16571:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 746,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "16585:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16604:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16596:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16596:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16585:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16608:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "16577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16577:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "16577:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 754,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16651:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 756,
														"indexExpression": {
															"argumentTypes": null,
															"id": 755,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "16661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16651:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 761,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "16695:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16703:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 757,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16672:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 759,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 758,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "16682:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16672:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16672:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16672:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16651:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "16651:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 766,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16746:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 769,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "16778:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 767,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16761:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "16761:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16761:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16746:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "16746:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 774,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "16805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16822:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16814:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16814:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16796:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16796:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "EmitStatement",
												"src": "16791:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16528:33:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16571:0:0"
									},
									"scope": 825,
									"src": "16514:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "17310:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 792,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "17324:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17341:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17333:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17333:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17324:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17345:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "17316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17316:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "17316:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 801,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "17398:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17417:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17409:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17398:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17421:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															844
														],
														"referencedDeclaration": 844,
														"src": "17390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17390:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "17390:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 809,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "17465:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 812,
															"indexExpression": {
																"argumentTypes": null,
																"id": 810,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "17477:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17465:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"argumentTypes": null,
															"id": 811,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "17484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17465:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "17495:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17465:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "17465:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "17521:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 819,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "17528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 820,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "17537:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "17512:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17512:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "EmitStatement",
												"src": "17507:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "17253:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "17268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "17285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17252:48:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17310:0:0"
									},
									"scope": 825,
									"src": "17235:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 826,
							"src": "11035:6516:0"
						}
					],
					"src": "67:17484:0"
				},
				"id": 0
			}
		}
	}
}